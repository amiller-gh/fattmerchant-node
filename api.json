{
  "swagger": "2.0",
  "info": {
    "title": "Fattmerchant Omni API",
    "version": "0.0.1",
    "description": "Fattmerchant Omni REST API for Node.js"
  },
  "host": "apiprod.fattlabs.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/ephemeral": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudCI6IjI3ZmFkNWU0LTAyMTAtNGM5MS05NTk2LTQxN2IwZWEwZGJiMSIsInN1YiI6IjZiNWUwMzM3LTgxN2QtNDAyNS04NzI5LTYzNzAxNzMyOTVhOSIsImlzcyI6Imh0dHBzOlwvXC9hcGlkZXYwMS5mYXR0bGFicy5jb21cL2F1dGhlbnRpY2F0ZSIsImlhdCI6MTQ2Mjk4NzI0OSwiZXhwIjoxNDYzMDczNjQ5LCJuYmYiOjE0NjI5ODcyNDksImp0aSI6ImIyMDFjNmNlYWMwNzQyNGUxZGFlZmI2YmUyZjA0MDNkIn0.BUYP6rVs5ylmLM524eA7gY50ECT4reZSO6aZVijLNrM"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "examples": {
              "application/json": {
                "error": "invalid_token"
              }
            }
          }
        },
        "summary": "Generate an Ephemeral Token",
        "operationId": "Generate an Ephemeral Token",
        "description": "**NOTE: This route assumes you have generated an api key within your production OR sandbox OMNI account.**\n\nPassing this api key as your Bearer token (Authorization header), this route will exchange your permanent api key with a short lived ephemeral token to be used for subsequent calls. This route is especially useful for passing the short lived token to a mobile client if you are storing the real api key on your server.\n\nYou should never expose an api key to a browser or client.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/bill/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "a2823496-03b4-459c-80de-3a80b0b3fd22",
                "status": "PARTIALLY APPLIED",
                "total": 12,
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "created_at": "2017-01-11 21:27:24",
                "sent_at": null,
                "viewed_at": "2017-05-05 19:08:11",
                "paid_at": null,
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "balance_due": 12,
                "total_paid": 0,
                "url": "https://omni.fattmerchant.com/#/bill/",
                "merchant": {
                  "company_name": "Here",
                  "contact_phone": "8555503288",
                  "address_1": "25 Wall Street",
                  "address_2": "Suite 1",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "branding": {
                    "id": "af82b215-6081-42b0-b494-fbda189ce8f9",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "name": "",
                    "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/branding/af82b215-6081-42b0-b494-fbda189ce8f9.png",
                    "tag": "branding",
                    "meta": {
                      "filesize_bytes": 3938556,
                      "filesize": "3.94 MB",
                      "extension": "png",
                      "size": {
                        "width": 3072,
                        "height": 1728
                      },
                      "mime": "image/png"
                    },
                    "created_at": "2017-04-19 15:50:41",
                    "updated_at": "2017-04-19 15:50:52",
                    "deleted_at": null
                  },
                  "options": {
                    "social": {
                      "website_url": "http://google.com",
                      "facebook_url": "http://google.com",
                      "instagram_url": "http://google.com",
                      "twitter_url": "http://google.com",
                      "linkedin_url": "http://google.com"
                    }
                  },
                  "allow_ach": true
                },
                "customer": {
                  "email": "john@abc.com",
                  "firstname": "Jesus",
                  "lastname": "Christmas3",
                  "company": "ABC INC"
                },
                "payment_method": null,
                "schedule": null,
                "transactions": [],
                "files": []
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "Invalid bill id."
                ]
              }
            }
          }
        },
        "summary": "Get a Bill's Information",
        "operationId": "Get a Bill's Information",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Bill ID Required**\n\nRetrieves the bill matching the given bill id.\nThis will list any information about the bill which can be seen in the 200 response below.\nThis function will also show the merchant whether or not it has been viewed and when. \nThe bill id can be found in the URL.\n\n**Changes to Responses:**\n\n* Merchant, schedule and customer information is now stored under `merchant[]`, `schedule[]` and `customer[]` objects respectively.\n\n* If an invoice doesn't have a `payment-method`, the `schedule.payment_method` will be `null`.\n\n* When a bill belongs to an inactive schedule, `schedule.active` will be `false`. Making `future_occurrences` an empty set and `next_run_at` is null.\n\n* When inactive, the invoice generator is put on hold. If invoice is `deleted_at`, it will not run or generate future occurrences.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/bill/{id}/payment-method": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "a2823496-03b4-459c-80de-3a80b0b3fd22",
                "status": "PARTIALLY APPLIED",
                "total": 12,
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "created_at": "2017-01-11 21:27:24",
                "sent_at": null,
                "viewed_at": "2017-05-05 19:08:11",
                "paid_at": null,
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "balance_due": 12,
                "total_paid": 0,
                "url": "https://omni.fattmerchant.com/#/bill/",
                "merchant": {
                  "company_name": "Here",
                  "contact_phone": "8555503288",
                  "address_1": "25 Wall Street",
                  "address_2": "Suite 1",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "branding": {
                    "id": "af82b215-6081-42b0-b494-fbda189ce8f9",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "name": "",
                    "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/branding/af82b215-6081-42b0-b494-fbda189ce8f9.png",
                    "tag": "branding",
                    "meta": {
                      "filesize_bytes": 3938556,
                      "filesize": "3.94 MB",
                      "extension": "png",
                      "size": {
                        "width": 3072,
                        "height": 1728
                      },
                      "mime": "image/png"
                    },
                    "created_at": "2017-04-19 15:50:41",
                    "updated_at": "2017-04-19 15:50:52",
                    "deleted_at": null
                  },
                  "options": {
                    "social": {
                      "website_url": "http://google.com",
                      "facebook_url": "http://google.com",
                      "instagram_url": "http://google.com",
                      "twitter_url": "http://google.com",
                      "linkedin_url": "http://google.com"
                    }
                  },
                  "allow_ach": true
                },
                "customer": {
                  "email": "john@abc.com",
                  "firstname": "Jesus",
                  "lastname": "Christmas3",
                  "company": "ABC INC"
                },
                "payment_method": {
                  "id": "56429605-c218-45c5-8993-324bea3c5ba8",
                  "method": "card",
                  "card_type": "mastercard",
                  "card_last_four": "4444",
                  "card_exp": "042018",
                  "nickname": "MASTERCARD: Daniel Walker (ending in: 4444)",
                  "created_at": "2017-05-05 19:20:30"
                },
                "schedule": null,
                "transactions": [],
                "files": []
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "errors": [
                  "Year is expired"
                ]
              }
            }
          }
        },
        "summary": "Create a Payment Method for a Bill",
        "operationId": "Create a Payment Method for a Bill",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nSets the `payment_method` to be the selected bill. \nThe two choice are `card` or `bank`. \nThis function will generated a `payment_method_id` to be passed into the body of `[POST /bill/{id}/pay]'.\nThis sets up the credit card or banking information needed for processing the bill. \nCan only create a `payment_method` and, for security purposes, will not be able to view them.\n`card_type` is not required, but must be less than 10 characters. \nIf not supplied, will auto-detect one of the following: amex, dinersclub, discover, jcb, mastercard, visa or null.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "is_default": {
                  "type": "string"
                },
                "person_name": {
                  "type": "string"
                },
                "card_type": {
                  "type": "string"
                },
                "card_number": {
                  "type": "string"
                },
                "card_exp": {
                  "type": "string"
                },
                "card_cvv": {
                  "type": "string"
                },
                "address_zip": {
                  "type": "string"
                }
              },
              "example": {
                "method": "bank",
                "is_default": "1",
                "person_name": "Bob Smith",
                "card_type": "visa",
                "card_number": "4111111111111111",
                "card_exp": "0417",
                "card_cvv": "4444",
                "address_zip": "34112"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/bill/{id}/pay": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "a2823496-03b4-459c-80de-3a80b0b3fd22",
                "status": "PAID",
                "total": 12,
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "created_at": "2017-01-11 21:27:24",
                "sent_at": null,
                "viewed_at": "2017-05-05 19:41:54",
                "paid_at": "2017-05-05 19:42:04",
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "balance_due": 0,
                "total_paid": 12,
                "url": "https://omni.fattmerchant.com/#/bill/",
                "merchant": {
                  "company_name": "Here",
                  "contact_phone": "8555503288",
                  "address_1": "25 Wall Street",
                  "address_2": "Suite 1",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "branding": {
                    "id": "af82b215-6081-42b0-b494-fbda189ce8f9",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "name": "",
                    "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/branding/af82b215-6081-42b0-b494-fbda189ce8f9.png",
                    "tag": "branding",
                    "meta": {
                      "filesize_bytes": 3938556,
                      "filesize": "3.94 MB",
                      "extension": "png",
                      "size": {
                        "width": 3072,
                        "height": 1728
                      },
                      "mime": "image/png"
                    },
                    "created_at": "2017-04-19 15:50:41",
                    "updated_at": "2017-04-19 15:50:52",
                    "deleted_at": null
                  },
                  "options": {
                    "social": {
                      "website_url": "http://google.com",
                      "facebook_url": "http://google.com",
                      "instagram_url": "http://google.com",
                      "twitter_url": "http://google.com",
                      "linkedin_url": "http://google.com"
                    }
                  },
                  "allow_ach": true
                },
                "customer": {
                  "email": "john@abc.com",
                  "firstname": "Jesus",
                  "lastname": "Christmas3",
                  "company": "ABC INC"
                },
                "payment_method": {
                  "id": "0e0c52f9-4988-4bcc-ac27-6fc463279259",
                  "method": "card",
                  "card_type": "mastercard",
                  "card_last_four": "4444",
                  "card_exp": "042018",
                  "nickname": "MASTERCARD: Daniel Walker (ending in: 4444)",
                  "created_at": "2017-05-05 19:41:55"
                },
                "schedule": null,
                "transactions": [
                  {
                    "id": "5f38f04f-dc2f-44c4-ba3a-385c90dfeb0b",
                    "invoice_id": "a2823496-03b4-459c-80de-3a80b0b3fd22",
                    "success": true,
                    "message": null,
                    "type": "charge",
                    "created_at": "2017-05-05 19:42:03",
                    "last_four": "4444",
                    "total": 12,
                    "method": "card",
                    "total_refunded": null,
                    "is_voided": false,
                    "schedule_id": null,
                    "customer": null,
                    "child_transactions": [],
                    "files": [],
                    "payment_method": null,
                    "user": null
                  }
                ],
                "files": []
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "paid_at": [
                  "The bill is already paid."
                ]
              }
            }
          }
        },
        "summary": "Pay a Bill",
        "operationId": "Pay a Bill",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Unpaid Bill ID Required**\n\nThis processes the bill and sends the money from the customer to the merchant. \nThe payment method charged is given in the `[POST /bill/{id}/payment-method]` call and passed into this call.\nThe invoice tied to the bill will be updated to a `paid` status.\nOnce fully paided off, the bill can no longer be edited and cannot be charged again.\nIt is possible for a customer to partially pay a bill and pay the rest later.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payment_method_id": {
                  "type": "string"
                },
                "email_receipt": {
                  "type": "string"
                }
              },
              "example": {
                "payment_method_id": "d907e172-78a5-49ae-b233-f525c8a7e5bc",
                "email_receipt": "1"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/item": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "total": 2,
                "per_page": 25,
                "current_page": 1,
                "last_page": 1,
                "next_page_url": null,
                "prev_page_url": null,
                "from": 1,
                "to": 2,
                "data": [
                  {
                    "id": "79256d84-3930-4e4b-bc71-9c6587cfc65c",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "thumbnail_id": null,
                    "item": "meeseeks",
                    "code": "aaaa",
                    "details": "just a test item",
                    "is_active": true,
                    "is_taxable": false,
                    "is_service": false,
                    "is_discount": false,
                    "price": 7.11,
                    "in_stock": 0,
                    "meta": [],
                    "created_at": "2017-05-05 19:49:21",
                    "updated_at": "2017-05-05 19:49:21",
                    "deleted_at": null,
                    "deprecation_warning": "The name and decription fiels will be deprecated on 7/1/17",
                    "user": {
                      "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "system_admin": false,
                      "name": "Test Guy",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2017-03-29 15:27:19",
                      "email_verified_at": "2017-03-29 15:27:21",
                      "is_api_key": false,
                      "created_at": "2017-01-11 21:44:02",
                      "updated_at": "2017-04-24 15:41:58",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null
                    },
                    "files": [],
                    "thumbnail": null
                  },
                  {
                    "id": "62c6c812-36e6-4037-9569-caa1dfe968de",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "thumbnail_id": null,
                    "item": "Meeseeks Box",
                    "code": null,
                    "details": null,
                    "is_active": true,
                    "is_taxable": false,
                    "is_service": true,
                    "is_discount": true,
                    "price": 55,
                    "in_stock": 0,
                    "meta": [],
                    "created_at": "2017-05-05 19:55:05",
                    "updated_at": "2017-05-05 19:55:06",
                    "deleted_at": null,
                    "deprecation_warning": "The name and decription fiels will be deprecated on 7/1/17",
                    "user": {
                      "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "system_admin": false,
                      "name": "test guy",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2017-03-29 15:27:19",
                      "email_verified_at": "2017-03-29 15:27:21",
                      "is_api_key": false,
                      "created_at": "2017-01-11 21:44:02",
                      "updated_at": "2017-04-24 15:41:58",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null
                    },
                    "files": [
                      {
                        "id": "cc5d4376-8a76-4de1-8fc1-b9135be5f26f",
                        "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                        "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                        "name": "meeseeks.png",
                        "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/cc5d4376-8a76-4de1-8fc1-b9135be5f26f.png",
                        "tag": null,
                        "meta": {
                          "filesize_bytes": 14181,
                          "filesize": "0.14 kB",
                          "extension": "png",
                          "size": {
                            "width": 128,
                            "height": 128
                          },
                          "mime": "image/png"
                        },
                        "created_at": "2017-05-05 19:55:00",
                        "updated_at": "2017-05-05 19:55:01",
                        "deleted_at": null
                      }
                    ],
                    "thumbnail": null
                  }
                ]
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "sort": [
                  "The selected sort is invalid."
                ],
                "order": [
                  "The selected order is invalid."
                ],
                "is_active": [
                  "The is active field must be true or false."
                ]
              }
            }
          }
        },
        "summary": "Retrieve All Catalog Items",
        "operationId": "Retrieve All Catalog Items",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nRetrieves all the items saved under a merchant's catalog.\nThe items may be searched using keywords to find specific items, such as using `keywords[]=red`.\nThe items may also be filtered and sorted using certain parameters found below.\nName and description fields will be deprecated on 07/01/17.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "9cf3bd88-da1b-4f35-a5a1-74153c8e7f28",
                "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                "merchant_id": "a61d78cc-cde9-44ac-8a18-30c39be05879",
                "thumbnail_id": null,
                "item": "test item",
                "code": "aaaa",
                "category": "essential items",
                "details": "just a test item",
                "is_active": true,
                "is_taxable": false,
                "is_service": false,
                "is_subscription": false,
                "is_discount": false,
                "price": 7.11,
                "in_stock": 0,
                "low_stock_alert": 3,
                "meta": [],
                "created_at": "2018-10-02 14:28:50",
                "updated_at": "2018-10-02 14:28:50",
                "deleted_at": null,
                "user": {
                  "id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                  "system_admin": true,
                  "name": "Morty Junior",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2018-09-26 18:24:21",
                  "email_verified_at": "2016-05-11 17:13:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "signedApplication": true,
                    "editedOnboardingInformation": false,
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-18 14:11:46",
                  "updated_at": "2018-09-26 18:24:21",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_default": false
                },
                "files": [],
                "thumbnail": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "item": [
                  "The item field is required."
                ]
              }
            }
          }
        },
        "summary": "Create a Catalog Item",
        "operationId": "Create a Catalog Item",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nCreates an item to be stored in a merchant's catalog.\nDoesn't require any fields, but is recommended to give it a name and code.\nThe item uses `is_active`, `is_taxable`, `is_service` or `is_discount` to denote whether the item is actively sold, taxable, a service or discounted respectively.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "is_taxable": {
                  "type": "boolean"
                },
                "is_service": {
                  "type": "boolean"
                },
                "is_discount": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number"
                },
                "in_stock": {
                  "type": "number"
                },
                "low_stock_alert": {
                  "type": "number"
                },
                "meta": {
                  "type": "object",
                  "properties": {}
                }
              },
              "example": {
                "item": "test item",
                "code": "aaaa",
                "category": "essential items",
                "details": "just a test item",
                "is_active": true,
                "is_taxable": false,
                "is_service": false,
                "is_discount": false,
                "price": 7.11,
                "in_stock": 0,
                "low_stock_alert": 3,
                "meta": {}
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/item/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "79256d84-3930-4e4b-bc71-9c6587cfc65c",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "thumbnail_id": null,
                "item": "meeseeks",
                "code": "aaaa",
                "details": "just a test item",
                "is_active": true,
                "is_taxable": false,
                "is_service": false,
                "is_discount": false,
                "price": 7.11,
                "in_stock": 0,
                "meta": [],
                "created_at": "2017-05-05 19:49:21",
                "updated_at": "2017-05-05 19:49:21",
                "deleted_at": null,
                "deprecation_warning": "The name and decription fiels will be deprecated on 7/1/17",
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Test Guy",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                },
                "files": [],
                "thumbnail": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The item was not found"
                ]
              }
            }
          }
        },
        "summary": "Retrieve an Item by ID",
        "operationId": "Retrieve an Item by ID",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nRetrieves the merchant's item matching the given id and then returns details about the item found in the 200 response below.\nThis can be used in conjunction with `PUT /item/{id}` to edit the item.\nName and description fields will be deprecated on 07/01/17.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "4cddf784-55d4-4dcb-a266-1eb5af051e01",
                "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                "merchant_id": "a61d78cc-cde9-44ac-8a18-30c39be05879",
                "thumbnail_id": null,
                "item": "test item",
                "code": "aaaa",
                "category": "essential items",
                "details": "just a test item",
                "is_active": true,
                "is_taxable": false,
                "is_service": false,
                "is_subscription": false,
                "is_discount": false,
                "price": 7.11,
                "in_stock": 0,
                "low_stock_alert": 3,
                "meta": [],
                "created_at": "2018-10-02 14:30:48",
                "updated_at": "2018-10-02 14:30:48",
                "deleted_at": null,
                "user": {
                  "id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                  "system_admin": true,
                  "name": "Morty Junior",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2018-09-26 18:24:21",
                  "email_verified_at": "2016-05-11 17:13:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "signedApplication": true,
                    "editedOnboardingInformation": false,
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-18 14:11:46",
                  "updated_at": "2018-09-26 18:24:21",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_default": false
                },
                "files": [],
                "thumbnail": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "item": [
                  "The item field is required."
                ]
              }
            }
          }
        },
        "summary": "Update an Item",
        "operationId": "Update an Item",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nUpdates/edits any existing catalog item that matches the given id.\nHas the same inputted body as `[POST /item]`.\nNone of the given parameters are required, but name and code are at least recommended.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "is_taxable": {
                  "type": "boolean"
                },
                "is_service": {
                  "type": "boolean"
                },
                "is_discount": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number"
                },
                "in_stock": {
                  "type": "number"
                },
                "low_stock_alert": {
                  "type": "number"
                },
                "meta": {
                  "type": "object",
                  "properties": {}
                }
              },
              "example": {
                "item": "test item",
                "code": "aaaa",
                "category": "essential items",
                "details": "just a test item",
                "is_active": true,
                "is_taxable": false,
                "is_service": false,
                "is_discount": false,
                "price": 7.11,
                "in_stock": 0,
                "low_stock_alert": 3,
                "meta": {}
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/item/code": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                "aaaa",
                "bbbb",
                null,
                "cccc",
                "fdaf"
              ]
            }
          }
        },
        "summary": "Retrieve All Item Codes",
        "operationId": "Retrieve All Item Codes",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThe item code is merchant-side code used for business to keep track of their items.\nThis will retrieve all the different codes used by catalog items in a list.\nAny items without a code will return a `null`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/item/{id}/increment": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "0a6c966c-6a70-44eb-aa26-673310ca65c0",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "thumbnail_id": null,
                "item": "Soap 2.0",
                "code": "aaaa",
                "details": "Even cleaner time",
                "is_active": true,
                "is_taxable": false,
                "is_service": false,
                "is_discount": false,
                "price": 7.11,
                "in_stock": 1,
                "meta": [],
                "created_at": "2017-05-05 20:13:12",
                "updated_at": "2017-05-05 20:15:55",
                "deleted_at": null,
                "deprecation_warning": "The name and decription fiels will be deprecated on 7/1/17",
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Test guy",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                },
                "files": [],
                "thumbnail": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The item was not found"
                ]
              }
            }
          }
        },
        "summary": "Increment Item's Stock",
        "operationId": "Increment Item's Stock",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nIncreases the stock of an item.\nThis increases `in_stock` by quantity given in the body.\nCalled anytime the merchant wants to add more of an item to their inventory.\nCould only fail if no item is found.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number"
                }
              },
              "example": {
                "quantity": 1
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/item/{id}/decrement": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "0a6c966c-6a70-44eb-aa26-673310ca65c0",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "thumbnail_id": null,
                "item": "Soap 2.0",
                "code": "aaaa",
                "details": "Even cleaner time",
                "is_active": true,
                "is_taxable": false,
                "is_service": false,
                "is_discount": false,
                "price": 7.11,
                "in_stock": -9,
                "meta": [],
                "created_at": "2017-05-05 20:13:12",
                "updated_at": "2017-05-05 20:16:21",
                "deleted_at": null,
                "deprecation_warning": "The name and decription fiels will be deprecated on 7/1/17",
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Test Guy",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                },
                "files": [],
                "thumbnail": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The item was not found"
                ]
              }
            }
          }
        },
        "summary": "Decrement Item's Stock",
        "operationId": "Decrement Item's Stock",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nDecreases the stock of an item.\nDecreases `in_stock` by quantity given in the body.\nThis is to be called whenever less of an item is available, such as a customer purchasing the item.\nCould only fail if no item is found.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number"
                }
              },
              "example": {
                "quantity": 1
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/charge": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {},
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The `id` of this transaction."
                },
                "invoice_id": {
                  "type": "string",
                  "description": "The id of the Invoice associated with this transaction (if any)."
                },
                "reference_id": {
                  "type": "string",
                  "description": "The id of the parent transaction. Will only be filled if this transaction is a child refund or void of a tranasction."
                },
                "schedule_id": {
                  "type": "string",
                  "description": "The id of the associated Schedule for this transaction (if any)."
                },
                "auth_id": {
                  "type": "string",
                  "description": "The if of the associated pre-auth transaction for this transaction (if this transaction is a `capture`)."
                },
                "recurring_transaction_id": {
                  "type": "string",
                  "description": "Deprecated. Do not use."
                },
                "type": {
                  "type": "string",
                  "description": "The `type` of this transaction. Possible values are `\"charge\", \"void\", \"refund\", \"credit\", \"pre_auth\", \"capture\"`."
                },
                "source": {
                  "type": "string",
                  "description": "The `source` of this transaction. Will be empty if this transaction originated in Omni, but will have a value if this transaction came from an external source such as a Terminal or Mobile Reader."
                },
                "merchant_id": {
                  "type": "string",
                  "description": "The id of the Merchant that owns this transaction."
                },
                "user_id": {
                  "type": "string",
                  "description": "The id of the User who made this transaction."
                },
                "customer_id": {
                  "type": "string",
                  "description": "The id of the Customer associated with this transaction."
                },
                "payment_method_id": {
                  "type": "string",
                  "description": "The id of the Payment Method associated with this transaction."
                },
                "success": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was successful."
                },
                "message": {
                  "type": "string",
                  "description": "The error message if this transaction was unsuccessful."
                },
                "meta": {
                  "type": "object",
                  "properties": {},
                  "description": "Metadata for this transaction (if any). Usually will only contain what you place into it when running POST /charge or similar calls."
                },
                "total": {
                  "type": "number",
                  "description": "The `total` of this transaction."
                },
                "method": {
                  "type": "string",
                  "description": "The `method` of this transaction. Possible values are `\"card\", \"bank\", \"cash\", \"check\", \"giftcard\"`."
                },
                "pre_auth": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is a pre-authorization."
                },
                "last_four": {
                  "type": "string",
                  "description": "The `last_four` of the Payment Method card number for this transaction (if any)."
                },
                "receipt_email_at": {
                  "type": "string",
                  "description": "When the email receipt was sent for this transaction."
                },
                "receipt_sms_at": {
                  "type": "string",
                  "description": "When the sms receipt was sent for this transaction."
                },
                "settled_at": {
                  "type": "string",
                  "description": "When this transaction was settled."
                },
                "created_at": {
                  "type": "string",
                  "description": "When this transaction was created."
                },
                "updated_at": {
                  "type": "string",
                  "description": "When this transaction was last modified."
                },
                "issuer_auth_code": {
                  "type": "string",
                  "description": "The gateway authorization code for this transactions. Transactions originating outside of Omni may not have an `issuer_auth_code`."
                },
                "total_refunded": {
                  "type": "string",
                  "description": "The total amount of any refunds for this transaction (if any)."
                },
                "is_manual": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was made for accounting purposes, such as a cash transaction."
                },
                "is_refundable": {
                  "type": "string",
                  "description": "Whether or not this transaction is refundable."
                },
                "is_voidable": {
                  "type": "string",
                  "description": "Whether or not this transaction is voidable."
                },
                "is_voided": {
                  "type": "string",
                  "description": "Whether or not this transaction is voided. (To see if a transaction is refunded, check that `total_refunded > 0`)"
                },
                "is_settling": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is still settling. Will always be `null` for non-ACH transactions. May have a boolean value if this transaction was made on an ACH Gateway."
                },
                "child_transactions": {
                  "description": "Any child Transactions for this transaction. Examples of child transactions include refunds, voids, and captures (if this transaction is a pre-auth)."
                },
                "files": {
                  "description": "The Files attached to this transaction (if any)."
                },
                "customer": {
                  "type": "object",
                  "properties": {},
                  "description": "The Customer for this transaction."
                },
                "payment_method": {
                  "type": "object",
                  "properties": {},
                  "description": "The Payment Method for this transaction."
                },
                "user": {
                  "type": "object",
                  "properties": {},
                  "description": "The User for this transaction."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "566704dd-416a-4ae0-93a8-e81df7f79ba1",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "charge",
                "source": null,
                "source_ip": "127.0.0.1",
                "is_merchant_present": true,
                "merchant_id": "6eed6a43-fba3-4aeb-8f53-94df81e82be3",
                "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                "customer_id": "78caa49b-3e57-440a-afbb-4c7965297624",
                "payment_method_id": "c22c93fd-a5c3-4feb-b7d2-6950e53fdd99",
                "is_manual": null,
                "success": false,
                "message": "Unable to process the purchase transaction.",
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "total": 1,
                "method": "card",
                "pre_auth": false,
                "is_captured": 0,
                "last_four": "1881",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2019-07-25 13:13:43",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "settled_at": null,
                "created_at": "2019-07-25 18:13:43",
                "updated_at": "2019-07-25 18:13:43",
                "gateway_id": "231af4e4-e5a0-4cba-98f8-2bfb7badc0b8",
                "issuer_auth_code": null,
                "total_refunded": 0,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": false,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "gateway_name": "test",
                "response": {
                  "on_test_gateway": true,
                  "created_at": "2019-07-25T18:13:43Z",
                  "updated_at": "2019-07-25T18:13:43Z",
                  "succeeded": false,
                  "state": "gateway_processing_failed",
                  "token": "aNZRAwf2v7814VIloNNgMzOJ8TU",
                  "transaction_type": "Purchase",
                  "order_id": "566704dd-416a-4ae0-93a8-e81df7f79ba1",
                  "ip": null,
                  "description": "",
                  "email": null,
                  "merchant_name_descriptor": "Other company",
                  "merchant_location_descriptor": "https://omni.fattmerchant.com",
                  "gateway_specific_fields": null,
                  "gateway_specific_response_fields": [],
                  "gateway_transaction_id": null,
                  "gateway_latency_ms": 22,
                  "amount": 100,
                  "currency_code": "USD",
                  "retain_on_success": true,
                  "payment_method_added": false,
                  "message": "Unable to process the purchase transaction.",
                  "gateway_token": "EtmNQvmL1MUipNNB6RKgY0fTtci",
                  "gateway_type": "test",
                  "response": {
                    "success": false,
                    "message": "Unable to process the purchase transaction.",
                    "avs_code": null,
                    "avs_message": null,
                    "cvv_code": null,
                    "cvv_message": null,
                    "pending": false,
                    "result_unknown": false,
                    "error_code": null,
                    "error_detail": null,
                    "cancelled": false,
                    "fraud_review": null,
                    "created_at": "2019-07-25T18:13:43Z",
                    "updated_at": "2019-07-25T18:13:43Z"
                  },
                  "shipping_address": {
                    "name": "Steven Smith Jr.",
                    "address1": null,
                    "address2": null,
                    "city": null,
                    "state": null,
                    "zip": null,
                    "country": null,
                    "phone_number": null
                  },
                  "api_urls": [
                    {
                      "referencing_transaction": []
                    }
                  ],
                  "payment_method": {
                    "token": "ONBwUMjQ0gIzXOsEQg8MX3bxQwd",
                    "created_at": "2019-07-25T18:13:32Z",
                    "updated_at": "2019-07-25T18:13:32Z",
                    "email": "demo@abc.com",
                    "data": {
                      "customer": "78caa49b-3e57-440a-afbb-4c7965297624",
                      "nickname": "VISA: Steven Smith Jr. (ending in: 1881)"
                    },
                    "storage_state": "retained",
                    "test": true,
                    "metadata": null,
                    "callback_url": null,
                    "last_four_digits": "1881",
                    "first_six_digits": "401288",
                    "card_type": "visa",
                    "first_name": "Steven Smith",
                    "last_name": "Jr.",
                    "month": 4,
                    "year": 2027,
                    "address1": null,
                    "address2": null,
                    "city": null,
                    "state": null,
                    "zip": "32944",
                    "country": "USA",
                    "phone_number": "9049626353",
                    "company": "ABC INC",
                    "full_name": "Steven Smith Jr.",
                    "eligible_for_card_updater": true,
                    "shipping_address1": null,
                    "shipping_address2": null,
                    "shipping_city": null,
                    "shipping_state": null,
                    "shipping_zip": null,
                    "shipping_country": null,
                    "shipping_phone_number": null,
                    "payment_method_type": "credit_card",
                    "errors": [],
                    "fingerprint": "73ae2e51e8f7f5177842661cc5451ef74328",
                    "verification_value": "XXX",
                    "number": "XXXX-XXXX-XXXX-1881"
                  }
                },
                "customer": {
                  "id": "78caa49b-3e57-440a-afbb-4c7965297624",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "cc_sms": [
                    "9202856700"
                  ],
                  "phone": "9049626353",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": "Reference:402320 Code:CCSM Zone:NWBC",
                  "reference": "BARTLE",
                  "options": null,
                  "created_at": "2019-05-15 14:06:29",
                  "updated_at": "2019-05-20 15:21:14",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "c22c93fd-a5c3-4feb-b7d2-6950e53fdd99",
                  "customer_id": "78caa49b-3e57-440a-afbb-4c7965297624",
                  "merchant_id": "6eed6a43-fba3-4aeb-8f53-94df81e82be3",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1881)",
                  "has_cvv": 1,
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1881",
                  "card_exp": "042027",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2019-07-25 18:13:32",
                  "updated_at": "2019-07-25 18:13:32",
                  "meta": null,
                  "bin_type": null,
                  "card_exp_datetime": "2027-04-30 23:59:59",
                  "is_usable_in_vt": true,
                  "customer": {
                    "id": "78caa49b-3e57-440a-afbb-4c7965297624",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "cc_sms": [
                      "9202856700"
                    ],
                    "phone": "9049626353",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": "Reference:402320 Code:CCSM Zone:NWBC",
                    "reference": "BARTLE",
                    "options": null,
                    "created_at": "2019-05-15 14:06:29",
                    "updated_at": "2019-05-20 15:21:14",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "user": {
                  "id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "system_admin": true,
                  "name": "Daniel Walker",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2018-05-31 20:22:05",
                  "email_verified_at": "2017-12-14 17:34:57",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "editedOnboardingInformation": true,
                    "signedApplicationPowerform": true,
                    "godviewOmniSearchTooltip": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2017-12-14 17:34:57",
                  "updated_at": "2018-07-02 21:51:45",
                  "deleted_at": null,
                  "brand": "fattmerchant",
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_default": false
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The `id` of this transaction."
                },
                "invoice_id": {
                  "type": "string",
                  "description": "The id of the Invoice associated with this transaction (if any)."
                },
                "reference_id": {
                  "type": "string",
                  "description": "The id of the parent transaction. Will only be filled if this transaction is a child refund or void of a tranasction."
                },
                "schedule_id": {
                  "type": "string",
                  "description": "The id of the associated Schedule for this transaction (if any)."
                },
                "auth_id": {
                  "type": "string",
                  "description": "The if of the associated pre-auth transaction for this transaction (if this transaction is a `capture`)."
                },
                "recurring_transaction_id": {
                  "type": "string",
                  "description": "Deprecated. Do not use."
                },
                "type": {
                  "type": "string",
                  "description": "The `type` of this transaction. Possible values are `\"charge\", \"void\", \"refund\", \"credit\", \"pre_auth\", \"capture\"`."
                },
                "source": {
                  "type": "string",
                  "description": "The `source` of this transaction. Will be empty if this transaction originated in Omni, but will have a value if this transaction came from an external source such as a Terminal or Mobile Reader."
                },
                "merchant_id": {
                  "type": "string",
                  "description": "The id of the Merchant that owns this transaction."
                },
                "user_id": {
                  "type": "string",
                  "description": "The id of the User who made this transaction."
                },
                "customer_id": {
                  "type": "string",
                  "description": "The id of the Customer associated with this transaction."
                },
                "payment_method_id": {
                  "type": "string",
                  "description": "The id of the Payment Method associated with this transaction."
                },
                "success": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was successful."
                },
                "message": {
                  "type": "string",
                  "description": "The error message if this transaction was unsuccessful."
                },
                "meta": {
                  "type": "object",
                  "properties": {},
                  "description": "Metadata for this transaction (if any). Usually will only contain what you place into it when running POST /charge or similar calls."
                },
                "total": {
                  "type": "number",
                  "description": "The `total` of this transaction."
                },
                "method": {
                  "type": "string",
                  "description": "The `method` of this transaction. Possible values are `\"card\", \"bank\", \"cash\", \"check\", \"giftcard\"`."
                },
                "pre_auth": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is a pre-authorization."
                },
                "last_four": {
                  "type": "string",
                  "description": "The `last_four` of the Payment Method card number for this transaction (if any)."
                },
                "receipt_email_at": {
                  "type": "string",
                  "description": "When the email receipt was sent for this transaction."
                },
                "receipt_sms_at": {
                  "type": "string",
                  "description": "When the sms receipt was sent for this transaction."
                },
                "settled_at": {
                  "type": "string",
                  "description": "When this transaction was settled."
                },
                "created_at": {
                  "type": "string",
                  "description": "When this transaction was created."
                },
                "updated_at": {
                  "type": "string",
                  "description": "When this transaction was last modified."
                },
                "issuer_auth_code": {
                  "type": "string",
                  "description": "The gateway authorization code for this transactions. Transactions originating outside of Omni may not have an `issuer_auth_code`."
                },
                "total_refunded": {
                  "type": "string",
                  "description": "The total amount of any refunds for this transaction (if any)."
                },
                "is_manual": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was made for accounting purposes, such as a cash transaction."
                },
                "is_refundable": {
                  "type": "string",
                  "description": "Whether or not this transaction is refundable."
                },
                "is_voidable": {
                  "type": "string",
                  "description": "Whether or not this transaction is voidable."
                },
                "is_voided": {
                  "type": "string",
                  "description": "Whether or not this transaction is voided. (To see if a transaction is refunded, check that `total_refunded > 0`)"
                },
                "is_settling": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is still settling. Will always be `null` for non-ACH transactions. May have a boolean value if this transaction was made on an ACH Gateway."
                },
                "child_transactions": {
                  "description": "Any child Transactions for this transaction. Examples of child transactions include refunds, voids, and captures (if this transaction is a pre-auth)."
                },
                "files": {
                  "description": "The Files attached to this transaction (if any)."
                },
                "customer": {
                  "type": "object",
                  "properties": {},
                  "description": "The Customer for this transaction."
                },
                "payment_method": {
                  "type": "object",
                  "properties": {},
                  "description": "The Payment Method for this transaction."
                },
                "user": {
                  "type": "object",
                  "properties": {},
                  "description": "The User for this transaction."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "payment_method_id": [
                  "The payment method id field is required."
                ],
                "meta": [
                  "The meta field is required."
                ],
                "total": [
                  "The total field is required."
                ],
                "files.0": [
                  "The selected files.0 is invalid."
                ]
              }
            }
          }
        },
        "summary": "Charge a Payment Method",
        "operationId": "Charge a Payment Method",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nCharge is a primary action of the API which posts to a backend processor for the merchant. \nA transaction record with type charge is created within the Fattmerchant database as a record of the charge.\nUsing the `payment_method_ID` and `total_cost`, a charge is processed under the merchant's account.\n\nFrom a processor standpoint, this operation is an auth and a capture represented by one transaction record (also called a purchase).\n\n**Chart of response statuses:**\n\n- Status 200 - transaction object (success = 1)\n\n- Status 422 - validation errors object. The transaction didn't reach a gateway\n\n- Status 400 - transaction object (success = 0). This was a gateway error\n    - The transaction didn't reach a gateway but there weren't validation errors\n    - `message` will have a cause (string)\n\n- Status 500 - unknown issue - please contact Fattmerchant\n    - an error we aren't accounting for\n\nPlease see the payment methods section for triggering success/fail based on card and bank account numbers.\n\n<a href=\"https://omni.fattmerchant.com/#/settings?initialTab=Webhooks\">This call will fire the `create_transaction` webhook.</a>.\n\n**Note about pre authorizations: [please see the guide here](https://fattmerchant.docs.apiary.io/#introduction/process-payments-from-server-side-with-api-key./pre-authorizations)**",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/verify": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "2f2c2b7f-ae85-45af-8120-f05c242cedfe",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "pre_auth",
                "source": null,
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "payment_method_id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "total": 1,
                "method": "card",
                "pre_auth": true,
                "last_four": "1111",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2017-05-08 20:24:28",
                "updated_at": "2017-05-08 20:24:28",
                "total_refunded": null,
                "is_refundable": false,
                "is_voided": true,
                "is_voidable": false,
                "schedule_id": null,
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "child_transactions": [
                  {
                    "id": "612bc846-39b2-4e83-9795-34cd0c6abcff",
                    "invoice_id": "",
                    "reference_id": "2f2c2b7f-ae85-45af-8120-f05c242cedfe",
                    "recurring_transaction_id": "",
                    "type": "void",
                    "source": null,
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "payment_method_id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                    "is_manual": null,
                    "success": true,
                    "message": null,
                    "meta": {
                      "tax": 2,
                      "subtotal": 10
                    },
                    "total": 1,
                    "method": "card",
                    "pre_auth": false,
                    "last_four": "1111",
                    "receipt_email_at": null,
                    "receipt_sms_at": null,
                    "created_at": "2017-05-08 20:24:29",
                    "updated_at": "2017-05-08 20:24:29",
                    "total_refunded": null,
                    "is_refundable": false,
                    "is_voided": null,
                    "is_voidable": false,
                    "schedule_id": null,
                    "customer": {
                      "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@abc.com",
                      "cc_emails": [
                        "demo1@abc.com",
                        "demo2@abc.com"
                      ],
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-05-08 19:22:51",
                      "updated_at": "2017-05-08 19:23:46",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                    },
                    "child_transactions": [],
                    "files": [],
                    "payment_method": {
                      "id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                      "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                      "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                      "is_default": 1,
                      "method": "card",
                      "person_name": "Steven Smith Jr.",
                      "card_type": "visa",
                      "card_last_four": "1111",
                      "card_exp": "042019",
                      "bank_name": null,
                      "bank_type": null,
                      "bank_holder_type": null,
                      "address_1": null,
                      "address_2": null,
                      "address_city": null,
                      "address_state": null,
                      "address_zip": "32944",
                      "address_country": "USA",
                      "purged_at": null,
                      "deleted_at": null,
                      "created_at": "2017-05-08 19:41:03",
                      "updated_at": "2017-05-08 19:41:03",
                      "card_exp_datetime": "2019-04-30 23:59:59",
                      "customer": {
                        "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                        "firstname": "John",
                        "lastname": "Smith",
                        "company": "ABC INC",
                        "email": "demo@abc.com",
                        "cc_emails": [
                          "demo1@abc.com",
                          "demo2@abc.com"
                        ],
                        "phone": "1234567898",
                        "address_1": "123 Rite Way",
                        "address_2": "Unit 12",
                        "address_city": "Orlando",
                        "address_state": "FL",
                        "address_zip": "32801",
                        "address_country": "USA",
                        "notes": null,
                        "reference": "BARTLE",
                        "options": "",
                        "created_at": "2017-05-08 19:22:51",
                        "updated_at": "2017-05-08 19:23:46",
                        "deleted_at": null,
                        "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                      }
                    },
                    "user": {
                      "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "system_admin": false,
                      "name": "Demo",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2017-03-29 15:27:19",
                      "email_verified_at": "2017-03-29 15:27:21",
                      "is_api_key": false,
                      "created_at": "2017-01-11 21:44:02",
                      "updated_at": "2017-04-24 15:41:58",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null
                    }
                  }
                ],
                "files": [],
                "payment_method": {
                  "id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-08 19:41:03",
                  "updated_at": "2017-05-08 19:41:03",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Demo",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The `id` of this transaction."
                },
                "invoice_id": {
                  "type": "string",
                  "description": "The id of the Invoice associated with this transaction (if any)."
                },
                "reference_id": {
                  "type": "string",
                  "description": "The id of the parent transaction. Will only be filled if this transaction is a child refund or void of a tranasction."
                },
                "schedule_id": {
                  "type": "string",
                  "description": "The id of the associated Schedule for this transaction (if any)."
                },
                "auth_id": {
                  "type": "string",
                  "description": "The if of the associated pre-auth transaction for this transaction (if this transaction is a `capture`)."
                },
                "recurring_transaction_id": {
                  "type": "string",
                  "description": "Deprecated. Do not use."
                },
                "type": {
                  "type": "string",
                  "description": "The `type` of this transaction. Possible values are `\"charge\", \"void\", \"refund\", \"credit\", \"pre_auth\", \"capture\"`."
                },
                "source": {
                  "type": "string",
                  "description": "The `source` of this transaction. Will be empty if this transaction originated in Omni, but will have a value if this transaction came from an external source such as a Terminal or Mobile Reader."
                },
                "merchant_id": {
                  "type": "string",
                  "description": "The id of the Merchant that owns this transaction."
                },
                "user_id": {
                  "type": "string",
                  "description": "The id of the User who made this transaction."
                },
                "customer_id": {
                  "type": "string",
                  "description": "The id of the Customer associated with this transaction."
                },
                "payment_method_id": {
                  "type": "string",
                  "description": "The id of the Payment Method associated with this transaction."
                },
                "success": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was successful."
                },
                "message": {
                  "type": "string",
                  "description": "The error message if this transaction was unsuccessful."
                },
                "meta": {
                  "type": "object",
                  "properties": {},
                  "description": "Metadata for this transaction (if any). Usually will only contain what you place into it when running POST /charge or similar calls."
                },
                "total": {
                  "type": "number",
                  "description": "The `total` of this transaction."
                },
                "method": {
                  "type": "string",
                  "description": "The `method` of this transaction. Possible values are `\"card\", \"bank\", \"cash\", \"check\", \"giftcard\"`."
                },
                "pre_auth": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is a pre-authorization."
                },
                "last_four": {
                  "type": "string",
                  "description": "The `last_four` of the Payment Method card number for this transaction (if any)."
                },
                "receipt_email_at": {
                  "type": "string",
                  "description": "When the email receipt was sent for this transaction."
                },
                "receipt_sms_at": {
                  "type": "string",
                  "description": "When the sms receipt was sent for this transaction."
                },
                "settled_at": {
                  "type": "string",
                  "description": "When this transaction was settled."
                },
                "created_at": {
                  "type": "string",
                  "description": "When this transaction was created."
                },
                "updated_at": {
                  "type": "string",
                  "description": "When this transaction was last modified."
                },
                "issuer_auth_code": {
                  "type": "string",
                  "description": "The gateway authorization code for this transactions. Transactions originating outside of Omni may not have an `issuer_auth_code`."
                },
                "total_refunded": {
                  "type": "string",
                  "description": "The total amount of any refunds for this transaction (if any)."
                },
                "is_manual": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was made for accounting purposes, such as a cash transaction."
                },
                "is_refundable": {
                  "type": "string",
                  "description": "Whether or not this transaction is refundable."
                },
                "is_voidable": {
                  "type": "string",
                  "description": "Whether or not this transaction is voidable."
                },
                "is_voided": {
                  "type": "string",
                  "description": "Whether or not this transaction is voided. (To see if a transaction is refunded, check that `total_refunded > 0`)"
                },
                "is_settling": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is still settling. Will always be `null` for non-ACH transactions. May have a boolean value if this transaction was made on an ACH Gateway."
                },
                "child_transactions": {
                  "description": "Any child Transactions for this transaction. Examples of child transactions include refunds, voids, and captures (if this transaction is a pre-auth)."
                },
                "files": {
                  "description": "The Files attached to this transaction (if any)."
                },
                "customer": {
                  "type": "object",
                  "properties": {},
                  "description": "The Customer for this transaction."
                },
                "payment_method": {
                  "type": "object",
                  "properties": {},
                  "description": "The Payment Method for this transaction."
                },
                "user": {
                  "type": "object",
                  "properties": {},
                  "description": "The User for this transaction."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "11cff7fc-49fb-4fb4-9053-b3e10dcb6393",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "pre_auth",
                "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                "user_id": "d1309183-a491-450b-996c-a8502fe02375",
                "customer_id": "b1757304-1bfb-4224-aab6-b8cc2aaccacf",
                "payment_method_id": "958d8452-f07b-4aa7-b109-1be36bf5f93f",
                "is_manual": null,
                "success": 0,
                "message": "Unable to process the authorize transaction.",
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "total": 1,
                "method": "card",
                "pre_auth": 1,
                "last_four": "1881",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2016-06-06 14:32:52",
                "updated_at": "2016-06-06 14:32:53",
                "total_refunded": null,
                "is_voided": null,
                "customer": {
                  "id": "b1757304-1bfb-4224-aab6-b8cc2aaccacf",
                  "firstname": "Duff",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "john@abc.com",
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "options": "",
                  "created_at": "2016-06-06 13:55:15",
                  "updated_at": "2016-06-06 13:55:15",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                },
                "child_transactions": [],
                "payment_method": {
                  "id": "958d8452-f07b-4aa7-b109-1be36bf5f93f",
                  "customer_id": "b1757304-1bfb-4224-aab6-b8cc2aaccacf",
                  "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                  "user_id": "d1309183-a491-450b-996c-a8502fe02375",
                  "nickname": "VISA: Daniel Walker (ending in: 1881)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Daniel Walker",
                  "card_type": "visa",
                  "card_last_four": "1881",
                  "card_exp": "042017",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "deleted_at": null,
                  "created_at": "2016-06-06 14:31:32",
                  "updated_at": "2016-06-06 14:31:32",
                  "card_exp_datetime": "2017-04-01 00:00:00"
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The `id` of this transaction."
                },
                "invoice_id": {
                  "type": "string",
                  "description": "The id of the Invoice associated with this transaction (if any)."
                },
                "reference_id": {
                  "type": "string",
                  "description": "The id of the parent transaction. Will only be filled if this transaction is a child refund or void of a tranasction."
                },
                "schedule_id": {
                  "type": "string",
                  "description": "The id of the associated Schedule for this transaction (if any)."
                },
                "auth_id": {
                  "type": "string",
                  "description": "The if of the associated pre-auth transaction for this transaction (if this transaction is a `capture`)."
                },
                "recurring_transaction_id": {
                  "type": "string",
                  "description": "Deprecated. Do not use."
                },
                "type": {
                  "type": "string",
                  "description": "The `type` of this transaction. Possible values are `\"charge\", \"void\", \"refund\", \"credit\", \"pre_auth\", \"capture\"`."
                },
                "source": {
                  "type": "string",
                  "description": "The `source` of this transaction. Will be empty if this transaction originated in Omni, but will have a value if this transaction came from an external source such as a Terminal or Mobile Reader."
                },
                "merchant_id": {
                  "type": "string",
                  "description": "The id of the Merchant that owns this transaction."
                },
                "user_id": {
                  "type": "string",
                  "description": "The id of the User who made this transaction."
                },
                "customer_id": {
                  "type": "string",
                  "description": "The id of the Customer associated with this transaction."
                },
                "payment_method_id": {
                  "type": "string",
                  "description": "The id of the Payment Method associated with this transaction."
                },
                "success": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was successful."
                },
                "message": {
                  "type": "string",
                  "description": "The error message if this transaction was unsuccessful."
                },
                "meta": {
                  "type": "object",
                  "properties": {},
                  "description": "Metadata for this transaction (if any). Usually will only contain what you place into it when running POST /charge or similar calls."
                },
                "total": {
                  "type": "number",
                  "description": "The `total` of this transaction."
                },
                "method": {
                  "type": "string",
                  "description": "The `method` of this transaction. Possible values are `\"card\", \"bank\", \"cash\", \"check\", \"giftcard\"`."
                },
                "pre_auth": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is a pre-authorization."
                },
                "last_four": {
                  "type": "string",
                  "description": "The `last_four` of the Payment Method card number for this transaction (if any)."
                },
                "receipt_email_at": {
                  "type": "string",
                  "description": "When the email receipt was sent for this transaction."
                },
                "receipt_sms_at": {
                  "type": "string",
                  "description": "When the sms receipt was sent for this transaction."
                },
                "settled_at": {
                  "type": "string",
                  "description": "When this transaction was settled."
                },
                "created_at": {
                  "type": "string",
                  "description": "When this transaction was created."
                },
                "updated_at": {
                  "type": "string",
                  "description": "When this transaction was last modified."
                },
                "issuer_auth_code": {
                  "type": "string",
                  "description": "The gateway authorization code for this transactions. Transactions originating outside of Omni may not have an `issuer_auth_code`."
                },
                "total_refunded": {
                  "type": "string",
                  "description": "The total amount of any refunds for this transaction (if any)."
                },
                "is_manual": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was made for accounting purposes, such as a cash transaction."
                },
                "is_refundable": {
                  "type": "string",
                  "description": "Whether or not this transaction is refundable."
                },
                "is_voidable": {
                  "type": "string",
                  "description": "Whether or not this transaction is voidable."
                },
                "is_voided": {
                  "type": "string",
                  "description": "Whether or not this transaction is voided. (To see if a transaction is refunded, check that `total_refunded > 0`)"
                },
                "is_settling": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is still settling. Will always be `null` for non-ACH transactions. May have a boolean value if this transaction was made on an ACH Gateway."
                },
                "child_transactions": {
                  "description": "Any child Transactions for this transaction. Examples of child transactions include refunds, voids, and captures (if this transaction is a pre-auth)."
                },
                "files": {
                  "description": "The Files attached to this transaction (if any)."
                },
                "customer": {
                  "type": "object",
                  "properties": {},
                  "description": "The Customer for this transaction."
                },
                "payment_method": {
                  "type": "object",
                  "properties": {},
                  "description": "The Payment Method for this transaction."
                },
                "user": {
                  "type": "object",
                  "properties": {},
                  "description": "The User for this transaction."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "payment_method_id": [
                  "The selected payment method id is invalid."
                ],
                "total": [
                  "The total field is required."
                ],
                "meta": [
                  "The meta field is required."
                ]
              }
            }
          }
        },
        "summary": "Verify A Payment Method",
        "operationId": "Verify A Payment Method",
        "description": "_(please click this box ^^ for more information)_\n\n**ADVANCED, not recommended to most users**\n\n**NOTE:** If you are ONLY looking to create a pre authorization please see [the guide here](https://fattmerchant.docs.apiary.io/#introduction/process-payments-from-server-side-with-api-key./pre-authorizations). This is the verify route which creates a pre auth, **AND VOIDS IT.**\n\nSimilar to the charge resource, the verify resource will create a new transaction record within Fattmerchant's database; \nHowever, the transaction will be type = `pre_auth` and if the `pre_auth` is successful, a child\nTransaction with type = `void` will also be created. The verify route simply authorizes that a card has the funds for a purchase. \nA successful call to the verify resource means that both the `pre_auth` and subsequent `void` transactions were successful.\nA 400 is where there were no validation errors, but either the `pre_auth` or `void` transaction was unsuccessful. \nPerhaps the owner of the card has a hold on it.\nThis will result in success = 0 and an error in the `message` field.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payment_method_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    }
                  }
                },
                "total": {
                  "type": "string"
                },
                "pre_auth": {
                  "type": "string"
                }
              },
              "example": {
                "payment_method_id": "853c9aa3-e321-4194-97eb-03a268a832e0",
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "total": "12.00",
                "pre_auth": "0"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/credit": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "85f59225-9a58-4b6e-8aae-f0ffe625e486",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "credit",
                "source": null,
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "payment_method_id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "memo": "Refund for Subscription",
                  "subtotal": "1.00",
                  "tax": "0"
                },
                "total": 1,
                "method": "card",
                "pre_auth": false,
                "last_four": "1111",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2017-05-08 20:25:28",
                "updated_at": "2017-05-08 20:25:28",
                "total_refunded": null,
                "is_refundable": false,
                "is_voided": null,
                "is_voidable": false,
                "schedule_id": null,
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-08 19:41:03",
                  "updated_at": "2017-05-08 19:41:03",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Demo",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The `id` of this transaction."
                },
                "invoice_id": {
                  "type": "string",
                  "description": "The id of the Invoice associated with this transaction (if any)."
                },
                "reference_id": {
                  "type": "string",
                  "description": "The id of the parent transaction. Will only be filled if this transaction is a child refund or void of a tranasction."
                },
                "schedule_id": {
                  "type": "string",
                  "description": "The id of the associated Schedule for this transaction (if any)."
                },
                "auth_id": {
                  "type": "string",
                  "description": "The if of the associated pre-auth transaction for this transaction (if this transaction is a `capture`)."
                },
                "recurring_transaction_id": {
                  "type": "string",
                  "description": "Deprecated. Do not use."
                },
                "type": {
                  "type": "string",
                  "description": "The `type` of this transaction. Possible values are `\"charge\", \"void\", \"refund\", \"credit\", \"pre_auth\", \"capture\"`."
                },
                "source": {
                  "type": "string",
                  "description": "The `source` of this transaction. Will be empty if this transaction originated in Omni, but will have a value if this transaction came from an external source such as a Terminal or Mobile Reader."
                },
                "merchant_id": {
                  "type": "string",
                  "description": "The id of the Merchant that owns this transaction."
                },
                "user_id": {
                  "type": "string",
                  "description": "The id of the User who made this transaction."
                },
                "customer_id": {
                  "type": "string",
                  "description": "The id of the Customer associated with this transaction."
                },
                "payment_method_id": {
                  "type": "string",
                  "description": "The id of the Payment Method associated with this transaction."
                },
                "success": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was successful."
                },
                "message": {
                  "type": "string",
                  "description": "The error message if this transaction was unsuccessful."
                },
                "meta": {
                  "type": "object",
                  "properties": {},
                  "description": "Metadata for this transaction (if any). Usually will only contain what you place into it when running POST /charge or similar calls."
                },
                "total": {
                  "type": "number",
                  "description": "The `total` of this transaction."
                },
                "method": {
                  "type": "string",
                  "description": "The `method` of this transaction. Possible values are `\"card\", \"bank\", \"cash\", \"check\", \"giftcard\"`."
                },
                "pre_auth": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is a pre-authorization."
                },
                "last_four": {
                  "type": "string",
                  "description": "The `last_four` of the Payment Method card number for this transaction (if any)."
                },
                "receipt_email_at": {
                  "type": "string",
                  "description": "When the email receipt was sent for this transaction."
                },
                "receipt_sms_at": {
                  "type": "string",
                  "description": "When the sms receipt was sent for this transaction."
                },
                "settled_at": {
                  "type": "string",
                  "description": "When this transaction was settled."
                },
                "created_at": {
                  "type": "string",
                  "description": "When this transaction was created."
                },
                "updated_at": {
                  "type": "string",
                  "description": "When this transaction was last modified."
                },
                "issuer_auth_code": {
                  "type": "string",
                  "description": "The gateway authorization code for this transactions. Transactions originating outside of Omni may not have an `issuer_auth_code`."
                },
                "total_refunded": {
                  "type": "string",
                  "description": "The total amount of any refunds for this transaction (if any)."
                },
                "is_manual": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was made for accounting purposes, such as a cash transaction."
                },
                "is_refundable": {
                  "type": "string",
                  "description": "Whether or not this transaction is refundable."
                },
                "is_voidable": {
                  "type": "string",
                  "description": "Whether or not this transaction is voidable."
                },
                "is_voided": {
                  "type": "string",
                  "description": "Whether or not this transaction is voided. (To see if a transaction is refunded, check that `total_refunded > 0`)"
                },
                "is_settling": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is still settling. Will always be `null` for non-ACH transactions. May have a boolean value if this transaction was made on an ACH Gateway."
                },
                "child_transactions": {
                  "description": "Any child Transactions for this transaction. Examples of child transactions include refunds, voids, and captures (if this transaction is a pre-auth)."
                },
                "files": {
                  "description": "The Files attached to this transaction (if any)."
                },
                "customer": {
                  "type": "object",
                  "properties": {},
                  "description": "The Customer for this transaction."
                },
                "payment_method": {
                  "type": "object",
                  "properties": {},
                  "description": "The Payment Method for this transaction."
                },
                "user": {
                  "type": "object",
                  "properties": {},
                  "description": "The User for this transaction."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "8df52e5a-bf8f-46da-80a7-6ae5f9d17661",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "credit",
                "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                "user_id": "d1309183-a491-450b-996c-a8502fe02375",
                "customer_id": "b1757304-1bfb-4224-aab6-b8cc2aaccacf",
                "payment_method_id": "958d8452-f07b-4aa7-b109-1be36bf5f93f",
                "is_manual": null,
                "success": 1,
                "message": null,
                "meta": {
                  "memo": "Refund for Subscription",
                  "subtotal": "1.00",
                  "tax": "0"
                },
                "total": 1,
                "method": "card",
                "pre_auth": 0,
                "last_four": "1881",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2016-06-06 14:40:31",
                "updated_at": "2016-06-06 14:40:32",
                "total_refunded": null,
                "is_voided": null,
                "customer": {
                  "id": "b1757304-1bfb-4224-aab6-b8cc2aaccacf",
                  "firstname": "Duff",
                  "lastname": "Johnson",
                  "company": "ABC INC",
                  "email": "john@abc.com",
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "options": "",
                  "created_at": "2016-06-06 13:55:15",
                  "updated_at": "2016-06-06 13:55:15",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                },
                "child_transactions": [],
                "payment_method": {
                  "id": "958d8452-f07b-4aa7-b109-1be36bf5f93f",
                  "customer_id": "b1757304-1bfb-4224-aab6-b8cc2aaccacf",
                  "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                  "user_id": "d1309183-a491-450b-996c-a8502fe02375",
                  "nickname": "VISA: Daniel Walker (ending in: 1881)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Daniel Walker",
                  "card_type": "visa",
                  "card_last_four": "1881",
                  "card_exp": "042017",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "deleted_at": null,
                  "created_at": "2016-06-06 14:31:32",
                  "updated_at": "2016-06-06 14:31:32",
                  "card_exp_datetime": "2017-04-01 00:00:00"
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The `id` of this transaction."
                },
                "invoice_id": {
                  "type": "string",
                  "description": "The id of the Invoice associated with this transaction (if any)."
                },
                "reference_id": {
                  "type": "string",
                  "description": "The id of the parent transaction. Will only be filled if this transaction is a child refund or void of a tranasction."
                },
                "schedule_id": {
                  "type": "string",
                  "description": "The id of the associated Schedule for this transaction (if any)."
                },
                "auth_id": {
                  "type": "string",
                  "description": "The if of the associated pre-auth transaction for this transaction (if this transaction is a `capture`)."
                },
                "recurring_transaction_id": {
                  "type": "string",
                  "description": "Deprecated. Do not use."
                },
                "type": {
                  "type": "string",
                  "description": "The `type` of this transaction. Possible values are `\"charge\", \"void\", \"refund\", \"credit\", \"pre_auth\", \"capture\"`."
                },
                "source": {
                  "type": "string",
                  "description": "The `source` of this transaction. Will be empty if this transaction originated in Omni, but will have a value if this transaction came from an external source such as a Terminal or Mobile Reader."
                },
                "merchant_id": {
                  "type": "string",
                  "description": "The id of the Merchant that owns this transaction."
                },
                "user_id": {
                  "type": "string",
                  "description": "The id of the User who made this transaction."
                },
                "customer_id": {
                  "type": "string",
                  "description": "The id of the Customer associated with this transaction."
                },
                "payment_method_id": {
                  "type": "string",
                  "description": "The id of the Payment Method associated with this transaction."
                },
                "success": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was successful."
                },
                "message": {
                  "type": "string",
                  "description": "The error message if this transaction was unsuccessful."
                },
                "meta": {
                  "type": "object",
                  "properties": {},
                  "description": "Metadata for this transaction (if any). Usually will only contain what you place into it when running POST /charge or similar calls."
                },
                "total": {
                  "type": "number",
                  "description": "The `total` of this transaction."
                },
                "method": {
                  "type": "string",
                  "description": "The `method` of this transaction. Possible values are `\"card\", \"bank\", \"cash\", \"check\", \"giftcard\"`."
                },
                "pre_auth": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is a pre-authorization."
                },
                "last_four": {
                  "type": "string",
                  "description": "The `last_four` of the Payment Method card number for this transaction (if any)."
                },
                "receipt_email_at": {
                  "type": "string",
                  "description": "When the email receipt was sent for this transaction."
                },
                "receipt_sms_at": {
                  "type": "string",
                  "description": "When the sms receipt was sent for this transaction."
                },
                "settled_at": {
                  "type": "string",
                  "description": "When this transaction was settled."
                },
                "created_at": {
                  "type": "string",
                  "description": "When this transaction was created."
                },
                "updated_at": {
                  "type": "string",
                  "description": "When this transaction was last modified."
                },
                "issuer_auth_code": {
                  "type": "string",
                  "description": "The gateway authorization code for this transactions. Transactions originating outside of Omni may not have an `issuer_auth_code`."
                },
                "total_refunded": {
                  "type": "string",
                  "description": "The total amount of any refunds for this transaction (if any)."
                },
                "is_manual": {
                  "type": "boolean",
                  "description": "Whether or not this transaction was made for accounting purposes, such as a cash transaction."
                },
                "is_refundable": {
                  "type": "string",
                  "description": "Whether or not this transaction is refundable."
                },
                "is_voidable": {
                  "type": "string",
                  "description": "Whether or not this transaction is voidable."
                },
                "is_voided": {
                  "type": "string",
                  "description": "Whether or not this transaction is voided. (To see if a transaction is refunded, check that `total_refunded > 0`)"
                },
                "is_settling": {
                  "type": "boolean",
                  "description": "Whether or not this transaction is still settling. Will always be `null` for non-ACH transactions. May have a boolean value if this transaction was made on an ACH Gateway."
                },
                "child_transactions": {
                  "description": "Any child Transactions for this transaction. Examples of child transactions include refunds, voids, and captures (if this transaction is a pre-auth)."
                },
                "files": {
                  "description": "The Files attached to this transaction (if any)."
                },
                "customer": {
                  "type": "object",
                  "properties": {},
                  "description": "The Customer for this transaction."
                },
                "payment_method": {
                  "type": "object",
                  "properties": {},
                  "description": "The Payment Method for this transaction."
                },
                "user": {
                  "type": "object",
                  "properties": {},
                  "description": "The User for this transaction."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "payment_method_id": [
                  "The selected payment method id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Credit A Payment Method",
        "operationId": "Credit A Payment Method",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\n**Note: Only works for merchants that belong to a gateway that supports the \"general credit\" feature**.\n\nWill return a 400 response if a merchant that doesn't belong to a qualified gateway.\na 400 is, also, where there weren't validation error, but the charge wasn't successful. \nPerhaps the owner of the card has a hold on it.\nThis will result in success = 0 and an error in the `message` field.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payment_method_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "memo": {
                      "type": "string"
                    },
                    "subtotal": {
                      "type": "string"
                    },
                    "tax": {
                      "type": "string"
                    }
                  }
                },
                "total": {
                  "type": "string"
                }
              },
              "example": {
                "payment_method_id": "1c5836d2-5443-482d-9a4e-a0cca356ee26",
                "meta": {
                  "memo": "Refund for Subscription",
                  "subtotal": "1.00",
                  "tax": "0"
                },
                "total": "1.00"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/customer": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "59327746-fbca-4fb6-adf0-e88c99245548",
                "firstname": "John",
                "lastname": "Smith",
                "company": "ABC INC",
                "email": "demo@fattmerchant.com",
                "cc_emails": [
                  "demo@abc.com"
                ],
                "phone": "1234567898",
                "address_1": "123 Rite Way",
                "address_2": "Unit 12",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "address_country": "USA",
                "notes": null,
                "reference": "BARTLE",
                "options": "",
                "created_at": "2017-05-08 19:13:41",
                "updated_at": "2017-05-08 19:13:41",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "firstname": [
                  "The firstname field is required when none of lastname / email / company are present."
                ],
                "lastname": [
                  "The lastname field is required when none of firstname / email / company are present."
                ],
                "email": [
                  "The email field is required when none of firstname / lastname / company are present."
                ],
                "company": [
                  "The company field is required when none of firstname / lastname / email are present."
                ]
              }
            }
          }
        },
        "summary": "Create Customer",
        "operationId": "Create Customer",
        "description": "_(please click this box ^^ for more information)_\n\nAllows the merchant to create a customer record tied to the merchant's account by inputting a customer's information.\nThis allows the merchant to access a customer of future transactions without having to register them over again.\nThe customer is given a `customer_id` using a UUID (Universally unique identifier) that the other functions need to use.\nCustomer requires at least one of the following: `firstname`, `lastname`, `email` or `company` in order to pass.\n`address_country` is the ISO 3 code (3 characters) and it's optional.\nIf supplied it will be sent to the processing gateway.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "cc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "phone": {
                  "type": "string"
                },
                "address_1": {
                  "type": "string"
                },
                "address_2": {
                  "type": "string"
                },
                "address_city": {
                  "type": "string"
                },
                "address_state": {
                  "type": "string"
                },
                "address_zip": {
                  "type": "string"
                },
                "address_country": {
                  "type": "string"
                },
                "reference": {
                  "type": "string"
                }
              },
              "example": {
                "firstname": "John",
                "lastname": "Smith",
                "company": "ABC INC",
                "email": "demo@fattmerchant.com",
                "cc_emails": [
                  "demo@abc.com"
                ],
                "phone": "1234567898",
                "address_1": "123 Rite Way",
                "address_2": "Unit 12",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "address_country": "USA",
                "reference": "BARTLE"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "total": 2,
                "per_page": 50,
                "current_page": 1,
                "last_page": 1,
                "next_page_url": null,
                "prev_page_url": null,
                "from": 1,
                "to": 2,
                "data": [
                  {
                    "id": "5ff4e048-c9f3-4993-81be-f7253d132c19",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "john@abc.com",
                    "cc_emails": null,
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2016-04-26 13:52:10",
                    "updated_at": "2016-04-26 13:52:10",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                  },
                  {
                    "id": "c20db54e-4078-46d9-9c09-2287612c8840",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "john@abc.com",
                    "cc_emails": null,
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2016-04-25 15:24:03",
                    "updated_at": "2016-04-25 15:24:03",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                  }
                ]
              }
            }
          }
        },
        "summary": "Find All Customers",
        "operationId": "Find All Customers",
        "description": "_(please click this box ^^ for more information)_\n\nShows all customers within a merchant's records or associated with a merchant.\nUsing the `[PUT /customer/{id}]` call, the merchant is able to edit any of their customers' information if necessary.\n\nIf no customers are found based on the filter query params, the `data` array will be empty.\n\nExamples of filters:\n\n- `/customer?firstname=james` to find a customer with a name of \"James\" OR \"Mr. James\"\n\n- `/customer?email=james.wilson@abc.com` to find a customer whose email contains \"james.wilson@abc.com\"\n\n- `/customer?lastname=wilson&email=@abc.com` to find a customer with a last name of \"Wilson\" AND and email ending in \"@abc.com\"\n\n- `/customer?keywords[]=james` to find a customer named James or a customer with any field that contains the word \"James\" in it\n\n- `/customer?keywords[]=123&keywords[]=james` to find a customer with a field that contains JAMES and a field that contains \"123\"\n\nThe `keywords[]` array within the parameter will search across most customers fields (see the editor for details). Warning, can be SLOW.\n\nCustomers may be sorted and filtered through using the parameters found below.\nTo sort, for example, use `customer?sort=firstname&order=ASC` to search first names alphabetically A->Z.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/customer/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "firstname": "John",
                "lastname": "Smith",
                "company": "ABC INC",
                "email": "demo@fattmerchant.com",
                "cc_emails": [
                  "demo@abc.com"
                ],
                "phone": "1234567898",
                "address_1": "123 Rite Way",
                "address_2": "Unit 12",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "address_country": "USA",
                "notes": null,
                "reference": "BARTLE",
                "options": "",
                "created_at": "2017-05-08 19:22:51",
                "updated_at": "2017-05-08 19:22:51",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "customer not found"
              }
            }
          }
        },
        "summary": "Get a Customer's Information",
        "operationId": "Get a Customer's Information",
        "description": "_(please click this box ^^ for more information)_\n\nAfter gathering all customers into a list, you can use this function to pull up more information on a specific customer.\nActivated by clicking or calling the specified customer.\nUses the ID of the user to match the corresponding information found in the database.\nOpens the opportunity to use the `PUT` and `DEL` functions to edit the customer.\n\nTo view a customer's payment methods, see `GET /customer/{customerId}/payment-method` under the `/payment-method` section.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "firstname": "John",
                "lastname": "Smith",
                "company": "ABC INC",
                "email": "demo@abc.com",
                "cc_emails": [
                  "demo1@abc.com",
                  "demo2@abc.com"
                ],
                "phone": "1234567898",
                "address_1": "123 Rite Way",
                "address_2": "Unit 12",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "address_country": "USA",
                "notes": null,
                "reference": "BARTLE",
                "options": "",
                "created_at": "2017-05-08 19:22:51",
                "updated_at": "2017-05-08 19:23:46",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "customer not found"
              }
            }
          }
        },
        "summary": "Update a Customer's Information",
        "operationId": "Update a Customer's Information",
        "description": "_(please click this box ^^ for more information)_\n\nAfter using the `GET` function to pull up a customer's information, this function is what allows the merchant to update it.\nThis function gets in the same inputs as a newly created customer.\nThis will not fail if you enter no information.\nUsed for correcting any incorrect or outdated information the initial `POST` function entered.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "cc_emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "phone": {
                  "type": "string"
                },
                "address_1": {
                  "type": "string"
                },
                "address_2": {
                  "type": "string"
                },
                "address_city": {
                  "type": "string"
                },
                "address_state": {
                  "type": "string"
                },
                "address_zip": {
                  "type": "string"
                },
                "address_country": {
                  "type": "string"
                },
                "reference": {
                  "type": "string"
                }
              },
              "example": {
                "firstname": "John",
                "lastname": "Smith",
                "company": "ABC INC",
                "email": "demo@abc.com",
                "cc_emails": [
                  "demo1@abc.com",
                  "demo2@abc.com"
                ],
                "phone": "1234567898",
                "address_1": "123 Rite Way",
                "address_2": "Unit 12",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "address_country": "USA",
                "reference": "BARTLE"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "firstname": "John",
                "lastname": "Smith",
                "company": "ABC INC",
                "email": "demo@abc.com",
                "cc_emails": [
                  "demo1@abc.com",
                  "demo2@abc.com"
                ],
                "phone": "1234567898",
                "address_1": "123 Rite Way",
                "address_2": "Unit 12",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "address_country": "USA",
                "notes": null,
                "reference": "BARTLE",
                "options": "",
                "created_at": "2017-05-08 19:22:51",
                "updated_at": "2017-05-08 19:23:46",
                "deleted_at": "2020-03-29 15:46:00",
                "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "customer not found"
              }
            }
          }
        },
        "summary": "Delete a Customer",
        "operationId": "Delete a Customer",
        "description": "_(please click this box ^^ for more information)_\n\nTo soft delete a customer, and thus hide it from view when calling `GET customer`, simply change the http verb to `DELETE`.\n\nYou can only delete 1 customer at a time. The result will be a 200 response showing a non-null `deleted_at` value.\n\nHowever, even though a customer is deleted, you can still request it later using `GET customer/customer_id`",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/underwriting/disputes/{merchantId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "total": 22,
                "per_page": 10,
                "current_page": 3,
                "last_page": 3,
                "next_page_url": null,
                "prev_page_url": "https://apiprod.fattlabs.com/underwriting/disputes/merchant1?page=2",
                "from": 21,
                "to": 22,
                "data": [
                  {
                    "id": "07ad9751-443c-11ea-8e3f-0242ac140002",
                    "transaction_id": "000e8694-d259-47ee-8fa1-bc0667e705a5",
                    "merchant_id": "merchant1",
                    "reason": "FRAUD",
                    "amount": 8888.88,
                    "status": "PENDING",
                    "respond_by": "2020-01-20T23:48:03.000Z",
                    "created_at": "2020-01-08T23:48:03.000Z",
                    "updated_at": "2020-01-08T23:48:03.000Z"
                  },
                  {
                    "id": "07dbfe08-443c-11ea-8e3f-0242ac140002",
                    "transaction_id": "aca21c84-d37e-4d47-ad32-579dfda74458",
                    "merchant_id": "merchant1",
                    "reason": "FRAUD",
                    "amount": 8888.88,
                    "status": "EVIDENCE_UPLOADED",
                    "respond_by": "2020-01-31T23:48:03.000Z",
                    "created_at": "2020-01-08T23:48:03.000Z",
                    "updated_at": "2020-01-08T23:48:03.000Z"
                  }
                ]
              }
            }
          }
        },
        "summary": "List Disputes",
        "operationId": "List Disputes",
        "description": "_(please click this box ^^ for more information)_\n\nThis route handles requests for a list of disputes for the currently authenticated merchant.",
        "tags": [],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "description": "The merchant ID value.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "**Filter**: filters results by the dispute id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction_id",
            "in": "query",
            "description": "**Filter**: filters results by the id of the dispute's associated transaction.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "**Filter**: filters results according to the dispute's status in the process.",
            "required": false,
            "type": "string",
            "enum": [
              "INQUIRY",
              "PENDING",
              "WON",
              "LOST",
              "EVIDENCE_UPLOADED",
              "UPLOAD_FAILED"
            ]
          },
          {
            "name": "reason",
            "in": "query",
            "description": "**Filter**: filters results according to the reason for the dispute's creation.",
            "required": false,
            "type": "string",
            "enum": [
              "TECHNICAL",
              "CLERICAL",
              "QUALITY",
              "FRAUD",
              "INQUIRY"
            ]
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The *property* by which the results are sorted.",
            "required": false,
            "type": "string",
            "default": "respond_by",
            "enum": [
              "respond_by",
              "created_at",
              "updated_at",
              "status"
            ]
          },
          {
            "name": "order",
            "in": "query",
            "description": "The *order* in which the results are sorted.",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "DESC",
              "ASC"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "x-example": "1",
            "type": "number"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "merchantId",
            "in": "path",
            "description": "The merchantId value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/file/dispute": {
      "post": {
        "responses": {
          "201": {
            "description": "Responds with the evidence file entity that was created.",
            "headers": {},
            "examples": {
              "application/json": {
                "merchant_id": "merchant1",
                "user_id": "user1",
                "name": "receipt evidence",
                "tag": "dispute",
                "id": "b268c536-ba18-49da-83fa-914511f590f7",
                "updated_at": "2020-01-24 18:46:49",
                "created_at": "2020-01-24 18:46:48",
                "path": "dispute/b268c536-ba18-49da-83fa-914511f590f7.png",
                "public_url": "https://contractors-dev-bucket.s3.us-west-2.amazonaws.com/dispute/b268c536-ba18-49da-83fa-914511f590f7.png",
                "meta": {
                  "filesize_bytes": 7640,
                  "filesize": "0.08 kB",
                  "extension": "png",
                  "size": {
                    "width": 698,
                    "height": 165
                  },
                  "mime": "image/png"
                }
              }
            }
          }
        },
        "summary": "Upload Evidence for Dispute",
        "operationId": "Upload Evidence for Dispute",
        "description": "_(please click this box ^^ for more information)_\n\nThis route handles requests to upload evidence files associated with a merchant's dispute.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/file/dispute/{evidenceFileId}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Responds with the evidence file entity that was deleted.",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "b268c536-ba18-49da-83fa-914511f590f7",
                "merchant_id": "merchant1",
                "user_id": "user1",
                "name": "receipt evidence",
                "path": "dispute/b268c536-ba18-49da-83fa-914511f590f7.png",
                "public_url": "https://contractors-dev-bucket.s3.us-west-2.amazonaws.com/dispute/b268c536-ba18-49da-83fa-914511f590f7.png",
                "tag": "dispute",
                "meta": {
                  "filesize_bytes": 7640,
                  "filesize": "0.08 kB",
                  "extension": "png",
                  "size": {
                    "width": 698,
                    "height": 165
                  },
                  "mime": "image/png"
                },
                "created_at": "2020-01-24 18:46:49",
                "updated_at": "2020-02-11 17:31:03",
                "deleted_at": "2020-02-11 17:31:03"
              }
            }
          }
        },
        "summary": "Delete Evidence for Dispute",
        "operationId": "Delete Evidence for Dispute",
        "description": "_(please click this box ^^ for more information)_\n\nThis route handles requests to delete a given evidence file.",
        "tags": [],
        "parameters": [
          {
            "name": "evidenceFileId",
            "in": "path",
            "description": "A unique identifier for an evidence file.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "evidenceFileId",
            "in": "path",
            "description": "The evidenceFileId value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/underwriting/dispute/{disputeId}/submit": {
      "post": {
        "responses": {
          "200": {
            "description": "Responds with the dispute entity that was submitted with evidence.",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "07ad9751-443c-11ea-8e3f-0242ac140002",
                "transaction_id": "000e8694-d259-47ee-8fa1-bc0667e705a5",
                "merchant_id": "merchant1",
                "reason": "FRAUD",
                "amount": 8888.88,
                "status": "EVIDENCE_UPLOADED",
                "respond_by": "2020-01-20T23:48:03.000Z",
                "created_at": "2020-01-08T23:48:03.000Z",
                "updated_at": "2020-01-08T23:48:03.000Z"
              }
            }
          },
          "400": {
            "description": "Responds with `400` status if no evidence files have been uploaded, or if the given dispute ID cannot be found.",
            "headers": {},
            "examples": {
              "application/json": {
                "status": 400,
                "message": "No associated evidence files found for dispute 'disputeID1234'. Ensure your dispute ID value is correct, or please upload evidence files prior to submitting dispute."
              }
            }
          }
        },
        "summary": "Submit Dispute Evidence Files for Review",
        "operationId": "Submit Dispute Evidence Files for Review",
        "description": "_(please click this box ^^ for more information)_\n\nThis route handles requests to send all of a dispute's associated evidence files for review.",
        "tags": [],
        "parameters": [
          {
            "name": "disputeId",
            "in": "path",
            "description": "A unique identifier of the dispute.",
            "required": true,
            "type": "string"
          },
          {
            "name": "disputeId",
            "in": "path",
            "description": "The disputeId value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/invoice": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {}
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "customer_id": [
                  "The customer id field is required."
                ],
                "url": [
                  "The url field is required."
                ],
                "meta": [
                  "The meta field is required."
                ],
                "total": [
                  "The total field is required."
                ],
                "files.0": [
                  "The selected files.0 is invalid."
                ]
              }
            }
          }
        },
        "summary": "Create an Invoice",
        "operationId": "Create an Invoice",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nCreates an invoice.\nUses the `customer_id` and information about the transaction to do so, found in the body below.\nInvoices from the perspective of the customer are known as a `bill`.\nIf `send_now` is equal to true, this invoices will send immediately along side an email to the customer.\nThis bill/invoice may be paid from the customer's email.\nOmitting `send_now` or setting it to false will cause the invoice to be set as an unsent draft. \nDrafted invoices may be sent with `PUT invoice/{id}/send/email` or `PUT invoice/{id}/send/sms`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "total": 2,
                "per_page": 25,
                "current_page": 1,
                "last_page": 4,
                "next_page_url": "http://fmapi.local/invoice?page=2",
                "prev_page_url": null,
                "from": 1,
                "to": 25,
                "data": [
                  {
                    "id": "8cbb929d-55d9-43b5-8d90-af3cab04ce17",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "customer_id": "17a51927-312e-47e3-9b23-412f298888e3",
                    "total": 10,
                    "meta": {
                      "tax": 0,
                      "subtotal": 10,
                      "lineItems": [
                        {
                          "id": "optional-fm-catalog-item-id",
                          "item": "Demo Item",
                          "details": "this is a regular demo item",
                          "quantity": 1,
                          "price": 10
                        }
                      ]
                    },
                    "status": "SENT",
                    "sent_at": "2017-04-24 15:16:15",
                    "viewed_at": null,
                    "paid_at": null,
                    "schedule_id": "e70c126c-f7b7-4673-a129-5b650f00f84a",
                    "reminder_id": "a6411419-0e95-4380-9d4e-94bdaced9d14",
                    "payment_method_id": "",
                    "url": "http://localhost:5432/#/bill/",
                    "is_webpayment": false,
                    "deleted_at": null,
                    "created_at": "2017-04-08 20:49:04",
                    "updated_at": "2017-04-24 15:16:15",
                    "payment_attempt_failed": false,
                    "payment_attempt_message": "",
                    "balance_due": 12,
                    "total_paid": 0,
                    "payment_meta": [],
                    "customer": {
                      "id": "17a51927-312e-47e3-9b23-412f298888e3",
                      "firstname": "David",
                      "lastname": "Bowie",
                      "company": "ABC INC",
                      "email": "john@abc.com",
                      "cc_emails": null,
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "",
                      "options": "",
                      "created_at": "2016-12-01 16:44:33",
                      "updated_at": "2016-12-01 16:44:33",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                    },
                    "user": {
                      "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "system_admin": false,
                      "name": "Demo",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2017-03-29 15:27:19",
                      "email_verified_at": "2017-03-29 15:27:21",
                      "is_api_key": false,
                      "created_at": "2017-01-11 21:44:02",
                      "updated_at": "2017-04-24 15:41:58",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null
                    },
                    "files": [],
                    "child_transactions": [],
                    "reminder": {
                      "id": "a6411419-0e95-4380-9d4e-94bdaced9d14",
                      "merchant_id": "",
                      "user_id": "",
                      "active": true,
                      "count": 3,
                      "rule": "FREQ=DAILY;COUNT=3;INTERVAL=5;WKST=MO;DTSTART=20170413T204904Z",
                      "last_run_at": "2017-04-24 15:16:15",
                      "next_run_at": null,
                      "event": "InvoiceReminder",
                      "meta": null,
                      "payment_method_id": "",
                      "customer_id": "17a51927-312e-47e3-9b23-412f298888e3",
                      "created_at": "2017-04-08 20:49:04",
                      "updated_at": "2017-04-24 15:16:15",
                      "deleted_at": null,
                      "rule_text": "every 5 days for 3 times",
                      "future_occurrences": [],
                      "max": 3,
                      "end_at": null,
                      "status": "COMPLETED"
                    }
                  },
                  {
                    "id": "2744a7fd-d354-47a0-a99e-f6f3e96bffe1",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                    "total": 77,
                    "meta": {
                      "lineItems": [
                        {
                          "item": "",
                          "details": "",
                          "quantity": 1,
                          "price": "77"
                        }
                      ],
                      "memo": "",
                      "subtotal": 77,
                      "tax": "",
                      "type": "invoice/schedule"
                    },
                    "status": "VIEWED",
                    "sent_at": "2017-04-08 20:49:03",
                    "viewed_at": null,
                    "paid_at": "2017-04-08 20:49:03",
                    "schedule_id": "85211708-5995-4e2f-83c3-7017cdbee25f",
                    "reminder_id": null,
                    "payment_method_id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                    "url": "http://localhost:5432/#/bill/",
                    "is_webpayment": false,
                    "deleted_at": null,
                    "created_at": "2017-04-08 20:49:02",
                    "updated_at": "2017-04-24 19:38:42",
                    "payment_attempt_failed": false,
                    "payment_attempt_message": "",
                    "balance_due": 77,
                    "total_paid": 0,
                    "payment_meta": {
                      "lineItems": [
                        {
                          "item": "",
                          "details": "",
                          "quantity": 1,
                          "price": "77"
                        }
                      ],
                      "memo": "",
                      "subtotal": 77,
                      "tax": "",
                      "type": "invoice/schedule"
                    },
                    "customer": {
                      "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                      "firstname": "BOND",
                      "lastname": "BURGER",
                      "company": "ABC INC",
                      "email": "john@abc.com",
                      "cc_emails": null,
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-03-31 17:04:27",
                      "updated_at": "2017-03-31 17:04:27",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                    },
                    "user": {
                      "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "system_admin": false,
                      "name": "Demo",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2017-03-29 15:27:19",
                      "email_verified_at": "2017-03-29 15:27:21",
                      "is_api_key": false,
                      "created_at": "2017-01-11 21:44:02",
                      "updated_at": "2017-04-24 15:41:58",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null
                    },
                    "files": [],
                    "child_transactions": [
                      {
                        "id": "61b4a861-446f-45f8-b319-2ce98876751b",
                        "invoice_id": "2744a7fd-d354-47a0-a99e-f6f3e96bffe1",
                        "reference_id": "16427f4d-f33c-4e07-bfd3-beb2dfa55ca2",
                        "recurring_transaction_id": "",
                        "type": "refund",
                        "source": null,
                        "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                        "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                        "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                        "payment_method_id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                        "is_manual": null,
                        "success": true,
                        "message": null,
                        "meta": {
                          "lineItems": [
                            {
                              "item": "",
                              "details": "",
                              "quantity": 1,
                              "price": "77"
                            }
                          ],
                          "memo": "",
                          "subtotal": 77,
                          "tax": "",
                          "type": "invoice/schedule"
                        },
                        "total": 77,
                        "method": "card",
                        "pre_auth": false,
                        "last_four": "1111",
                        "receipt_email_at": null,
                        "receipt_sms_at": null,
                        "created_at": "2017-04-24 19:38:41",
                        "updated_at": "2017-04-24 19:38:41",
                        "total_refunded": null,
                        "is_refundable": false,
                        "is_voided": null,
                        "is_voidable": false,
                        "schedule_id": "85211708-5995-4e2f-83c3-7017cdbee25f",
                        "customer": {
                          "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                          "firstname": "BOND",
                          "lastname": "BURGER",
                          "company": "ABC INC",
                          "email": "john@abc.com",
                          "cc_emails": null,
                          "phone": "1234567898",
                          "address_1": "123 Rite Way",
                          "address_2": "Unit 12",
                          "address_city": "Orlando",
                          "address_state": "FL",
                          "address_zip": "32801",
                          "address_country": "USA",
                          "notes": null,
                          "reference": "BARTLE",
                          "options": "",
                          "created_at": "2017-03-31 17:04:27",
                          "updated_at": "2017-03-31 17:04:27",
                          "deleted_at": null,
                          "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                        },
                        "child_transactions": [],
                        "files": [],
                        "payment_method": {
                          "id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                          "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                          "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                          "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                          "nickname": "VISA: BOND BURGER (ending in: 1111)",
                          "is_default": 0,
                          "method": "card",
                          "person_name": "BOND BURGER",
                          "card_type": "visa",
                          "card_last_four": "1111",
                          "card_exp": "022020",
                          "bank_name": null,
                          "bank_type": null,
                          "bank_holder_type": null,
                          "address_1": null,
                          "address_2": null,
                          "address_city": null,
                          "address_state": null,
                          "address_zip": null,
                          "address_country": "USA",
                          "purged_at": null,
                          "deleted_at": null,
                          "created_at": "2017-04-05 15:30:05",
                          "updated_at": "2017-04-05 15:30:05",
                          "card_exp_datetime": "2020-02-29 23:59:59",
                          "customer": {
                            "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                            "firstname": "BOND",
                            "lastname": "BURGER",
                            "company": "ABC INC",
                            "email": "john@abc.com",
                            "cc_emails": null,
                            "phone": "1234567898",
                            "address_1": "123 Rite Way",
                            "address_2": "Unit 12",
                            "address_city": "Orlando",
                            "address_state": "FL",
                            "address_zip": "32801",
                            "address_country": "USA",
                            "notes": null,
                            "reference": "BARTLE",
                            "options": "",
                            "created_at": "2017-03-31 17:04:27",
                            "updated_at": "2017-03-31 17:04:27",
                            "deleted_at": null,
                            "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                          }
                        },
                        "user": {
                          "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                          "system_admin": false,
                          "name": "Demo",
                          "email": "demo@fattmerchant.com",
                          "email_verification_sent_at": "2017-03-29 15:27:19",
                          "email_verified_at": "2017-03-29 15:27:21",
                          "is_api_key": false,
                          "created_at": "2017-01-11 21:44:02",
                          "updated_at": "2017-04-24 15:41:58",
                          "deleted_at": null,
                          "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                          "team_admin": null,
                          "team_enabled": null,
                          "team_role": null
                        }
                      },
                      {
                        "id": "16427f4d-f33c-4e07-bfd3-beb2dfa55ca2",
                        "invoice_id": "2744a7fd-d354-47a0-a99e-f6f3e96bffe1",
                        "reference_id": "",
                        "recurring_transaction_id": "",
                        "type": "charge",
                        "source": null,
                        "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                        "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                        "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                        "payment_method_id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                        "is_manual": null,
                        "success": true,
                        "message": null,
                        "meta": {
                          "lineItems": [
                            {
                              "item": "",
                              "details": "",
                              "quantity": 1,
                              "price": "77"
                            }
                          ],
                          "memo": "",
                          "subtotal": 77,
                          "tax": "",
                          "type": "invoice/schedule"
                        },
                        "total": 77,
                        "method": "card",
                        "pre_auth": false,
                        "last_four": "1111",
                        "receipt_email_at": null,
                        "receipt_sms_at": null,
                        "created_at": "2017-04-08 20:49:02",
                        "updated_at": "2017-04-08 20:49:02",
                        "total_refunded": 77,
                        "is_refundable": false,
                        "is_voided": false,
                        "is_voidable": false,
                        "schedule_id": "85211708-5995-4e2f-83c3-7017cdbee25f",
                        "customer": {
                          "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                          "firstname": "BOND",
                          "lastname": "BURGER",
                          "company": "ABC INC",
                          "email": "john@abc.com",
                          "cc_emails": null,
                          "phone": "1234567898",
                          "address_1": "123 Rite Way",
                          "address_2": "Unit 12",
                          "address_city": "Orlando",
                          "address_state": "FL",
                          "address_zip": "32801",
                          "address_country": "USA",
                          "notes": null,
                          "reference": "BARTLE",
                          "options": "",
                          "created_at": "2017-03-31 17:04:27",
                          "updated_at": "2017-03-31 17:04:27",
                          "deleted_at": null,
                          "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                        },
                        "child_transactions": [
                          {
                            "id": "61b4a861-446f-45f8-b319-2ce98876751b",
                            "invoice_id": "2744a7fd-d354-47a0-a99e-f6f3e96bffe1",
                            "reference_id": "16427f4d-f33c-4e07-bfd3-beb2dfa55ca2",
                            "recurring_transaction_id": "",
                            "type": "refund",
                            "source": null,
                            "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                            "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                            "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                            "payment_method_id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                            "is_manual": null,
                            "success": true,
                            "message": null,
                            "meta": {
                              "lineItems": [
                                {
                                  "item": "",
                                  "details": "",
                                  "quantity": 1,
                                  "price": "77"
                                }
                              ],
                              "memo": "",
                              "subtotal": 77,
                              "tax": "",
                              "type": "invoice/schedule"
                            },
                            "total": 77,
                            "method": "card",
                            "pre_auth": false,
                            "last_four": "1111",
                            "receipt_email_at": null,
                            "receipt_sms_at": null,
                            "created_at": "2017-04-24 19:38:41",
                            "updated_at": "2017-04-24 19:38:41",
                            "total_refunded": null,
                            "is_refundable": false,
                            "is_voided": null,
                            "is_voidable": false,
                            "schedule_id": "85211708-5995-4e2f-83c3-7017cdbee25f",
                            "customer": {
                              "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                              "firstname": "BOND",
                              "lastname": "BURGER",
                              "company": "ABC INC",
                              "email": "john@abc.com",
                              "cc_emails": null,
                              "phone": "1234567898",
                              "address_1": "123 Rite Way",
                              "address_2": "Unit 12",
                              "address_city": "Orlando",
                              "address_state": "FL",
                              "address_zip": "32801",
                              "address_country": "USA",
                              "notes": null,
                              "reference": "BARTLE",
                              "options": "",
                              "created_at": "2017-03-31 17:04:27",
                              "updated_at": "2017-03-31 17:04:27",
                              "deleted_at": null,
                              "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                            },
                            "child_transactions": [],
                            "files": [],
                            "payment_method": {
                              "id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                              "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                              "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                              "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                              "nickname": "VISA: BOND BURGER (ending in: 1111)",
                              "is_default": 0,
                              "method": "card",
                              "person_name": "BOND BURGER",
                              "card_type": "visa",
                              "card_last_four": "1111",
                              "card_exp": "022020",
                              "bank_name": null,
                              "bank_type": null,
                              "bank_holder_type": null,
                              "address_1": null,
                              "address_2": null,
                              "address_city": null,
                              "address_state": null,
                              "address_zip": null,
                              "address_country": "USA",
                              "purged_at": null,
                              "deleted_at": null,
                              "created_at": "2017-04-05 15:30:05",
                              "updated_at": "2017-04-05 15:30:05",
                              "card_exp_datetime": "2020-02-29 23:59:59",
                              "customer": {
                                "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                                "firstname": "BOND",
                                "lastname": "BURGER",
                                "company": "ABC INC",
                                "email": "john@abc.com",
                                "cc_emails": null,
                                "phone": "1234567898",
                                "address_1": "123 Rite Way",
                                "address_2": "Unit 12",
                                "address_city": "Orlando",
                                "address_state": "FL",
                                "address_zip": "32801",
                                "address_country": "USA",
                                "notes": null,
                                "reference": "BARTLE",
                                "options": "",
                                "created_at": "2017-03-31 17:04:27",
                                "updated_at": "2017-03-31 17:04:27",
                                "deleted_at": null,
                                "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                              }
                            },
                            "user": {
                              "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                              "system_admin": false,
                              "name": "Demo",
                              "email": "demo@fattmerchant.com",
                              "email_verification_sent_at": "2017-03-29 15:27:19",
                              "email_verified_at": "2017-03-29 15:27:21",
                              "is_api_key": false,
                              "created_at": "2017-01-11 21:44:02",
                              "updated_at": "2017-04-24 15:41:58",
                              "deleted_at": null,
                              "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                              "team_admin": null,
                              "team_enabled": null,
                              "team_role": null
                            }
                          }
                        ],
                        "files": [],
                        "payment_method": {
                          "id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                          "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                          "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                          "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                          "nickname": "VISA: BOND BURGER (ending in: 1111)",
                          "is_default": 0,
                          "method": "card",
                          "person_name": "BOND BURGER",
                          "card_type": "visa",
                          "card_last_four": "1111",
                          "card_exp": "022020",
                          "bank_name": null,
                          "bank_type": null,
                          "bank_holder_type": null,
                          "address_1": null,
                          "address_2": null,
                          "address_city": null,
                          "address_state": null,
                          "address_zip": null,
                          "address_country": "USA",
                          "purged_at": null,
                          "deleted_at": null,
                          "created_at": "2017-04-05 15:30:05",
                          "updated_at": "2017-04-05 15:30:05",
                          "card_exp_datetime": "2020-02-29 23:59:59",
                          "customer": {
                            "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                            "firstname": "BOND",
                            "lastname": "BURGER",
                            "company": "ABC INC",
                            "email": "john@abc.com",
                            "cc_emails": null,
                            "phone": "1234567898",
                            "address_1": "123 Rite Way",
                            "address_2": "Unit 12",
                            "address_city": "Orlando",
                            "address_state": "FL",
                            "address_zip": "32801",
                            "address_country": "USA",
                            "notes": null,
                            "reference": "BARTLE",
                            "options": "",
                            "created_at": "2017-03-31 17:04:27",
                            "updated_at": "2017-03-31 17:04:27",
                            "deleted_at": null,
                            "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                          }
                        },
                        "user": {
                          "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                          "system_admin": false,
                          "name": "Demo",
                          "email": "demo@fattmerchant.com",
                          "email_verification_sent_at": "2017-03-29 15:27:19",
                          "email_verified_at": "2017-03-29 15:27:21",
                          "is_api_key": false,
                          "created_at": "2017-01-11 21:44:02",
                          "updated_at": "2017-04-24 15:41:58",
                          "deleted_at": null,
                          "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                          "team_admin": null,
                          "team_enabled": null,
                          "team_role": null
                        }
                      }
                    ],
                    "reminder": null
                  }
                ]
              }
            }
          }
        },
        "summary": "Get All Invoices",
        "operationId": "Get All Invoices",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nGets the current users invoices for all customers and all transactions.\n**this will only list all invoices, not all transactions.**\nIt will list them out in an invoice grid.\nThis function cannot fail. If the user has no invoices, it will just show zero invoices. `keywords[]` is a parameter that can be used to find invoice(s) based on their specific information.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/{id}/pay": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "990117ce-b31f-4e76-b027-52e90b32e465",
                "merchant_id": "c8143a7b-11f0-43b9-9258-9b1f6459d0c3",
                "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                "customer_id": "76e81366-a900-4fff-9f6b-5f30b06c2a1d",
                "total": 10,
                "meta": {
                  "tax": 0,
                  "subtotal": 10,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 10
                    }
                  ]
                },
                "status": "PAID",
                "is_merchant_present": true,
                "sent_at": null,
                "viewed_at": null,
                "paid_at": "2018-08-22 01:48:27",
                "schedule_id": null,
                "reminder_id": null,
                "payment_method_id": "f27192f5-c170-451c-a45e-397acb870b15",
                "url": "http://127.0.0.1:5432/#/bill/",
                "is_webpayment": false,
                "deleted_at": null,
                "created_at": "2018-08-22 01:48:05",
                "updated_at": "2018-08-22 01:48:27",
                "due_at": null,
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "balance_due": 0,
                "total_paid": 10,
                "payment_meta": {
                  "tax": 0,
                  "subtotal": 10
                },
                "customer": {
                  "id": "76e81366-a900-4fff-9f6b-5f30b06c2a1d",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@fattmerchant.com",
                  "cc_emails": [],
                  "cc_sms": null,
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "",
                  "options": null,
                  "created_at": "2018-08-22 01:47:52",
                  "updated_at": "2018-08-22 01:47:52",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "user": {
                  "id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "system_admin": true,
                  "name": "Bob Stevenson",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2018-05-31 21:22:05",
                  "email_verified_at": "2017-12-14 18:34:57",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "editedOnboardingInformation": true,
                    "signedApplicationPowerform": true,
                    "godviewOmniSearchTooltip": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2017-12-14 18:34:57",
                  "updated_at": "2018-07-02 22:51:45",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_default": false
                },
                "files": [],
                "child_transactions": [
                  {
                    "id": "a4fb512c-55ee-49ef-bef9-ce45969d39c9",
                    "invoice_id": "990117ce-b31f-4e76-b027-52e90b32e465",
                    "reference_id": "",
                    "recurring_transaction_id": "",
                    "auth_id": null,
                    "type": "charge",
                    "source": null,
                    "is_merchant_present": true,
                    "merchant_id": "c8143a7b-11f0-43b9-9258-9b1f6459d0c3",
                    "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                    "customer_id": "76e81366-a900-4fff-9f6b-5f30b06c2a1d",
                    "payment_method_id": "f27192f5-c170-451c-a45e-397acb870b15",
                    "is_manual": false,
                    "success": true,
                    "message": null,
                    "meta": {
                      "tax": 0,
                      "subtotal": 10,
                      "lineItems": [
                        {
                          "id": "optional-fm-catalog-item-id",
                          "item": "Demo Item",
                          "details": "this is a regular demo item",
                          "quantity": 1,
                          "price": 10
                        }
                      ]
                    },
                    "total": 10,
                    "method": "card",
                    "pre_auth": false,
                    "is_captured": 0,
                    "last_four": "8888",
                    "interchange_code": "",
                    "interchange_fee": null,
                    "batch_id": "",
                    "batched_at": "2018-08-21 21:48:27",
                    "emv_response": "",
                    "avs_response": "",
                    "cvv_response": "",
                    "pos_entry": "",
                    "pos_salesperson": "",
                    "receipt_email_at": "2018-08-22 01:48:27",
                    "receipt_sms_at": null,
                    "created_at": "2018-08-22 01:48:25",
                    "updated_at": "2018-08-22 01:48:27",
                    "total_refunded": 0,
                    "is_refundable": false,
                    "is_voided": false,
                    "is_voidable": true,
                    "schedule_id": null,
                    "child_captures": [],
                    "parent_auth": null,
                    "customer": {
                      "id": "76e81366-a900-4fff-9f6b-5f30b06c2a1d",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@abc.com",
                      "cc_emails": [],
                      "cc_sms": null,
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "",
                      "options": null,
                      "created_at": "2018-08-22 01:47:52",
                      "updated_at": "2018-08-22 01:47:52",
                      "deleted_at": null,
                      "allow_invoice_credit_card_payments": true,
                      "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                    },
                    "child_transactions": [],
                    "files": [],
                    "payment_method": {
                      "id": "f27192f5-c170-451c-a45e-397acb870b15",
                      "customer_id": "76e81366-a900-4fff-9f6b-5f30b06c2a1d",
                      "merchant_id": "c8143a7b-11f0-43b9-9258-9b1f6459d0c3",
                      "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                      "nickname": "VISA: Steven Smith Jr. (ending in: 8888)",
                      "has_cvv": 1,
                      "is_default": 1,
                      "method": "card",
                      "person_name": "Steven Smith Jr.",
                      "card_type": "visa",
                      "card_last_four": "8888",
                      "card_exp": "042019",
                      "bank_name": null,
                      "bank_type": null,
                      "bank_holder_type": null,
                      "address_1": null,
                      "address_2": null,
                      "address_city": null,
                      "address_state": null,
                      "address_zip": "32944",
                      "address_country": "USA",
                      "purged_at": null,
                      "deleted_at": null,
                      "created_at": "2018-08-22 01:47:59",
                      "updated_at": "2018-08-22 01:47:59",
                      "card_exp_datetime": "2019-04-30 23:59:59",
                      "is_usable_in_vt": true,
                      "customer": {
                        "id": "76e81366-a900-4fff-9f6b-5f30b06c2a1d",
                        "firstname": "John",
                        "lastname": "Smith",
                        "company": "ABC INC",
                        "email": "demo@fattmerchant.com",
                        "cc_emails": [],
                        "cc_sms": null,
                        "phone": "1234567898",
                        "address_1": "123 Rite Way",
                        "address_2": "Unit 12",
                        "address_city": "Orlando",
                        "address_state": "FL",
                        "address_zip": "32801",
                        "address_country": "USA",
                        "notes": null,
                        "reference": "",
                        "options": null,
                        "created_at": "2018-08-22 01:47:52",
                        "updated_at": "2018-08-22 01:47:52",
                        "deleted_at": null,
                        "allow_invoice_credit_card_payments": true,
                        "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                      }
                    },
                    "user": {
                      "id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                      "system_admin": true,
                      "name": "Bob Stevenson",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2018-05-31 21:22:05",
                      "email_verified_at": "2017-12-14 18:34:57",
                      "is_api_key": false,
                      "acknowledgments": {
                        "tutorial": true,
                        "editedOnboardingInformation": true,
                        "signedApplicationPowerform": true,
                        "godviewOmniSearchTooltip": true,
                        "godviewWelcome": true
                      },
                      "created_at": "2017-12-14 18:34:57",
                      "updated_at": "2018-07-02 22:51:45",
                      "deleted_at": null,
                      "gravatar": "",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null,
                      "merchant_options": [],
                      "is_default": false
                    }
                  }
                ],
                "reminder": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "payment_method_id": [
                  "The selected payment method id is invalid."
                ],
                "email_receipt": [
                  "The email receipt field must be true or false."
                ],
                "apply_balance": [
                  "The apply balance must be a number."
                ]
              }
            }
          }
        },
        "summary": "Pay an Invoice",
        "operationId": "Pay an Invoice",
        "description": "_(please click this box ^^ for more information)_\n\nOnce you've created an invoice you can post a payment against it. This is used if instead of using `POST /charge` for one time transactions you are implementing an invoicing flow. \nInvoices allow you to keep multiple payments grouped together with refunds and voids.\nInvoice details can be edited through the PUT call but payments against the invoices are immutable.\nIf you need to mark an invoice paid with cash use the `POST /invoice/{id}/pay/{method}` below.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payment_method_id": {
                  "type": "string"
                },
                "email_receipt": {
                  "type": "boolean"
                },
                "apply_balance": {
                  "type": "number"
                }
              },
              "example": {
                "payment_method_id": "f27192f5-c170-451c-a45e-397acb870b15",
                "email_receipt": true,
                "apply_balance": 10
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice?keywords": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "total": 2,
                "per_page": 25,
                "current_page": 1,
                "last_page": 1,
                "next_page_url": null,
                "prev_page_url": null,
                "from": 1,
                "to": 4,
                "data": [
                  {
                    "id": "d3189e3d-b54e-4939-b713-7fcd6d7110b1",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "customer_id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                    "total": 900,
                    "meta": {
                      "lineItems": [
                        {
                          "item": "",
                          "details": "",
                          "quantity": 1,
                          "price": "900"
                        }
                      ],
                      "memo": "",
                      "subtotal": 900,
                      "tax": "",
                      "type": "invoice/schedule"
                    },
                    "status": "SENT",
                    "sent_at": "2017-04-19 15:11:58",
                    "viewed_at": null,
                    "paid_at": null,
                    "schedule_id": "604a74af-b079-4019-b99b-b7a177d88f8f",
                    "reminder_id": "0d815004-11b5-411f-84bd-bcb6b796f4d7",
                    "payment_method_id": "23c06bc1-7473-46fb-8d65-b8e9bde1fe75",
                    "url": "http://localhost:5432/#/bill/",
                    "is_webpayment": false,
                    "deleted_at": null,
                    "created_at": "2017-04-03 15:05:03",
                    "updated_at": "2017-04-19 15:11:58",
                    "payment_attempt_failed": true,
                    "payment_attempt_message": "Max attempts exceeded. A previous charge was recently successful. Please review and if necessary you can try again in five minutes.",
                    "balance_due": 900,
                    "total_paid": 0,
                    "payment_meta": [],
                    "customer": {
                      "id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                      "firstname": "Mario",
                      "lastname": "Mario",
                      "company": "",
                      "email": "fatttest737@gmail.com",
                      "cc_emails": null,
                      "phone": "5555555555",
                      "address_1": "123 S ST.",
                      "address_2": "",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "3222",
                      "address_country": "USA",
                      "notes": "",
                      "reference": "",
                      "options": "",
                      "created_at": "2017-01-30 20:41:23",
                      "updated_at": "2017-01-30 20:41:23",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a"
                    },
                    "user": {
                      "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "system_admin": false,
                      "name": "Demo",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2017-03-29 15:27:19",
                      "email_verified_at": "2017-03-29 15:27:21",
                      "is_api_key": false,
                      "created_at": "2017-01-11 21:44:02",
                      "updated_at": "2017-04-24 15:41:58",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null
                    },
                    "files": [],
                    "child_transactions": [
                      {
                        "id": "05590898-079b-4fd1-b8a5-2241b3f7951c",
                        "invoice_id": "d3189e3d-b54e-4939-b713-7fcd6d7110b1",
                        "reference_id": "",
                        "recurring_transaction_id": "",
                        "type": "charge",
                        "source": null,
                        "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                        "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                        "customer_id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                        "payment_method_id": "23c06bc1-7473-46fb-8d65-b8e9bde1fe75",
                        "is_manual": null,
                        "success": false,
                        "message": "Max attempts exceeded. A previous charge was recently successful. Please review and if necessary you can try again in five minutes.",
                        "meta": {
                          "lineItems": [
                            {
                              "item": "",
                              "details": "",
                              "quantity": 1,
                              "price": "900"
                            }
                          ],
                          "memo": "",
                          "subtotal": 900,
                          "tax": "",
                          "type": "invoice/schedule"
                        },
                        "total": 900,
                        "method": "card",
                        "pre_auth": false,
                        "last_four": "1111",
                        "receipt_email_at": null,
                        "receipt_sms_at": null,
                        "created_at": "2017-04-03 15:05:03",
                        "updated_at": "2017-04-03 15:05:03",
                        "total_refunded": null,
                        "is_refundable": false,
                        "is_voided": false,
                        "is_voidable": false,
                        "schedule_id": "604a74af-b079-4019-b99b-b7a177d88f8f",
                        "customer": {
                          "id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                          "firstname": "Mario",
                          "lastname": "Mario",
                          "company": "",
                          "email": "fatttest737@gmail.com",
                          "cc_emails": null,
                          "phone": "5555555555",
                          "address_1": "123 S ST.",
                          "address_2": "",
                          "address_city": "Orlando",
                          "address_state": "FL",
                          "address_zip": "3222",
                          "address_country": "USA",
                          "notes": "",
                          "reference": "",
                          "options": "",
                          "created_at": "2017-01-30 20:41:23",
                          "updated_at": "2017-01-30 20:41:23",
                          "deleted_at": null,
                          "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a"
                        },
                        "child_transactions": [],
                        "files": [],
                        "payment_method": {
                          "id": "23c06bc1-7473-46fb-8d65-b8e9bde1fe75",
                          "customer_id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                          "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                          "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                          "nickname": "VISA: Mario Mario (ending in: 1111)",
                          "is_default": 0,
                          "method": "card",
                          "person_name": "Mario Mario",
                          "card_type": "visa",
                          "card_last_four": "1111",
                          "card_exp": "022020",
                          "bank_name": null,
                          "bank_type": null,
                          "bank_holder_type": null,
                          "address_1": null,
                          "address_2": null,
                          "address_city": null,
                          "address_state": null,
                          "address_zip": null,
                          "address_country": "USA",
                          "purged_at": null,
                          "deleted_at": null,
                          "created_at": "2017-01-30 20:48:13",
                          "updated_at": "2017-01-30 20:48:13",
                          "card_exp_datetime": "2020-02-29 23:59:59",
                          "customer": {
                            "id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                            "firstname": "Mario",
                            "lastname": "Mario",
                            "company": "",
                            "email": "fatttest737@gmail.com",
                            "cc_emails": null,
                            "phone": "5555555555",
                            "address_1": "123 S ST.",
                            "address_2": "",
                            "address_city": "Orlando",
                            "address_state": "FL",
                            "address_zip": "3222",
                            "address_country": "USA",
                            "notes": "",
                            "reference": "",
                            "options": "",
                            "created_at": "2017-01-30 20:41:23",
                            "updated_at": "2017-01-30 20:41:23",
                            "deleted_at": null,
                            "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a"
                          }
                        },
                        "user": {
                          "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                          "system_admin": false,
                          "name": "Demo",
                          "email": "demo@fattmerchant.com",
                          "email_verification_sent_at": "2017-03-29 15:27:19",
                          "email_verified_at": "2017-03-29 15:27:21",
                          "is_api_key": false,
                          "created_at": "2017-01-11 21:44:02",
                          "updated_at": "2017-04-24 15:41:58",
                          "deleted_at": null,
                          "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                          "team_admin": null,
                          "team_enabled": null,
                          "team_role": null
                        }
                      }
                    ],
                    "reminder": {
                      "id": "0d815004-11b5-411f-84bd-bcb6b796f4d7",
                      "merchant_id": "",
                      "user_id": "",
                      "active": true,
                      "count": 3,
                      "rule": "FREQ=DAILY;COUNT=3;INTERVAL=5;WKST=MO;DTSTART=20170408T150503Z",
                      "last_run_at": "2017-04-19 15:11:57",
                      "next_run_at": null,
                      "event": "InvoiceReminder",
                      "meta": null,
                      "payment_method_id": "",
                      "customer_id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                      "created_at": "2017-04-03 15:05:03",
                      "updated_at": "2017-04-19 15:11:57",
                      "deleted_at": null,
                      "rule_text": "every 5 days for 3 times",
                      "future_occurrences": [],
                      "max": 3,
                      "end_at": null,
                      "status": "COMPLETED"
                    }
                  },
                  {
                    "id": "a1190865-03a2-4854-8e1b-f3aa9ae7d0d8",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                    "customer_id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                    "total": 13,
                    "meta": {
                      "lineItems": [
                        {
                          "item": "fdas",
                          "description": "",
                          "quantity": 1,
                          "price": "13"
                        }
                      ],
                      "memo": "",
                      "subtotal": 13,
                      "tax": ""
                    },
                    "status": "PARTIALLY APPLIED",
                    "sent_at": "2017-02-08 17:34:49",
                    "viewed_at": "2017-02-08 21:20:15",
                    "paid_at": null,
                    "schedule_id": null,
                    "reminder_id": null,
                    "payment_method_id": null,
                    "url": "http://localhost:5432/#/bill/",
                    "is_webpayment": false,
                    "deleted_at": null,
                    "created_at": "2017-02-08 17:34:46",
                    "updated_at": "2017-02-08 21:20:15",
                    "payment_attempt_failed": false,
                    "payment_attempt_message": "",
                    "balance_due": 13,
                    "total_paid": 0,
                    "payment_meta": [],
                    "customer": {
                      "id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                      "firstname": "Mario",
                      "lastname": "Mario",
                      "company": "",
                      "email": "fatttest737@gmail.com",
                      "cc_emails": null,
                      "phone": "5555555555",
                      "address_1": "123 S ST.",
                      "address_2": "",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "3222",
                      "address_country": "USA",
                      "notes": "",
                      "reference": "",
                      "options": "",
                      "created_at": "2017-01-30 20:41:23",
                      "updated_at": "2017-01-30 20:41:23",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a"
                    },
                    "user": {
                      "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                      "system_admin": true,
                      "name": "Benji",
                      "email": "boyoboy",
                      "email_verification_sent_at": "2016-12-01 16:18:46",
                      "email_verified_at": "2016-12-01 16:18:46",
                      "is_api_key": false,
                      "created_at": "2016-12-01 16:18:46",
                      "updated_at": "2017-01-27 20:10:53",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/e3559808f1d54f8676e7a85227b2a6c7",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null
                    },
                    "files": [],
                    "child_transactions": [],
                    "reminder": null
                  }
                ]
              }
            }
          }
        },
        "summary": "Find Invoice with Keywords",
        "operationId": "Find Invoice with Keywords",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis function allows users reorganize, search or filter through all their invoices.\nThe function takes into a set of keywords selected by the user and finds all those invoices that correctly match it.\n`Keywords` is an array of words that are sent into the sent URL to manipulate the search findings \nThe function cannot fail; it'll just show all invoices.\nOnly the options below are available to be used as keywords.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "9ddcf02b-c2be-4f27-b758-dbc12b2aa924",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "total": 10,
                "meta": {
                  "tax": 0,
                  "subtotal": 10,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 10
                    }
                  ]
                },
                "status": "DRAFT",
                "sent_at": null,
                "viewed_at": null,
                "paid_at": null,
                "schedule_id": null,
                "reminder_id": null,
                "payment_method_id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                "url": "https://omni.fattmerchant.com/#/bill/",
                "is_webpayment": false,
                "deleted_at": null,
                "created_at": "2017-05-08 21:32:51",
                "updated_at": "2017-05-08 21:32:51",
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "balance_due": 10,
                "total_paid": 0,
                "payment_meta": [],
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Demo",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                },
                "files": [],
                "child_transactions": [],
                "reminder": null,
                "payment_method": {
                  "id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-08 19:41:03",
                  "updated_at": "2017-05-08 19:41:03",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "schedule": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Get an invoice",
        "operationId": "Get an invoice",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nRetrieves the invoice matching the given id.\nShows details about that invoice.\nCan be used with the `[PUT /invoice/{id}]` call to edit en existing invoice.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "9ddcf02b-c2be-4f27-b758-dbc12b2aa924",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "total": 100,
                "meta": {
                  "tax": 0,
                  "subtotal": 10,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 100
                    }
                  ]
                },
                "status": "DRAFT",
                "sent_at": null,
                "viewed_at": null,
                "paid_at": null,
                "schedule_id": null,
                "reminder_id": null,
                "payment_method_id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                "url": "https://omni.fattmerchant.com/#/bill/",
                "is_webpayment": false,
                "deleted_at": null,
                "created_at": "2017-05-08 21:32:51",
                "updated_at": "2017-05-08 21:42:50",
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "balance_due": 100,
                "total_paid": 0,
                "payment_meta": [],
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Demo",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                },
                "files": [],
                "child_transactions": [],
                "reminder": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Update an Invoice",
        "operationId": "Update an Invoice",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nOnce a specific invoice is pulled up, this function can alter and update that invoice.\nThe options of data to change are no different than when the invoice was created.\nThe data will then update the invoice matching the given id.\nCertain changes that can be made are items, taxes, attached files, reference number and memo.\nInvoices that are already fully paid may not be edited.\n\n** Some things such as receipt emails, the invoice page, the payments page, and the Quickbooks Online integration rely on fields in some field in `meta` to correctly display or function.**\n\nYou may encounter unwanted or unusual behavior if you remove from or change these fields in `meta`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "customer_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    },
                    "lineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "item": {
                            "type": "string"
                          },
                          "details": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "price": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                },
                "total": {
                  "type": "string"
                },
                "payment_method_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "files": {
                  "type": "array",
                  "items": {}
                }
              },
              "example": {
                "customer_id": "{{fmapicustomerid}}",
                "meta": {
                  "tax": 0,
                  "subtotal": 10,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 100
                    }
                  ]
                },
                "total": "100.00",
                "payment_method_id": "{{fmapipaymentmethodid}}",
                "url": "{{fmapipayurl}}",
                "files": []
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "9ddcf02b-c2be-4f27-b758-dbc12b2aa924",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "total": 100,
                "meta": {
                  "tax": 0,
                  "subtotal": 10,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 100
                    }
                  ]
                },
                "status": "DELETED",
                "sent_at": null,
                "viewed_at": null,
                "paid_at": null,
                "schedule_id": null,
                "reminder_id": null,
                "payment_method_id": "d3050b19-77d9-44ac-9851-b1d1680a7684",
                "url": "https://omni.fattmerchant.com/#/bill/",
                "is_webpayment": false,
                "deleted_at": "2017-05-08 21:43:19",
                "created_at": "2017-05-08 21:32:51",
                "updated_at": "2017-05-08 21:43:19",
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "balance_due": 100,
                "total_paid": 0,
                "payment_meta": [],
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Demo",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null
                },
                "files": [],
                "child_transactions": [],
                "reminder": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "deleted_at": [
                  "The invoice is already deleted."
                ]
              }
            }
          }
        },
        "summary": "Delete an Invoice",
        "operationId": "Delete an Invoice",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nDoes not delete the invoice record from the database, but rather just gives it a deleted status and updates the `deleted_at` field to the time of deletion.\nIn other words, this \"soft\" deletes an invoice making it inaccessible to the customer.\nThe invoice will still exist in the database with a `delete_at' set to the time of deletion.\nInvoices with any value in the 'delete_at' column are inaccessible by merchants or customers.\n\n**Cannot be undone without contacting the Fattmerchant dev team.**",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/{id}/send/email": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "4bbd1a64-7472-44ed-afef-02b82d3eae24",
                "merchant_id": "dee75215-b3bc-4e44-9bc5-75d0fb498b61",
                "user_id": "7c30a7f6-eabc-4355-b530-d351f8f0a4f1",
                "customer_id": "a41c93d0-e45d-4d41-b46c-f781a02019f5",
                "total": 12,
                "meta": {
                  "tax": 2,
                  "subtotal": 10,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 10
                    }
                  ]
                },
                "status": "SENT",
                "sent_at": "2016-05-09 17:10:43",
                "viewed_at": null,
                "paid_at": null,
                "url": "http://127.0.0.1:5477/#/bill/",
                "deleted_at": null,
                "created_at": "2016-05-09 17:10:37",
                "updated_at": "2016-05-09 17:10:43",
                "customer": {
                  "id": "a41c93d0-e45d-4d41-b46c-f781a02019f5",
                  "firstname": "Jason",
                  "lastname": "Mann",
                  "company": "CIA",
                  "email": "JasonGuy@CIA.com",
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "notes": "",
                  "options": "",
                  "created_at": "2016-04-26 13:55:21",
                  "updated_at": "2016-04-26 13:55:21",
                  "deleted_at": null,
                  "payment_attempt_failed": false,
                  "payment_attempt_message": "",
                  "gravatar": "//www.gravatar.com/avatar/1b91155f027795b2d36a08b1e5e8e9df"
                },
                "user": {
                  "id": "7c30a7f6-eabc-4355-b530-d351f8f0a4f1",
                  "system_admin": true,
                  "name": "DANIEL WALKER",
                  "email": "demo@fattmerchant.com",
                  "created_at": "2016-04-12 13:52:26",
                  "updated_at": "2016-04-25 16:46:42",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8"
                },
                "child_transactions": [],
                "merchant": {
                  "id": "dee75215-b3bc-4e44-9bc5-75d0fb498b61",
                  "mid": "520000294774",
                  "status": "ACTIVE",
                  "subdomain": "demo",
                  "company_name": "Fattmerchant",
                  "contact_name": "Fattmerchant",
                  "contact_email": "info2@fattmerchant.com",
                  "contact_phone": "8555503288",
                  "address_1": "25 Wall Street",
                  "address_2": "Suite 1",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "hosted_payments_token": "gfdbfed",
                  "branding": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/avatars/0624acc8-c0be-45dc-a153-134da1990218.jpeg",
                  "options": {
                    "hosted_payments_success_note": "Thank you for your payment! It's gladly appreciated!",
                    "hosted_payments_url_long": "http://localhost.app:5477/#/pay/t___-_",
                    "hosted_payments_url_short": "http://bit.ly/1K34yKV",
                    "hosted_payments_note": "Thank you for your payment"
                  },
                  "notes": "",
                  "gateway_type": null,
                  "gateway_name": null,
                  "vendor_keys": {},
                  "created_at": "2016-04-12 13:52:26",
                  "updated_at": "2016-04-27 15:12:51",
                  "deleted_at": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "Invoice could not be found"
                ]
              }
            }
          }
        },
        "summary": "Send an Invoice via email",
        "operationId": "Send an Invoice via email",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nSends the invoice to the customer's e-mail and other CC e-mails.\nTo be called immediately after an invoice is created or updated.\nOnce an invoice is made, it won't be sent automatically, as it can be made as a draft for a future invoice.\nThe invoice id must exist for this method to pass.\nA single invoice can be sent multiple times as a way to remind a customer of a charge.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/{id}/sms": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "4bbd1a64-7472-44ed-afef-02b82d3eae24",
                "merchant_id": "dee75215-b3bc-4e44-9bc5-75d0fb498b61",
                "user_id": "7c30a7f6-eabc-4355-b530-d351f8f0a4f1",
                "customer_id": "a41c93d0-e45d-4d41-b46c-f781a02019f5",
                "total": 12,
                "meta": {
                  "tax": 2,
                  "subtotal": 10,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 10
                    }
                  ]
                },
                "status": "SENT",
                "sent_at": "2016-05-09 17:10:43",
                "viewed_at": null,
                "paid_at": null,
                "url": "http://127.0.0.1:5477/#/bill/",
                "deleted_at": null,
                "created_at": "2016-05-09 17:10:37",
                "updated_at": "2016-05-09 17:10:43",
                "customer": {
                  "id": "a41c93d0-e45d-4d41-b46c-f781a02019f5",
                  "firstname": "Jason",
                  "lastname": "Mann",
                  "company": "CIA",
                  "email": "JasonGuy@CIA.com",
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "notes": "",
                  "options": "",
                  "created_at": "2016-04-26 13:55:21",
                  "updated_at": "2016-04-26 13:55:21",
                  "deleted_at": null,
                  "payment_attempt_failed": false,
                  "payment_attempt_message": "",
                  "gravatar": "//www.gravatar.com/avatar/1b91155f027795b2d36a08b1e5e8e9df"
                },
                "user": {
                  "id": "7c30a7f6-eabc-4355-b530-d351f8f0a4f1",
                  "system_admin": true,
                  "name": "DANIEL WALKER",
                  "email": "demo@fattmerchant.com",
                  "created_at": "2016-04-12 13:52:26",
                  "updated_at": "2016-04-25 16:46:42",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8"
                },
                "child_transactions": [],
                "merchant": {
                  "id": "dee75215-b3bc-4e44-9bc5-75d0fb498b61",
                  "mid": "520000294774",
                  "status": "ACTIVE",
                  "subdomain": "demo",
                  "company_name": "Fattmerchant",
                  "contact_name": "Fattmerchant",
                  "contact_email": "info2@fattmerchant.com",
                  "contact_phone": "8555503288",
                  "address_1": "25 Wall Street",
                  "address_2": "Suite 1",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "hosted_payments_token": "gfdbfed",
                  "branding": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/avatars/0624acc8-c0be-45dc-a153-134da1990218.jpeg",
                  "options": {
                    "hosted_payments_success_note": "Thank you for your payment! It's gladly appreciated!",
                    "hosted_payments_url_long": "http://localhost.app:5477/#/pay/t___-_",
                    "hosted_payments_url_short": "http://bit.ly/1K34yKV",
                    "hosted_payments_note": "Thank you for your payment"
                  },
                  "notes": "",
                  "gateway_type": null,
                  "gateway_name": null,
                  "vendor_keys": {},
                  "created_at": "2016-04-12 13:52:26",
                  "updated_at": "2016-04-27 15:12:51",
                  "deleted_at": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "Invoice could not be found"
                ]
              }
            }
          }
        },
        "summary": "Send an Invoice via sms",
        "operationId": "Send an Invoice via sms",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nSends the invoice to the customer's phone number and other CC phone numbers.\nTo be called immediately after an invoice is created or updated.\nOnce an invoice is made, it won't be sent automatically, as it can be made as a draft for a future invoice.\nThe invoice id must exist for this method to pass.\nA single invoice can be sent multiple times as a way to remind a customer of a charge.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/{id}/pay/{method}": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": {
                "invoice_id": [
                  "id not found"
                ]
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": [
                "A paid invoice can't be paid again."
              ]
            }
          }
        },
        "summary": "Mark an Invoice Paid in Cash or Check",
        "operationId": "Mark an Invoice Paid in Cash or Check",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis marks an invoice as paid manually (meaning not a processed payment, but cash, check or giftcard), rather than a credit card through the Fattmerchant system.\n\nIt will update `paid_at` to the current time for the time the payment was received. \nOnce marked as paid with cash, the invoice is no longer billable and will be marked as paid.\nDoesn't have to be fully paid in cash; it can be paid partially.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "apply_balance": {
                  "type": "number"
                },
                "payment_note": {
                  "type": "string"
                }
              },
              "example": {
                "apply_balance": 1000,
                "payment_note": "Customer walked in and handed me a huge stack of cash on Thursday"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          },
          {
            "name": "method",
            "in": "path",
            "description": "The method value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/schedule/": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "a48c3a29-3a50-4803-b352-ef0bc6859177",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "active": true,
                "count": 0,
                "rule": "FREQ=DAILY;COUNT=3;DTSTART=20181126T000000Z",
                "last_run_at": null,
                "next_run_at": "2018-11-26 00:00:00",
                "event": "InvoiceGenerator",
                "payment_method_id": "bbeef9cb-07eb-4c62-8a92-ccde32cfeee3",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "created_at": "2017-05-10 18:03:28",
                "updated_at": "2017-05-10 18:03:28",
                "deleted_at": null,
                "rule_text": "daily for 3 times",
                "future_occurrences": [
                  "2018-11-26 00:00:00",
                  "2018-11-27 00:00:00",
                  "2018-11-28 00:00:00"
                ],
                "max": 3,
                "end_at": null,
                "status": "NOT STARTED",
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "files": [],
                "invoices": [],
                "payment_method": {
                  "id": "bbeef9cb-07eb-4c62-8a92-ccde32cfeee3",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-10 18:03:04",
                  "updated_at": "2017-05-10 18:03:04",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "meta": {
                  "tax": 0,
                  "subtotal": 2,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 2
                    }
                  ]
                },
                "url": "https://omni.fattmerchant.com/#/bill/",
                "total": "2.00",
                "email_notification": false
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "url": [
                  "The url field is required."
                ],
                "total": [
                  "The total field is required."
                ],
                "payment_method_id": [
                  "The Payment Method could not be found"
                ]
              }
            }
          }
        },
        "summary": "Create a Scheduled Invoice",
        "operationId": "Create a Scheduled Invoice",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis creates a scheduled invoice, an invoice that runs at a certain frequency a certain amount of times.\nDoes not need a payment method to be created; it can be updated using `PUT /invoice/schedule/{id}`.\nThe `next_run_at` time is calculated and recalculated every time the scheduled invoice makes a payment.\nAny e-mails tied to the invoice will get a receipt any time the invoice is paid.\nUsing a `PUT /invoice/schedule/{id}` call, the merchant can pause the scheduled invoice from charging.\nThis happens by updating the invoice's `active` status to `false`.\nWhen a scheduled invoice is unpaused, the merchant must pick the `next_run_at` time manually.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/schedule": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "total": 2,
                "per_page": 25,
                "current_page": 1,
                "last_page": 1,
                "next_page_url": null,
                "prev_page_url": null,
                "from": 1,
                "to": 2,
                "data": [
                  {
                    "id": "53ad71d4-b85f-4efc-9ae1-579ff6eeb206",
                    "merchant_id": "26492104-dbd0-49f7-918a-a4dcf9b2df1b",
                    "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                    "active": true,
                    "count": 0,
                    "rule": "FREQ=DAILY;COUNT=3;DTSTART=20181126T000000Z",
                    "last_run_at": null,
                    "next_run_at": "2018-11-26 00:00:00",
                    "event": "InvoiceGenerator",
                    "payment_method_id": null,
                    "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "created_at": "2017-05-10 17:37:50",
                    "updated_at": "2017-05-10 17:37:50",
                    "deleted_at": null,
                    "rule_text": "daily for 3 times",
                    "future_occurrences": [
                      "2018-11-26 00:00:00",
                      "2018-11-27 00:00:00",
                      "2018-11-28 00:00:00"
                    ],
                    "max": 3,
                    "end_at": null,
                    "status": "NOT STARTED",
                    "customer": {
                      "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@abc.com",
                      "cc_emails": [
                        "demo1@abc.com",
                        "demo2@abc.com"
                      ],
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-05-08 19:22:51",
                      "updated_at": "2017-05-08 19:23:46",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                    },
                    "files": [],
                    "invoices": [],
                    "payment_method": null,
                    "meta": {
                      "tax": 0,
                      "subtotal": 2,
                      "lineItems": [
                        {
                          "id": "optional-fm-catalog-item-id",
                          "item": "Demo Item",
                          "details": "this is a regular demo item",
                          "quantity": 1,
                          "price": 2
                        }
                      ]
                    },
                    "url": "https://omni.fattmerchant.com/#/bill/",
                    "total": "2.00",
                    "email_notification": false
                  },
                  {
                    "id": "af8d5ac4-ac2b-484f-8b97-3db7d8f79e35",
                    "merchant_id": "26492104-dbd0-49f7-918a-a4dcf9b2df1b",
                    "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                    "active": true,
                    "count": 0,
                    "rule": "FREQ=DAILY;COUNT=3;DTSTART=20181126T000000Z",
                    "last_run_at": null,
                    "next_run_at": "2018-11-26 00:00:00",
                    "event": "InvoiceGenerator",
                    "payment_method_id": null,
                    "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "created_at": "2017-05-10 17:36:23",
                    "updated_at": "2017-05-10 17:36:23",
                    "deleted_at": null,
                    "rule_text": "daily for 3 times",
                    "future_occurrences": [
                      "2018-11-26 00:00:00",
                      "2018-11-27 00:00:00",
                      "2018-11-28 00:00:00"
                    ],
                    "max": 3,
                    "end_at": null,
                    "status": "NOT STARTED",
                    "customer": {
                      "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@abc.com",
                      "cc_emails": [
                        "demo1@abc.com",
                        "demo2@abc.com"
                      ],
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-05-08 19:22:51",
                      "updated_at": "2017-05-08 19:23:46",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                    },
                    "files": [],
                    "invoices": [],
                    "payment_method": null,
                    "meta": {
                      "tax": 0,
                      "subtotal": 2,
                      "lineItems": [
                        {
                          "id": "optional-fm-catalog-item-id",
                          "item": "Demo Item",
                          "details": "this is a regular demo item",
                          "quantity": 1,
                          "price": 2
                        }
                      ]
                    },
                    "url": "https://omni.fattmerchant.com/#/bill/",
                    "total": "2.00",
                    "email_notification": false
                  }
                ]
              }
            }
          }
        },
        "summary": "Retrieve All Scheduled Invoices",
        "operationId": "Retrieve All Scheduled Invoices",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nFinds and lists all scheduled invoices under a merchant's account.\nScheduled invoices are created under `POST /invoice/schedule/`, can be edited under `PUT /invoice/schedule/{id}` and can be deleted under `DELETE /invoice/schedule/`.\nThe default sort is `created_at` in descending order (DESC).\nMore sorting and ordering parameters can be found below.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/invoice/schedule/{id}": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "08ae5668-cd54-44e6-9259-b1e2cc36a212",
                "merchant_id": "068866d4-96ec-4735-b652-84e74ecb8712",
                "user_id": "6b5e0337-817d-4025-8729-6370173295a9",
                "active": true,
                "count": 1,
                "rule": "FREQ=MONTHLY;COUNT=3;DTSTART=2016-06-20 00:00:00",
                "last_run_at": "2016-09-02 15:37:02",
                "next_run_at": "2016-09-03 15:36:35",
                "event": "InvoiceGenerator",
                "payment_method_id": "b89ac300-6185-4de5-b255-fe65855dfcc9",
                "customer_id": "d647437c-da35-46f5-a6dd-956186861e03",
                "created_at": "2016-09-02 15:36:35",
                "updated_at": "2016-09-02 15:40:28",
                "deleted_at": null,
                "rule_text": "monthly for 3 times",
                "future_occurrences": [],
                "max": 3,
                "end_at": null,
                "pending": false,
                "payment_attempt_failed": false,
                "payment_attempt_message": "",
                "customer": {
                  "id": "d647437c-da35-46f5-a6dd-956186861e03",
                  "firstname": "Jared",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@fattmerchant.com",
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "options": "",
                  "created_at": "2016-08-19 16:04:10",
                  "updated_at": "2016-08-19 16:15:32",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                },
                "invoices": [
                  {
                    "id": "892d6167-7488-438a-9cdc-0e6bd29c460b",
                    "merchant_id": "068866d4-96ec-4735-b652-84e74ecb8712",
                    "user_id": "6b5e0337-817d-4025-8729-6370173295a9",
                    "customer_id": "d647437c-da35-46f5-a6dd-956186861e03",
                    "total": 2,
                    "meta": {
                      "tax": 0,
                      "subtotal": 2,
                      "lineItems": [
                        {
                          "id": "optional-fm-catalog-item-id",
                          "item": "Demo Item",
                          "details": "this is a regular demo item",
                          "quantity": 1,
                          "price": 2
                        }
                      ]
                    },
                    "status": "SENT",
                    "sent_at": "2016-09-02 15:37:02",
                    "viewed_at": null,
                    "paid_at": null,
                    "schedule_id": "08ae5668-cd54-44e6-9259-b1e2cc36a212",
                    "payment_method_id": "",
                    "url": "",
                    "deleted_at": null,
                    "created_at": "2016-09-02 15:37:02",
                    "updated_at": "2016-09-02 15:37:02",
                    "customer": {
                      "id": "d647437c-da35-46f5-a6dd-956186861e03",
                      "firstname": "Jared",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@fattmerchant.com",
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "options": "",
                      "created_at": "2016-08-19 16:04:10",
                      "updated_at": "2016-08-19 16:15:32",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                    },
                    "user": {
                      "id": "6b5e0337-817d-4025-8729-6370173295a9",
                      "system_admin": true,
                      "name": "Daniel",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2016-05-11 17:13:33",
                      "email_verified_at": "2016-05-11 17:13:33",
                      "created_at": "2015-07-21 21:23:42",
                      "updated_at": "2016-06-01 18:46:01",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                      "team_admin": null,
                      "team_enabled": null
                    },
                    "child_transactions": []
                  }
                ],
                "meta": {
                  "tax": 0,
                  "subtotal": 2,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 2
                    }
                  ]
                },
                "url": "http://127.0.0.1:5477/#/bill/",
                "total": "2.00"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "customer_id": [
                  "The selected customer id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Edit an Invoice Schedule",
        "operationId": "Edit an Invoice Schedule",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis function is used to update a pre-existing generated schedule.\nCan be used to update the invoice's information, or pause the invoice by setting `active` to `false`.\nIf `active` is set to `false`, the scheduled invoice will have a future `next_run_at` date of `null`.\nIf `active` is set to `true`, the merchant will have to manually set `next_run_at` date.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    },
                    "lineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "item": {
                            "type": "string"
                          },
                          "details": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "price": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                },
                "payment_method_id": {
                  "type": "string"
                },
                "email_notification": {
                  "type": "boolean"
                },
                "active": {
                  "type": "boolean"
                }
              },
              "example": {
                "total": "2.00",
                "meta": {
                  "tax": 0,
                  "subtotal": 2,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 2
                    }
                  ]
                },
                "payment_method_id": "{{fmapipaymentmethodid}}",
                "email_notification": false,
                "active": false
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "a48c3a29-3a50-4803-b352-ef0bc6859177",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "active": true,
                "count": 0,
                "rule": "FREQ=DAILY;COUNT=3;DTSTART=20181126T000000Z",
                "last_run_at": null,
                "next_run_at": null,
                "event": "InvoiceGenerator",
                "payment_method_id": "bbeef9cb-07eb-4c62-8a92-ccde32cfeee3",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "created_at": "2017-05-10 18:03:28",
                "updated_at": "2017-05-10 18:03:28",
                "deleted_at": "2017-05-10 19:19:32",
                "rule_text": "daily for 3 times",
                "future_occurrences": [],
                "max": 3,
                "end_at": null,
                "status": "DELETED",
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "files": [],
                "invoices": [],
                "payment_method": {
                  "id": "bbeef9cb-07eb-4c62-8a92-ccde32cfeee3",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-10 18:03:04",
                  "updated_at": "2017-05-10 18:03:04",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "meta": {
                  "tax": 0,
                  "subtotal": 2,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 2
                    }
                  ]
                },
                "url": "https://omni.fattmerchant.com/#/bill/",
                "total": "2.00",
                "email_notification": false
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The schedule could not be found"
                ]
              }
            }
          }
        },
        "summary": "Delete a Scheduled Invoice",
        "operationId": "Delete a Scheduled Invoice",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\n\"Soft\" deletes a scheduled invoice from a merchants account.\nThe scheduled invoice will exist in the database, but will not be accessible by the merchant or customers.\nIt sets the `deleted_at` field to the time of deletion, stopping the scheduled future charges.\nAs of now, deleting an invoice doesn't change `active`, but will set `next_run_at` to null and `future_occurrences` will be an empty set.\nScheduled invoices with anything other than null in `deleted_at` are inaccessible by the merchant or customers.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/customer/{customerId}/payment-method": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "id": "7e3a83ea-6770-41f7-9b28-7ea1a3ae33e7",
                  "customer_id": "35e4cfa9-d87e-45fc-84da-a6bdce2c3330",
                  "merchant_id": "85c58c65-4da7-4f99-acb0-afa885874572",
                  "user_id": "hosted-payments",
                  "nickname": "VISA: Bob Smithers (ending in: 1111)",
                  "has_cvv": 0,
                  "is_default": 0,
                  "method": "card",
                  "person_name": "Bob Smithers",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "032022",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "999999",
                  "address_country": null,
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-08-03 17:59:10",
                  "updated_at": "2018-08-03 17:59:10",
                  "card_exp_datetime": "2022-03-31 23:59:59",
                  "is_usable_in_vt": true,
                  "is_tokenized": true,
                  "customer": {
                    "id": "35e4cfa9-d87e-45fc-84da-a6bdce2c3330",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "webpaymentstest@test.com",
                    "cc_emails": [],
                    "cc_sms": null,
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "",
                    "options": null,
                    "created_at": "2018-07-27 19:08:48",
                    "updated_at": "2018-07-27 19:08:48",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": "//www.gravatar.com/avatar/18dd69e3959903c248ac613b51bc7f8e"
                  }
                },
                {
                  "id": "403e043d-2971-4062-adc7-7e64f7882786",
                  "customer_id": "35e4cfa9-d87e-45fc-84da-a6bdce2c3330",
                  "merchant_id": "85c58c65-4da7-4f99-acb0-afa885874572",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "nickname": "personal savings, BANK INC (ending in: 3210)",
                  "has_cvv": 0,
                  "is_default": 1,
                  "method": "bank",
                  "person_name": "Bob Smith",
                  "card_type": null,
                  "card_last_four": "3210",
                  "card_exp": null,
                  "bank_name": "Bank INC",
                  "bank_type": "savings",
                  "bank_holder_type": "personal",
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": null,
                  "address_country": null,
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-08-02 21:06:04",
                  "updated_at": "2018-08-02 21:06:04",
                  "card_exp_datetime": [],
                  "is_usable_in_vt": true,
                  "is_tokenized": true,
                  "customer": {
                    "id": "35e4cfa9-d87e-45fc-84da-a6bdce2c3330",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "webpaymentstest@test.com",
                    "cc_emails": [],
                    "cc_sms": null,
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "",
                    "options": null,
                    "created_at": "2018-07-27 19:08:48",
                    "updated_at": "2018-07-27 19:08:48",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": "//www.gravatar.com/avatar/18dd69e3959903c248ac613b51bc7f8e"
                  }
                }
              ]
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Get all Payment Methods for a Customer",
        "operationId": "Get all Payment Methods for a Customer",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nRetreives a **non-paginated** data array of all non-deleted payment methods associated with a customer.\nThis route is a GET operation and can return a validation error if the customer id is invalid.\nThe `id` in each object is the payment method id which can be used in any route which generates a transaction like `POST charge`\n\nPayment methods are ordered by `created_at DESC` (newest at top in index 0).",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "The customerId value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/payment-method/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "6ba7babe-9906-4e7e-b1a5-f628c7badb61",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                "is_default": 1,
                "method": "card",
                "person_name": "Steven Smith Jr.",
                "card_type": "visa",
                "card_last_four": "1111",
                "card_exp": "042019",
                "bank_name": null,
                "bank_type": null,
                "bank_holder_type": null,
                "address_1": null,
                "address_2": null,
                "address_city": null,
                "address_state": null,
                "address_zip": "32944",
                "address_country": "USA",
                "purged_at": null,
                "deleted_at": "2017-05-10 19:54:09",
                "created_at": "2017-05-10 19:54:04",
                "updated_at": "2017-05-10 19:54:09",
                "card_exp_datetime": "2019-04-30 23:59:59",
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Get a Payment Method By ID",
        "operationId": "Get a Payment Method By ID",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nRetrieves the payment method matching the given id.\nCan be used with `PUT /payment-method/{id}` to edit the already existing payment method.\nDoes not give back security sensitive information such as the full credit card number or security code.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "6ba7babe-9906-4e7e-b1a5-f628c7badb61",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "nickname": "VISA: Carl Junior Sr. (ending in: 1111)",
                "is_default": 1,
                "method": "card",
                "person_name": "Carl Junior Sr.",
                "card_type": "visa",
                "card_last_four": "1111",
                "card_exp": "042019",
                "bank_name": null,
                "bank_type": null,
                "bank_holder_type": null,
                "address_1": null,
                "address_2": null,
                "address_city": null,
                "address_state": null,
                "address_zip": "32944",
                "address_country": "USA",
                "purged_at": null,
                "deleted_at": null,
                "created_at": "2017-05-10 19:54:04",
                "updated_at": "2017-05-10 19:54:04",
                "card_exp_datetime": "2019-04-30 23:59:59",
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Update a Payment Method",
        "operationId": "Update a Payment Method",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis function updates a `payment-method` after it already exists whether it was created through Fattmerchant.js or direct-post.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "is_default": {
                  "type": "number"
                },
                "person_name": {
                  "type": "string"
                },
                "card_type": {
                  "type": "string"
                },
                "card_last_four": {
                  "type": "string"
                },
                "card_exp": {
                  "type": "string"
                },
                "bank_name": {
                  "type": "null"
                },
                "bank_type": {
                  "type": "null"
                },
                "bank_holder_type": {
                  "type": "null"
                },
                "address_1": {
                  "type": "null"
                },
                "address_2": {
                  "type": "null"
                },
                "address_city": {
                  "type": "null"
                },
                "address_state": {
                  "type": "null"
                },
                "address_zip": {
                  "type": "string"
                },
                "address_country": {
                  "type": "string"
                }
              },
              "example": {
                "is_default": 1,
                "person_name": "Carl Junior Sr.",
                "card_type": "visa",
                "card_last_four": "1111",
                "card_exp": "032020",
                "bank_name": null,
                "bank_type": null,
                "bank_holder_type": null,
                "address_1": null,
                "address_2": null,
                "address_city": null,
                "address_state": null,
                "address_zip": "32944",
                "address_country": "USA"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "6ba7babe-9906-4e7e-b1a5-f628c7badb61",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                "is_default": 1,
                "method": "card",
                "person_name": "Steven Smith Jr.",
                "card_type": "visa",
                "card_last_four": "1111",
                "card_exp": "042019",
                "bank_name": null,
                "bank_type": null,
                "bank_holder_type": null,
                "address_1": null,
                "address_2": null,
                "address_city": null,
                "address_state": null,
                "address_zip": "32944",
                "address_country": "USA",
                "purged_at": null,
                "deleted_at": "2017-05-10 19:54:09",
                "created_at": "2017-05-10 19:54:04",
                "updated_at": "2017-05-10 19:54:04",
                "card_exp_datetime": "2019-04-30 23:59:59",
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Delete a Customer's Payment Method",
        "operationId": "Delete a Customer's Payment Method",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis function deletes a `payment-method` of customer.\nThis doesn't actually delete the `payment-method` from the database, but doesn't allow the merchant to access it anymore.\nThe `deleted_at` field in the database for the payment method is updated to the time of deletion.\nAny card with a `delete_at` of anything other than `null` is inaccessible outside of the database.\nSaved cards that haven't been used for more than six-months will be automatically deleted over time completely from the database.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/forgot": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                "email sent"
              ]
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "url": [
                  "The url field is required."
                ],
                "email": [
                  "The selected email is required."
                ]
              }
            }
          }
        },
        "summary": "Initiate Password Reset",
        "operationId": "Initiate Password Reset",
        "description": "_(please click this box ^^ for more information)_\n**Note: No Authentication Token Required**\n\nThis function is used to initiate resetting a user's password.\nTakes in the e-mail of the user and creates a reset URL with a token of the merchant.\nAfterwards, creates the reset password request in the database.\nIf the e-mail is not recognized the web page will return \"e-mail not recognized\".\nThis is to be used in conjunction with `[GET /reset/{token}]` and `[POST /reset/{token}]`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "example": {
                "email": "demo@fattmerchant.com",
                "url": "http://127.0.0.1:5667/#/reset/"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/reset/{token}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "token": "d84da733-ca18-4c73-b06f-8f7cbb356721",
                "user_id": "7c30a7f£6-eabc-4355-b530-d351f8f0a4f1",
                "email": "demo@fattmerchant.com",
                "reset_at": null,
                "created_at": "2016-04-19 16:22:10",
                "updated_at": "2016-04-19 16:22:10"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "token": [
                  "The selected token is invalid."
                ]
              }
            }
          }
        },
        "summary": "Verify Password Reset Token",
        "operationId": "Verify Password Reset Token",
        "description": "_(please click this box ^^ for more information)_\n**Note: No Authentication Token Required**\n\nVerification step for password reset.\nDetermines if the given token in the URL is correct or not.\nPrevents the user from entering a new password without valid access.\nReturns a \"404 page not found\" error if the token is wrong.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "The token value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudCI6ImRlZTc1MjE1LWIzYmMtNGU0NC05YmM1LTc1ZDBmYjQ5OGI2MSIsInN1YiI6IjdjMzBhN2Y2LWVhYmMtNDM1NS1iNTMwLWQzNTFmOGYwYTRmMSIsImlzcyI6Imh0dHA6XC9cL2ZtYXBpLmxvY2FsXC9yZXNldFwvZDg0ZGE3MzMtY2ExOC00YzczLWIwNmYtOGY3Y2JiMzU2NzIxIiwiaWF0IjoxNDYxMDgzMDQzLCJleHAiOjE0NjExNjk0NDMsIm5iZiI6MTQ2MTA4MzA0MywianRpIjoiMjNjZjU1MWQyZDllNDA4ODA1ZjQ5MWE1YjI5ZjY2YTQifQ.Io7dLSUBayeRbgZEkq60M3b7hmVzuWLEpj0r5bE7hYk",
                  "user": {
                    "id": "7c30a7f6-eabc-4355-b530-d351f8f0a4f1",
                    "system_admin": true,
                    "name": "DANIEL WALKER",
                    "email": "demo@fattmerchant.com",
                    "created_at": "2016-04-12 13:52:26",
                    "updated_at": "2016-04-19 16:24:02",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                    "team_admin": true,
                    "team_enabled": true
                  },
                  "merchant": {
                    "id": "dee75215-b3bc-4e44-9bc5-75d0fb498b61",
                    "mid": "520000294774",
                    "status": "ACTIVE",
                    "subdomain": "demo",
                    "company_name": "Fattmerchant",
                    "contact_name": "Fattmerchant",
                    "contact_email": "info@fattmerchant.com",
                    "contact_phone": "8555503288",
                    "address_1": "25 Wall Street",
                    "address_2": "Suite 1",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "hosted_payments_token": null,
                    "branding": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/avatars/0624acc8-c0be-45dc-a153-134da1990218.jpeg",
                    "options": null,
                    "gateway_type": null,
                    "gateway_name": null,
                    "created_at": "2016-04-12 13:52:26",
                    "updated_at": "2016-04-12 13:52:26",
                    "deleted_at": null
                  }
                }
              ]
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "token": [
                  "The selected token is invalid."
                ]
              }
            }
          }
        },
        "summary": "Reset Password",
        "operationId": "Reset Password",
        "description": "_(please click this box ^^ for more information)_\n**Note: No Authentication Token Required**\n\nFinalizes the password reset process.\nTakes in the new password and confirmation of that password from the user.\nVerifies the user token is valid.\nAfterwards, it is encrypted and then stored in the database.\nCreates an entry under the `password_reset` table.\n\n**Attributes**\n\n* `password` (required, string): The new password the merchant has chosen.\n\n* `password_confirmation` (required, string): The same new password to make sure the user entered it in correctly.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                }
              },
              "example": {
                "password": "bottomline",
                "password_confirmation": "bottomline"
              }
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "The token value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/query/deposit": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "data": [
                  {
                    "batched_at": "2019-01-01",
                    "batch_id": "00001",
                    "last_transaction": "2019-01-01T18:38:00.000Z",
                    "count": 29,
                    "sum": 1379.65,
                    "avg": 47.57,
                    "min": 10,
                    "max": 199.93,
                    "std": 33.82
                  },
                  {
                    "batched_at": "2019-01-02",
                    "batch_id": "00002",
                    "last_transaction": "2019-01-02T17:28:00.000Z",
                    "count": 18,
                    "sum": 706,
                    "avg": 39.22,
                    "min": 10,
                    "max": 75,
                    "std": 12.9
                  }
                ]
              }
            }
          }
        },
        "summary": "Get List of Deposits",
        "operationId": "Get List of Deposits",
        "description": "_(please click this box ^^ for more information)_\nShows list of your merchant's deposits. Results may be filtered by specifying a date range; for example, to filter by a date range, query `/deposit?page=1&startDate=2019-01-01&endDate=2019-01-02` to search between January 1st, 2019 and January 2nd, 2019.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/query/depositDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "Get Detail of Specific Deposit",
        "operationId": "Get Detail of Specific Deposit",
        "description": "_(please click this box ^^ for more information)_\nShows granular detail about a specific deposit. As deposits may sometimes have the same batch id, be sure to use batchId, startDate, and endDate when making your query. For example, a query for the first of the previous example's batches would look like this: `{apiUrl}/depositDetail?batchId=00001&startDate=2019-01-01%2000%3A00%3A00&endDate=2019-01-01%2023%3A59%3A59`, where we are searching for the deposit with `batchId=00001`, `startDate=2019-01-01 00:00:00`, and `endDate=2019-01-01 23:59:59`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/query/deposit/{auth_id}/transaction": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "eb5353af-c246-4e9a-8115-c0219f6566ca"
              }
            }
          }
        },
        "summary": "Get transaction id for specific Deposit Detail auth id add report",
        "operationId": "Get transaction id for specific Deposit Detail auth id add report",
        "description": "_(please click this box ^^ for more information)_\nLooks up a transaction id for a specific deposit detail datum using the auth_id. This can be helpful if you are creating a report and need specific information about the original transaction that does not exist on the deposit detail datum.\n\nFor example, a query to to look up the first transaction of the previous example's data would look like this: `{apiUrl}/deposit/654321/transaction`",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "auth_id",
            "in": "path",
            "description": "The auth_id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/query/team-summary": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "charge_count_success": 3,
                "refund_count_success": 0,
                "charge_count_fail": 1,
                "invoice_count": 56,
                "scheduled_invoice_count": 0,
                "customer_count": 222,
                "user_count": 11,
                "file_count": 3
              }
            }
          }
        },
        "summary": "Team Summary",
        "operationId": "Team Summary",
        "description": "_(please click this box ^^ for more information)_\n**Note: Authentication Token, Active Team Required**\n\nReturns a list of stats about the current team.\n\nSupplies a count of a team's successful charges, refunds, failed charges, invoices, scheduled invoices, customers, users and files.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/self": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": false,
                  "name": "Demo",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-03-29 15:27:19",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-04-24 15:41:58",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_role": "admin",
                  "team_admin": true,
                  "team_enabled": true
                },
                "merchant": {
                  "id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "mid": "520000294774",
                  "status": "ACTIVE",
                  "subdomain": "demo",
                  "company_name": "Here",
                  "contact_name": "Fattmerchant",
                  "contact_email": "demo737@fattmerchant.com",
                  "contact_phone": "8555503288",
                  "address_1": "25 Wall Street",
                  "address_2": "Suite 1",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "hosted_payments_token": "okay",
                  "plan": {
                    "id": "d619a0cc-b7e1-11e6-a0aa-08002777c33d",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "",
                    "name": "premium",
                    "created_at": "2016-12-01 16:18:46",
                    "updated_at": "2016-12-01 16:18:46"
                  },
                  "options": {
                    "default_dashboard": "Summary",
                    "social": {
                      "website_url": "http://google.com",
                      "facebook_url": "http://google.com",
                      "instagram_url": "http://google.com",
                      "twitter_url": "http://google.com",
                      "linkedin_url": "http://google.com"
                    },
                    "hosted_payments_url_long": "http://localhost:5432/#/pay/okay",
                    "hosted_payments_url_short": "",
                    "hosted_payments_success_note": "31",
                    "hosted_payments_note": "12"
                  },
                  "gateway_type": "test",
                  "processor": "Vantiv",
                  "product_type": "Terminal",
                  "welcome_email_sent_at": null,
                  "created_at": "2016-12-01 16:18:46",
                  "updated_at": "2017-04-21 20:15:12",
                  "deleted_at": null,
                  "gateway_name": null,
                  "branding": {
                    "id": "af82b215-6081-42b0-b494-fbda189ce8f9",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "name": "",
                    "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/branding/af82b215-6081-42b0-b494-fbda189ce8f9.png",
                    "tag": "branding",
                    "meta": {
                      "filesize_bytes": 3938556,
                      "filesize": "3.94 MB",
                      "extension": "png",
                      "size": {
                        "width": 3072,
                        "height": 1728
                      },
                      "mime": "image/png"
                    },
                    "created_at": "2017-04-19 15:50:41",
                    "updated_at": "2017-04-19 15:50:52",
                    "deleted_at": null
                  },
                  "allow_ach": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "examples": {
              "application/json": {
                "error": "token_expired"
              }
            }
          }
        },
        "summary": "Get Self and Team's Info",
        "operationId": "Get Self and Team's Info",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token Required**\n\nAlso known as `GET /`.\nOnce selected, this function will return information about the user.\nAny information from `POST /self` and `PUT /self` with be retrieved, as well as information about the merchant the user belongs to.\nThis will only return general information about the team.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "system_admin": false,
                "name": "Demo",
                "email": "demo@fattmerchant.com",
                "email_verification_sent_at": "2017-03-29 15:27:19",
                "email_verified_at": "2017-03-29 15:27:21",
                "created_at": "2017-01-11 21:44:02",
                "updated_at": "2017-04-24 15:41:58",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                "team_role": "admin",
                "team_admin": true,
                "team_enabled": true
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "email": [
                  "The email has already been taken."
                ]
              }
            }
          }
        },
        "summary": "Update Your User Info",
        "operationId": "Update Your User Info",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token Required**\n\nAllows the user to update their user information.\nTypically used with `GET /self` to view the information before updating it.\nCalled after `POST /self`, this function fills in more details about the user.\nAllows the user to attach a billing address to their account.\n`email` must be unique and not used by another user.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "address_zip": {
                  "type": "string"
                },
                "response": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "useBillingAddress": {
                  "type": "boolean"
                },
                "formValid": {
                  "type": "boolean"
                },
                "formPending": {
                  "type": "boolean"
                },
                "bank_type": {
                  "type": "string"
                },
                "bank_holder_type": {
                  "type": "string"
                },
                "address_country": {
                  "type": "string"
                },
                "saving": {
                  "type": "boolean"
                },
                "state": {
                  "type": "string"
                },
                "person_name": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                },
                "card_number": {
                  "type": "string"
                },
                "card_exp": {
                  "type": "string"
                },
                "address_1": {
                  "type": "string"
                },
                "address_city": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "address_state": {
                  "type": "string"
                },
                "rule": {
                  "type": "string"
                }
              },
              "example": {
                "total": "2",
                "phone": "3452333212",
                "firstname": "daniel",
                "lastname": "walker",
                "address_zip": "32413",
                "response": "Api Error Occurred.",
                "email": "demo@abc.com",
                "useBillingAddress": true,
                "formValid": false,
                "formPending": false,
                "bank_type": "checking",
                "bank_holder_type": "personal",
                "address_country": "USA",
                "saving": false,
                "state": "",
                "person_name": "daniel walker",
                "method": "card",
                "card_number": "4111111111111111",
                "card_exp": "0320",
                "address_1": "123 adsf",
                "address_city": "ofad",
                "url": "http://localhost:5432/#/bill/",
                "address_state": "FL",
                "rule": "FREQ=MONTHLY;DTSTART=20170426T190837Z"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudCI6bnVsbCwic3ViIjoiZTEwYzg2OWYtZGFmZC00MmQ0LWJjZmItMTM5YjJiOGNhMTY3IiwiaXNzIjoiaHR0cHM6XC9cL2FwaWRldjAxLmZhdHRsYWJzLmNvbVwvc2VsZiIsImlhdCI6MTQ2MzE2MzQ5NywiZXhwIjoxNDYzMjQ5ODk3LCJuYmYiOjE0NjMxNjM0OTcsImp0aSI6ImM2MzZlNTI3OThjNWE3MWQwYmRmMzU2ZGRlYjBmYjFiIn0.nI35JMEPuMoiW_mgvBV5bqKdEYI28lE4a2HyW2KnJjA",
                  "user": {
                    "name": "Daniel Walker",
                    "email": "JAAASON@fattmerchant.com",
                    "id": "e10c869f-dafd-42d4-bcfb-139b2b8ca167",
                    "updated_at": "2016-05-13 18:18:17",
                    "created_at": "2016-05-13 18:18:17",
                    "email_verification_sent_at": "2016-05-13 18:18:17",
                    "gravatar": "//www.gravatar.com/avatar/acd8040614c912043ee5dcf1748b06d5",
                    "team_admin": null,
                    "team_enabled": null
                  },
                  "merchant": null
                }
              ]
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "name": [
                  "The name field is required."
                ],
                "email": [
                  "The email has already been taken."
                ],
                "password": [
                  "The password field is required."
                ]
              }
            }
          }
        },
        "summary": "Create a User Account - Self Registration",
        "operationId": "Create a User Account - Self Registration",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: No Authentication Token Required**\n\nThe API call to make a new user account.\nThis function inputs a new user's information, verifies them and automatically logs them in.\nOnly fills in login details.\n`PUT /self` is used to fill in more details about the user's background.\nAfter the user information is entered, the user will receive an e-mail to verify their account.\n\nThis is one of two ways to make a user account.\nThe other method is to have a team admin make a user account.\nRequires a `name`, `email`, `password` and `password_confirmation`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/self/exists?email={email}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {}
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": {
                "email": [
                  "The user cannot be found"
                ]
              }
            }
          }
        },
        "summary": "Check if E-Mail Exists",
        "operationId": "Check if E-Mail Exists",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: No Authentication Token Required**\n\nThis call verifies if the inputted `email` is valid.\nCalled during the `POST /self` and `PUT /self` verification processes.\nUsing the user's `email`, this function checks if it already belongs to another user in the database.\nIf `email` already exists, the process will pass back `true`.\nIf `email` not found, it will return \"user cannot be found\".",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "example": {
                "email": "demo@fattmerchant.com",
                "password": "bottomline",
                "password_confirmation": "bottomline",
                "name": "Daniel Walker"
              }
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "The email value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/self/verify/resend": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "system_admin": false,
                "name": "demo",
                "email": "demo@fattmerchant.com",
                "email_verification_sent_at": "2017-05-12 18:07:27",
                "email_verified_at": "2017-03-29 15:27:21",
                "created_at": "2017-01-11 21:44:02",
                "updated_at": "2017-05-12 18:07:27",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                "team_role": "admin",
                "team_admin": true,
                "team_enabled": true
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": [
                "option_not_found"
              ]
            }
          }
        },
        "summary": "Resend Verification E-Mail",
        "operationId": "Resend Verification E-Mail",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token Required**\n\nResends the verification e-mail for a new user.\n`POST /self` function sends out a verification e-mail to the newly created user, this call resends that e-mail.\nThis is useful in cases where the e-mail never arrives. \nUpdates `email_verification_sent_at` to the current time.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "example": {
                "email": "demo@fattmerchant.com",
                "password": "bottomline",
                "password_confirmation": "bottomline",
                "name": "Daniel Walker"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/self/verify/{token}": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "email_verification": [
                  "The user is verified"
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": {
                "email_verification": [
                  "The user cannot be found"
                ]
              }
            }
          }
        },
        "summary": "Verify E-mail Token",
        "operationId": "Verify E-mail Token",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: No Authentication Token Required**\n\nOnce an account is made, a `token` is created and sent to the user's `email`.\nThis function checks if the token is valid.\nThis verifies that the user has access to that e-mail.\nOnce passed, changes `email_verified_at` to the current time.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "The token value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/team": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudCI6ImFhNzc2NmIyLTI0MmYtNDNiOS05NDc2LTNjOTAxOGYwY2U1MiIsInN1YiI6ImI1OGQ3ZWVlLWU2OGQtNGQxMi1hMWY4LTYyZjVlNzEzODJhZSIsImlzcyI6Imh0dHA6XC9cL2ZtYXBpLmxvY2FsXC90ZWFtIiwiaWF0IjoxNDk0ODY3NzU3LCJleHAiOjE0OTQ5NTQxNTcsIm5iZiI6MTQ5NDg2Nzc1NywianRpIjoiNzA1MmNkZWQ3NDA2ZDgyNDAxN2MzNTE1YzVhZGU3ZWYifQ.B4bcNQIcHTimpHW2hlJtnPOodAgsm3C-khfkphphDzo",
                  "user": {
                    "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "system_admin": false,
                    "name": "demo",
                    "email": "demo@fattmerchant.com",
                    "email_verification_sent_at": "2017-05-15 16:30:23",
                    "email_verified_at": "2017-03-29 15:27:21",
                    "created_at": "2017-01-11 21:44:02",
                    "updated_at": "2017-05-15 16:30:23",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                    "team_role": "admin",
                    "team_admin": true,
                    "team_enabled": true
                  },
                  "merchant": {
                    "id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                    "mid": "",
                    "status": "PENDING",
                    "subdomain": "",
                    "company_name": "Fattmerchant",
                    "contact_name": "Fattmerchant",
                    "contact_email": "info2@fattmerchant.com",
                    "contact_phone": "8555503288",
                    "address_1": "25 Wall Street",
                    "address_2": "Suite 1",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "hosted_payments_token": null,
                    "plan": null,
                    "options": null,
                    "gateway_type": null,
                    "processor": "",
                    "product_type": "",
                    "welcome_email_sent_at": null,
                    "created_at": "2017-05-15 17:02:37",
                    "updated_at": "2017-05-15 17:02:37",
                    "deleted_at": null,
                    "gateway_name": null,
                    "branding": null,
                    "allow_ach": false
                  }
                },
                {
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudCI6ImRkMzZiOTM2LTFlYjctNGVjZS1iZWJjLWI1MTRjNmEzNmViZCIsInN1YiI6ImI1OGQ3ZWVlLWU2OGQtNGQxMi1hMWY4LTYyZjVlNzEzODJhZSIsImlzcyI6Imh0dHA6XC9cL2ZtYXBpLmxvY2FsXC90ZWFtIiwiaWF0IjoxNDk0ODY3NzU3LCJleHAiOjE0OTQ5NTQxNTcsIm5iZiI6MTQ5NDg2Nzc1NywianRpIjoiNzA1MmNkZWQ3NDA2ZDgyNDAxN2MzNTE1YzVhZGU3ZWYifQ._3rlhZzUyind1W138w4O7BjHYVlAOjUpgkmweSekKKE",
                  "user": {
                    "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "system_admin": false,
                    "name": "demo",
                    "email": "demo@fattmerchant.com",
                    "email_verification_sent_at": "2017-05-15 16:30:23",
                    "email_verified_at": "2017-03-29 15:27:21",
                    "created_at": "2017-01-11 21:44:02",
                    "updated_at": "2017-05-15 16:30:23",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                    "team_role": "admin",
                    "team_admin": true,
                    "team_enabled": true
                  },
                  "merchant": {
                    "id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "mid": "520000294774",
                    "status": "ACTIVE",
                    "subdomain": "demo",
                    "company_name": "Here",
                    "contact_name": "Fattmerchant",
                    "contact_email": "demo737@fattmerchant.com",
                    "contact_phone": "8555503288",
                    "address_1": "25 Wall Street",
                    "address_2": "Suite 1",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "hosted_payments_token": "okay",
                    "plan": {
                      "id": "d619a0cc-b7e1-11e6-a0aa-08002777c33d",
                      "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                      "user_id": "",
                      "name": "premium",
                      "created_at": "2016-12-01 16:18:46",
                      "updated_at": "2016-12-01 16:18:46"
                    },
                    "options": {
                      "default_dashboard": "Summary",
                      "social": {
                        "website_url": "http://google.com",
                        "facebook_url": "http://google.com",
                        "instagram_url": "http://google.com",
                        "twitter_url": "http://google.com",
                        "linkedin_url": "http://google.com"
                      },
                      "hosted_payments_url_long": "http://localhost:5432/#/pay/okay",
                      "hosted_payments_url_short": "",
                      "hosted_payments_success_note": "31",
                      "hosted_payments_note": "12"
                    },
                    "gateway_type": "test",
                    "processor": "Vantiv",
                    "product_type": "Terminal",
                    "welcome_email_sent_at": null,
                    "created_at": "2016-12-01 16:18:46",
                    "updated_at": "2017-04-21 20:15:12",
                    "deleted_at": null,
                    "gateway_name": null,
                    "branding": {
                      "id": "af82b215-6081-42b0-b494-fbda189ce8f9",
                      "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                      "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "name": "",
                      "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/branding/af82b215-6081-42b0-b494-fbda189ce8f9.png",
                      "tag": "branding",
                      "meta": {
                        "filesize_bytes": 3938556,
                        "filesize": "3.94 MB",
                        "extension": "png",
                        "size": {
                          "width": 3072,
                          "height": 1728
                        },
                        "mime": "image/png"
                      },
                      "created_at": "2017-04-19 15:50:41",
                      "updated_at": "2017-04-19 15:50:52",
                      "deleted_at": null
                    },
                    "allow_ach": true
                  }
                }
              ]
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "company_name": [
                  "The company name field is required."
                ],
                "contact_email": [
                  "The contact email field is required."
                ]
              }
            }
          }
        },
        "summary": "Create a Team",
        "operationId": "Create a Team",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token Required**\n\nThis call makes a new merchant team.\nAutomatically sets the user's `team_role` to `admin` of the team.\nFrom there they can add new users under that team and set their roles.\nWill re-authenticate the user with a new `token` associated with that team. \nRequires a `company_name` and `contact_email` at minimum.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "company_name": {
                  "type": "string"
                },
                "contact_name": {
                  "type": "string"
                },
                "contact_email": {
                  "type": "string"
                },
                "contact_phone": {
                  "type": "string"
                },
                "address_1": {
                  "type": "string"
                },
                "address_2": {
                  "type": "string"
                },
                "address_city": {
                  "type": "string"
                },
                "address_state": {
                  "type": "string"
                },
                "address_zip": {
                  "type": "string"
                }
              },
              "example": {
                "company_name": "Fattmerchant",
                "contact_name": "Fattmerchant",
                "contact_email": "info2@fattmerchant.com",
                "contact_phone": "8555503288",
                "address_1": "25 Wall Street",
                "address_2": "Suite 1",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                "mid": "",
                "status": "PENDING",
                "subdomain": "",
                "company_name": "Fattmerchant",
                "contact_name": "Fattmerchant",
                "contact_email": "info2@fattmerchant.com",
                "contact_phone": "8555503288",
                "address_1": "25 Wall Street",
                "address_2": "Suite 1",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "hosted_payments_token": null,
                "plan": {
                  "id": "f92fee2b-fdae-4474-988c-c8f2df92772a",
                  "merchant_id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "name": null,
                  "created_at": "2017-05-15 18:41:25",
                  "updated_at": "2017-05-15 18:41:25"
                },
                "options": null,
                "gateway_type": null,
                "processor": "",
                "product_type": "",
                "welcome_email_sent_at": null,
                "created_at": "2017-05-15 17:02:37",
                "updated_at": "2017-05-15 18:41:25",
                "deleted_at": null,
                "gateway_name": null,
                "branding": null,
                "allow_ach": false
              }
            }
          }
        },
        "summary": "Edit Your Merchant Team's Info",
        "operationId": "Edit Your Merchant Team's Info",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nThis function allows a user to edit the information, such as address and name, of a merchant team.\nThis only works for team members with `admin` as their `team_role`.\nThis call does not change team member information.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "company_name": {
                  "type": "string"
                },
                "contact_name": {
                  "type": "string"
                },
                "contact_email": {
                  "type": "string"
                },
                "contact_phone": {
                  "type": "string"
                },
                "address_1": {
                  "type": "string"
                },
                "address_2": {
                  "type": "string"
                },
                "address_city": {
                  "type": "string"
                },
                "address_state": {
                  "type": "string"
                },
                "address_zip": {
                  "type": "string"
                }
              },
              "example": {
                "company_name": "Fattmerchant",
                "contact_name": "Fattmerchant",
                "contact_email": "info2@fattmerchant.com",
                "contact_phone": "8555503288",
                "address_1": "25 Wall Street",
                "address_2": "Suite 1",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/team/option/branding": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                "mid": "",
                "status": "PENDING",
                "subdomain": "",
                "company_name": "Fattmerchant",
                "contact_name": "Fattmerchant",
                "contact_email": "info2@fattmerchant.com",
                "contact_phone": "8555503288",
                "address_1": "25 Wall Street",
                "address_2": "Suite 1",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "hosted_payments_token": null,
                "plan": {
                  "id": "f92fee2b-fdae-4474-988c-c8f2df92772a",
                  "merchant_id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "name": null,
                  "created_at": "2017-05-15 18:41:25",
                  "updated_at": "2017-05-15 18:41:25"
                },
                "options": null,
                "gateway_type": null,
                "processor": "",
                "product_type": "",
                "welcome_email_sent_at": null,
                "created_at": "2017-05-15 17:02:37",
                "updated_at": "2017-05-15 18:41:25",
                "deleted_at": null,
                "gateway_name": null,
                "branding": {
                  "id": "81218dbb-74ad-480e-958e-839ced6e6962",
                  "merchant_id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "name": "Bugu the Catu",
                  "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/branding/81218dbb-74ad-480e-958e-839ced6e6962.png",
                  "tag": "branding",
                  "meta": {
                    "filesize_bytes": 109524,
                    "filesize": "1.1 kB",
                    "extension": "png",
                    "size": {
                      "width": 537,
                      "height": 512
                    },
                    "mime": "image/png"
                  },
                  "created_at": "2017-05-15 19:15:53",
                  "updated_at": "2017-05-15 19:15:56",
                  "deleted_at": null
                },
                "allow_ach": false
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "image": [
                  "The image field is required."
                ]
              }
            }
          }
        },
        "summary": "Team Branding",
        "operationId": "Team Branding",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nThis resource gives merchant admins the ability to change their company's `branding`.\n`branding` may be uploaded as either a PNG or JPEG image file.\nA merchant's `branding` will appear anywhere a merchant's object is returned.\nThe merchant `branding` will be securely hosted on Amazon S3 bucket and recorded in our database. \nThis can be accessed using a public Amazon S3 URL.\nIn Omni, it will appear in the website payments page, the invoice payment page, receipt e-mails and invoice e-mails.\nRequires an `image` at minimum.\nIf no `name` is supplied, it will be set to the `image` filename.\nThe response of this resource will contain the `image` URL.\n\n**Parameters**\n\n* `name` (string: max 255) ... An optional nickname for the uploaded photo. Typically will just be the name of the brand or company.\n\n* `image` (file) ... This will contain the photo file of the logo that will be uploaded to Amazon S3 bucket.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                }
              },
              "example": {
                "name": "Mercedes-Benz",
                "image": "logo.png"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/team/user": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "total": 2,
                "per_page": 20,
                "current_page": 1,
                "last_page": 1,
                "next_page_url": null,
                "prev_page_url": null,
                "from": 1,
                "to": 2,
                "data": [
                  {
                    "id": "6b5e0337-817d-4025-8729-6370173295a9",
                    "system_admin": false,
                    "name": "Eric Andrews",
                    "email": "demo@fattmerchant.com",
                    "email_verification_sent_at": "2016-09-08 19:05:55",
                    "email_verified_at": "2016-05-11 17:13:33",
                    "created_at": "2015-07-21 21:23:42",
                    "updated_at": "2016-09-08 19:05:55",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2",
                    "team_role": "admin",
                    "team_admin": true,
                    "team_enabled": true
                  },
                  {
                    "id": "372a0620-47cd-447e-9fcf-0f4671bdda26",
                    "system_admin": false,
                    "name": "Jacques Fu",
                    "email": "jacques.fu@gmail.com",
                    "email_verification_sent_at": "2016-05-11 17:13:33",
                    "email_verified_at": "2016-05-11 17:13:33",
                    "created_at": "2015-07-21 21:23:42",
                    "updated_at": "2015-10-29 16:40:39",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/30d6b71a1803013e64894ae60ec53e34",
                    "team_role": "admin",
                    "team_admin": true,
                    "team_enabled": true
                  }
                ]
              }
            }
          }
        },
        "summary": "Find the Merchant Team's Users",
        "operationId": "Find the Merchant Team's Users",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nRetrieves all the users on a merchants's `team`, showing team-oriented details and `team_role`.\nUsed for finding all members of a team and listing them by roles.\nTypically used in conjunction with `GET team/user/{id}` and `PUT team/user/{id}` to edit individual team members.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "21a64e9e-3c13-4b85-9f85-67cb4fda808a",
                "system_admin": false,
                "name": "James",
                "email": "fatttest737@gmail.com",
                "email_verification_sent_at": null,
                "email_verified_at": null,
                "created_at": "2017-05-15 19:31:35",
                "updated_at": "2017-05-15 19:31:35",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a",
                "team_role": "full",
                "team_admin": false,
                "team_enabled": true
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "examples": {
              "application/json": [
                "not team admin"
              ]
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "name": [
                  "The name field is required."
                ],
                "email": [
                  "The email field is required."
                ],
                "password": [
                  "The password field is required."
                ]
              }
            }
          }
        },
        "summary": "Create a New Team Member",
        "operationId": "Create a New Team Member",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nThis creates a whole new user account in your merchant team.\nAutomatically adds the user to the merchant `team`.\nCan only be used by users with `team_rule` of \"admin\".\nThis is one of two ways to create a new user account; the other being `POST /self`.\nRequires a valid `email`, `password` and `name` at minimum.\nIf `team_role` is not selected, it will default to \"full\".\nUsed by team admins who want to add members to their merchant account who do not already have a Fattmerchant account.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "team_role": {
                  "type": "string"
                },
                "team_enabled": {
                  "type": "boolean"
                },
                "send_verification_email": {
                  "type": "boolean"
                },
                "url": {
                  "type": "string"
                }
              },
              "example": {
                "email": "demo+1024@abc.com",
                "password": "bottomline",
                "password_confirmation": "bottomline",
                "name": "Bob Dylan",
                "team_role": "full",
                "team_enabled": true,
                "send_verification_email": true,
                "url": "https://omni.fattmerchant.com/#/verify/"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/team/apikey": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "0e5e54a5-f56b-4be5-a3a5-2e7a08155eba",
                "name": "do not delete - zapier key",
                "email": null,
                "email_verification_sent_at": null,
                "email_verified_at": null,
                "created_at": "2019-06-19 20:30:00",
                "updated_at": "2019-06-19 20:30:00",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e",
                "team_role": "admin",
                "team_admin": true,
                "team_enabled": true,
                "api_key": "THIS_VALUE_WILL_CONTAIN_JWT_STRING"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "name": [
                  "The name may not be greater than 255 characters."
                ]
              }
            }
          }
        },
        "summary": "Create a New API Key",
        "operationId": "Create a New API Key",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nThis creates a whole new user account in your merchant team which will have `is_api_key` = `true`.\nThis will also return the api key value.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "team_role": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "example": {
                "team_role": "admin",
                "name": "do not delete - zapier key"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "List API Keys",
        "operationId": "List API Keys",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nList out all team member user records which are api keys.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/team/user/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "21a64e9e-3c13-4b85-9f85-67cb4fda808a",
                "system_admin": false,
                "name": "James",
                "email": "fatttest737@gmail.com",
                "email_verification_sent_at": null,
                "email_verified_at": null,
                "created_at": "2017-05-15 19:31:35",
                "updated_at": "2017-05-15 19:31:35",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a",
                "team_role": "full",
                "team_admin": false,
                "team_enabled": true
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": [
                "user not found"
              ]
            }
          }
        },
        "summary": "Get Team Member's Information",
        "operationId": "Get Team Member's Information",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nRetrieves the team member that matches the given id.\nDeploys information on the team member, including their `team_role`.\nUsed in conjunction with `PUT /team/user/{id}` to edit a team member.\nRequires `team_role` of `admin` to use.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "21a64e9e-3c13-4b85-9f85-67cb4fda808a",
                "system_admin": false,
                "name": "WILLIAM II KOHLS",
                "email": "demo+1002@abc.com",
                "email_verification_sent_at": null,
                "email_verified_at": null,
                "created_at": "2017-05-15 19:31:35",
                "updated_at": "2017-05-15 19:41:53",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/4d6b3ceb5b37b610a68ef23fcbe0060b",
                "team_role": "admin",
                "team_admin": true,
                "team_enabled": true
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {},
            "examples": {
              "application/json": [
                "not team admin"
              ]
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {},
            "examples": {
              "application/json": [
                "user not found"
              ]
            }
          }
        },
        "summary": "Update a Team Member's Information",
        "operationId": "Update a Team Member's Information",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nAllows team admins to change a team members information, such as role.\nUsed in conjunction with `GET /team/user/{id}` to view a team members information.\nThis can be used to remove a member from the team.\nCan only be used by members with `team_role` of \"admin.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "team_admin": {
                  "type": "string"
                },
                "team_enabled": {
                  "type": "string"
                }
              },
              "example": {
                "email": "finaluser5@gmail.com",
                "password": "bottomline",
                "password_confirmation": "bottomline",
                "name": "WILLIAM II KOHLS",
                "team_admin": "1",
                "team_enabled": "1"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/team/option/": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                "mid": "",
                "status": "PENDING",
                "subdomain": "",
                "company_name": "Fattmerchant",
                "contact_name": "Fattmerchant",
                "contact_email": "info2@fattmerchant.com",
                "contact_phone": "8555503288",
                "address_1": "25 Wall Street",
                "address_2": "Suite 1",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "hosted_payments_token": "BARTLE-_",
                "plan": {
                  "id": "f92fee2b-fdae-4474-988c-c8f2df92772a",
                  "merchant_id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "name": null,
                  "created_at": "2017-05-15 18:41:25",
                  "updated_at": "2017-05-15 18:41:25"
                },
                "options": {
                  "hosted_payments_url_long": "http://localhost.app:5477/#/pay/BARTLE-_",
                  "hosted_payments_url_short": "http://bit.ly/1RofD0T",
                  "hosted_payments_success_note": "Success Note",
                  "hosted_payments_note": "Page Memo"
                },
                "gateway_type": null,
                "processor": "",
                "product_type": "",
                "welcome_email_sent_at": null,
                "created_at": "2017-05-15 17:02:37",
                "updated_at": "2017-05-15 21:52:16",
                "deleted_at": null,
                "gateway_name": null,
                "branding": {
                  "id": "81218dbb-74ad-480e-958e-839ced6e6962",
                  "merchant_id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "name": "Bugu the Catu",
                  "public_url": "https://s3-us-west-2.amazonaws.com/fattpaydocuments/branding/81218dbb-74ad-480e-958e-839ced6e6962.png",
                  "tag": "branding",
                  "meta": {
                    "filesize_bytes": 109524,
                    "filesize": "1.1 kB",
                    "extension": "png",
                    "size": {
                      "width": 537,
                      "height": 512
                    },
                    "mime": "image/png"
                  },
                  "created_at": "2017-05-15 19:15:53",
                  "updated_at": "2017-05-15 19:15:56",
                  "deleted_at": null
                },
                "allow_ach": false
              }
            }
          }
        },
        "summary": "Add/Update Team Settings",
        "operationId": "Add/Update Team Settings",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nAdds team options, also known as team settings, to a `team`.\nSaved as \"options\" under a team in the database.\nThis doesn't affect the values of the options at all.\nReturns the results of the modified team options.\nOnly members with `team_role` of \"admin\" can use this.\n\nAlso used by hosted payments to change hosted payment options.\n\n**Available Team Options**\n\n* `hosted_payments_token` - Changes the hosted\\_payments token/URL.\n\n* `hosted_payment_note` - This changes the hosted\\_payments\\_note's page memo.\n\n* `hosted_payments_success_note` - Changes the hosted\\_payments\\_note's success message.\n\n* `gateway` - This changes the merchant's gateway. Currently available gateways are `test` and `authorize_net`. Gateways change where the user information will go through.\n\n* `plan` - Changes the merchant's plan. Plans are preset information chosen by a merchant to set a course for their merchant account. Either `basic`, `plus` and `premium` are available. Each option will affect the merchant's functionality within the Fattmerchant system. Each plan may cost the merchant differently.\n\n* `receipts_email` - Add/updates emails to be given a receipt when a hosted\\_payment goes through.\n\n**Team Options For Mobile and Batch Over EMV Gateway**\n\nUsed by the mobile app to store sensitive account information regarding the card reader and the EMV gateway.\n\n* `emv_terminal_id` - The ID for the EMV gateway.\n\n* `emv_terminal_secret` - Specific settings necessary for the card reader.\n\n* `emv_user` - transmits the user's username over the EMV gateway.\n\n* `emv_password` - transmits the user's password over the EMV gateway.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "example": [
                  {
                    "name": "hosted_payments_token",
                    "url": "http://localhost.app:5477/#/pay/",
                    "value": "BARTLE-_"
                  },
                  {
                    "name": "hosted_payments_success_note",
                    "value": "Success Note"
                  },
                  {
                    "name": "hosted_payments_note",
                    "value": "Page Memo"
                  }
                ]
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/team/registration": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": "",
                "avg_trans_size": "",
                "b2b_percent": "",
                "bank_account_type": "",
                "business_address_1": "",
                "business_address_2": "",
                "business_address_city": "",
                "business_address_country": "",
                "business_address_state": "",
                "business_address_zip": "",
                "business_dba": "",
                "business_email": "",
                "business_fax": "",
                "business_legal_name": "",
                "business_open_date": "",
                "business_phone_number": "",
                "business_tax_id": "",
                "business_website": "",
                "card_not_present_percent": "",
                "card_present_percent": "",
                "card_swiped_percent": "",
                "chosen_plan": "",
                "chosen_processing_method": "",
                "company_type": "",
                "email": "",
                "first_name": "",
                "highest_trans_amount": "",
                "international": "",
                "internet": "",
                "job_title": "",
                "last_name": "",
                "location_type": "",
                "meta": {
                  "ownership_percentage": 60,
                  "representatives": [
                    {
                      "title": "",
                      "date_of_birth": "",
                      "ssn": "",
                      "first_name": "",
                      "last_name": "",
                      "type": "",
                      "ownership_percentage": 40,
                      "email": "",
                      "phone": "",
                      "address_1": "",
                      "address_2": "",
                      "address_city": "",
                      "address_state": "",
                      "address_zip": ""
                    }
                  ]
                },
                "moto_percent": "",
                "network": "",
                "owner_address_1": "",
                "owner_address_2": "",
                "owner_address_city": "",
                "owner_address_country": "",
                "owner_address_state": "",
                "owner_address_zip": "",
                "phone_number": "",
                "plan": "",
                "principal_owners_name": "",
                "reason_for_applying": "",
                "referred_by": "",
                "refund_policy": "",
                "seasonal_flag": false,
                "seasonal_months": "",
                "service_you_provide": "",
                "title": "",
                "user_dob": "",
                "merchant_id": "791fc3fa-4534-4617-97b6-d41c9e1ce8da",
                "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                "updated_at": "2019-06-19 21:22:03",
                "created_at": "2019-06-19 21:22:03",
                "files": [],
                "electronic_signature": {
                  "html_content": "I agree to...",
                  "ip": "42.1.1.113",
                  "timestamp": "2019-06-19 21:22:03",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "email": "john@doe.com",
                  "browser_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": [
                  "The annual volume may not be greater than 100 characters."
                ]
              }
            }
          }
        },
        "summary": "Get Team Registration Data",
        "operationId": "Get Team Registration Data",
        "description": "_(please click this box ^^ for more information)_\n\n(ADVANCED)\n**Note: Authentication Token and Team Admin Status Required**\n\nThis will get a registration record for a merchant that is tied to your team. This is data used by our internal underwriting team during onboarding.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {}
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": [
                  "The annual volume may not be greater than 100 characters."
                ]
              }
            }
          }
        },
        "summary": "Update Team Registration Data",
        "operationId": "Update Team Registration Data",
        "description": "_(please click this box ^^ for more information)_\n\n(ADVANCED)\n**Note: Authentication Token and Team Admin Status Required**\n\nThis will upsert a registration record for a merchant that is tied to a team. This is data used by our internal underwriting team during onboarding.\n\nRegistration information passed in at the root of the request body (such as `first_name`) is for the Principal Signer/Control Owner for the business. If there are Additional Representatives/Beneficial Owners needed, the information for each representative will be passed into the `meta.representatives` as an object.\n\n**IMPORTANT**\n*Effective May 11, 2018, the Federal FinCen (Financial Crimes Enforcement Network) requires all financial institutions to collect the Control Owner and Beneficial Owners on entities that are not otherwise exempt. Please provide information on any additional representatives if any representatives (Beneficial Owner) directly or indirectly own 25% or more of the entity.*",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "annual_volume": {
                  "type": "string"
                },
                "avg_trans_size": {
                  "type": "string"
                },
                "bank_account_number": {
                  "type": "string"
                },
                "bank_account_type": {
                  "type": "string"
                },
                "bank_routing_number": {
                  "type": "string"
                },
                "business_address_1": {
                  "type": "string"
                },
                "business_address_2": {
                  "type": "string"
                },
                "business_address_city": {
                  "type": "string"
                },
                "business_address_country": {
                  "type": "string"
                },
                "business_address_state": {
                  "type": "string"
                },
                "business_address_zip": {
                  "type": "string"
                },
                "business_dba": {
                  "type": "string"
                },
                "business_email": {
                  "type": "string"
                },
                "business_fax": {
                  "type": "string"
                },
                "business_legal_name": {
                  "type": "string"
                },
                "business_open_date": {
                  "type": "string"
                },
                "business_phone_number": {
                  "type": "string"
                },
                "business_tax_id": {
                  "type": "string"
                },
                "business_website": {
                  "type": "string"
                },
                "card_not_present_percent": {
                  "type": "string"
                },
                "card_present_percent": {
                  "type": "string"
                },
                "card_swiped_percent": {
                  "type": "string"
                },
                "chosen_processing_method": {
                  "type": "string"
                },
                "company_type": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "highest_trans_amount": {
                  "type": "string"
                },
                "international": {
                  "type": "string"
                },
                "internet": {
                  "type": "string"
                },
                "job_title": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "location_type": {
                  "type": "string"
                },
                "mcc": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "ownership_percentage": {
                      "type": "number"
                    },
                    "representatives": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "date_of_birth": {
                            "type": "string"
                          },
                          "ssn": {
                            "type": "string"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "ownership_percentage": {
                            "type": "number"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "address_1": {
                            "type": "string"
                          },
                          "address_2": {
                            "type": "string"
                          },
                          "address_city": {
                            "type": "string"
                          },
                          "address_state": {
                            "type": "string"
                          },
                          "address_zip": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "moto_percent": {
                  "type": "string"
                },
                "network": {
                  "type": "string"
                },
                "owner_address_1": {
                  "type": "string"
                },
                "owner_address_2": {
                  "type": "string"
                },
                "owner_address_city": {
                  "type": "string"
                },
                "owner_address_country": {
                  "type": "string"
                },
                "owner_address_state": {
                  "type": "string"
                },
                "owner_address_zip": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "plan": {
                  "type": "string"
                },
                "pricing_plan": {
                  "type": "string"
                },
                "principal_owners_name": {
                  "type": "string"
                },
                "reason_for_applying": {
                  "type": "string"
                },
                "referred_by": {
                  "type": "string"
                },
                "refund_policy": {
                  "type": "string"
                },
                "seasonal_flag": {
                  "type": "boolean"
                },
                "seasonal_months": {
                  "type": "string"
                },
                "service_you_provide": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "user_dob": {
                  "type": "string"
                },
                "user_ssn": {
                  "type": "string"
                },
                "files": {
                  "type": "array",
                  "items": {}
                },
                "electronic_signature": {
                  "type": "object",
                  "properties": {
                    "html_content": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "browser_agent": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "annual_volume": "",
                "avg_trans_size": "",
                "bank_account_number": "",
                "bank_account_type": "",
                "bank_routing_number": "",
                "business_address_1": "",
                "business_address_2": "",
                "business_address_city": "",
                "business_address_country": "",
                "business_address_state": "",
                "business_address_zip": "",
                "business_dba": "",
                "business_email": "",
                "business_fax": "",
                "business_legal_name": "",
                "business_open_date": "",
                "business_phone_number": "",
                "business_tax_id": "",
                "business_website": "",
                "card_not_present_percent": "",
                "card_present_percent": "",
                "card_swiped_percent": "",
                "chosen_processing_method": "",
                "company_type": "",
                "email": "",
                "first_name": "",
                "highest_trans_amount": "",
                "international": "",
                "internet": "",
                "job_title": "",
                "last_name": "",
                "location_type": "",
                "mcc": "1750",
                "meta": {
                  "ownership_percentage": 60,
                  "representatives": [
                    {
                      "title": "",
                      "date_of_birth": "",
                      "ssn": "",
                      "first_name": "",
                      "last_name": "",
                      "type": "",
                      "ownership_percentage": 40,
                      "email": "",
                      "phone": "",
                      "address_1": "",
                      "address_2": "",
                      "address_city": "",
                      "address_state": "",
                      "address_zip": ""
                    }
                  ]
                },
                "moto_percent": "",
                "network": "",
                "owner_address_1": "",
                "owner_address_2": "",
                "owner_address_city": "",
                "owner_address_country": "",
                "owner_address_state": "",
                "owner_address_zip": "",
                "phone_number": "",
                "plan": "",
                "pricing_plan": "interchange0-15",
                "principal_owners_name": "",
                "reason_for_applying": "",
                "referred_by": "",
                "refund_policy": "",
                "seasonal_flag": false,
                "seasonal_months": "",
                "service_you_provide": "",
                "title": "",
                "user_dob": "",
                "user_ssn": "",
                "files": [],
                "electronic_signature": {
                  "html_content": "I agree to...",
                  "ip": "42.1.1.113",
                  "timestamp": "2019-06-19 21:22:03",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "email": "john@doe.com",
                  "browser_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/merchant": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "9cbfffba-33e2-4d25-aa2b-11e9bc11c301",
                "mid": "",
                "status": "ACTIVE",
                "subdomain": "",
                "company_name": "Fattmerchant",
                "display_name": "Fattmerchant",
                "contact_name": "Fattmerchant",
                "contact_email": "info2@fattmerchant.com",
                "contact_phone": "8555503288",
                "address_1": "25 Wall Street",
                "address_2": "Suite 1",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "hosted_payments_token": "Fattmerchant-c3073a83d4a2",
                "plan": {
                  "id": "1de08ed1-27e3-4e5a-bc17-ea76444b636c",
                  "merchant_id": "9cbfffba-33e2-4d25-aa2b-11e9bc11c301",
                  "user_id": "user1",
                  "name": "premium",
                  "created_at": "2020-02-17 13:35:11",
                  "updated_at": "2020-02-17 13:35:11"
                },
                "options": [],
                "notes": "",
                "gateway_type": null,
                "vendor_keys": [],
                "processor": "",
                "partner": null,
                "product_type": "",
                "is_enterprise": false,
                "is_payfac": false,
                "fm_billing_schedule_id": null,
                "welcome_email_sent_at": null,
                "created_at": "2020-02-17 13:35:11",
                "updated_at": "2020-02-17 13:35:11",
                "deleted_at": null,
                "brand": "fattmerchant",
                "branding": null,
                "allow_ach": false,
                "is_portal": false,
                "allow_credits": false,
                "allow_terminal": false,
                "users": []
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "company_name": [
                  "The company name field is required."
                ],
                "contact_email": [
                  "The contact email field is required."
                ]
              }
            }
          }
        },
        "summary": "Create a Merchant",
        "operationId": "Create a Merchant",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token Required**\n\nThis call makes a new merchant.\n\n#### Generating the Webpayments Token (public key)\n\nThe webpayments token is the same as the `hosted_payments_token` in the merchant record. Each merchant will always need a unique `hosted_payments_token` in order to use Fattmerchant.js. This field is autogenerated and will default to have `Fattmerchant` appended to the token. You may customize this token by passing in a different value when making this POST(ex. partnername-12345678909876).",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "company_name": {
                  "type": "string"
                },
                "contact_name": {
                  "type": "string"
                },
                "contact_email": {
                  "type": "string"
                },
                "contact_phone": {
                  "type": "string"
                },
                "address_1": {
                  "type": "string"
                },
                "address_2": {
                  "type": "string"
                },
                "address_city": {
                  "type": "string"
                },
                "address_state": {
                  "type": "string"
                },
                "address_zip": {
                  "type": "string"
                },
                "hosted_payments_token": {
                  "type": "string"
                }
              },
              "example": {
                "company_name": "Fattmerchant",
                "contact_name": "Fattmerchant",
                "contact_email": "info2@fattmerchant.com",
                "contact_phone": "8555503288",
                "address_1": "25 Wall Street",
                "address_2": "Suite 1",
                "address_city": "Orlando",
                "address_state": "FL",
                "address_zip": "32801",
                "hosted_payments_token": "Fattmerchant-c3073a83d4a2"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/merchant/{id}/apikey": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "0e5e54a5-f56b-4be5-a3a5-2e7a08155eba",
                "name": "do not delete - zapier key",
                "email": null,
                "email_verification_sent_at": null,
                "email_verified_at": null,
                "created_at": "2019-06-19 20:30:00",
                "updated_at": "2019-06-19 20:30:00",
                "deleted_at": null,
                "gravatar": "//www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e",
                "team_role": "admin",
                "team_admin": true,
                "team_enabled": true,
                "api_key": "THIS_VALUE_WILL_CONTAIN_JWT_STRING"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "name": [
                  "The name may not be greater than 255 characters."
                ]
              }
            }
          }
        },
        "summary": "Create a New API Key for Merchant",
        "operationId": "Create a New API Key for Merchant",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nThis will return an api key value for the merchant.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "team_role": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "example": {
                "team_role": "admin",
                "name": "do not delete - zapier key"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "List API Keys for Merchant",
        "operationId": "List API Keys for Merchant",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token and Team Admin Status Required**\n\nList out all api keys for merchant.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/merchant/{id}/registration": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "underwriting_status": "PENDED",
                "underwriting_substatuses": [
                  {
                    "message": "Volume Clarity"
                  },
                  {
                    "message": "Marketing Material"
                  }
                ],
                "annual_volume": "",
                "avg_trans_size": "",
                "b2b_percent": "",
                "bank_account_type": "",
                "business_address_1": "",
                "business_address_2": "",
                "business_address_city": "",
                "business_address_country": "",
                "business_address_state": "",
                "business_address_zip": "",
                "business_dba": "",
                "business_email": "",
                "business_fax": "",
                "business_legal_name": "",
                "business_open_date": "",
                "business_phone_number": "",
                "business_tax_id": "",
                "business_website": "",
                "card_not_present_percent": "",
                "card_present_percent": "",
                "card_swiped_percent": "",
                "chosen_plan": "",
                "chosen_processing_method": "",
                "company_type": "",
                "email": "",
                "first_name": "",
                "highest_trans_amount": "",
                "international": "",
                "internet": "",
                "job_title": "",
                "last_name": "",
                "location_type": "",
                "meta": {
                  "ownership_percentage": 60,
                  "representatives": [
                    {
                      "title": "",
                      "date_of_birth": "",
                      "ssn": "",
                      "first_name": "",
                      "last_name": "",
                      "type": "",
                      "ownership_percentage": 40,
                      "email": "",
                      "phone": "",
                      "address_1": "",
                      "address_2": "",
                      "address_city": "",
                      "address_state": "",
                      "address_zip": ""
                    }
                  ]
                },
                "moto_percent": "",
                "network": "",
                "owner_address_1": "",
                "owner_address_2": "",
                "owner_address_city": "",
                "owner_address_country": "",
                "owner_address_state": "",
                "owner_address_zip": "",
                "phone_number": "",
                "plan": "",
                "principal_owners_name": "",
                "reason_for_applying": "",
                "referred_by": "",
                "refund_policy": "",
                "seasonal_flag": false,
                "seasonal_months": "",
                "service_you_provide": "",
                "title": "",
                "user_dob": "",
                "merchant_id": "791fc3fa-4534-4617-97b6-d41c9e1ce8da",
                "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                "updated_at": "2019-06-19 21:22:03",
                "created_at": "2019-06-19 21:22:03",
                "files": [],
                "electronic_signature": {
                  "html_content": "I agree to...",
                  "ip": "42.1.1.113",
                  "timestamp": "2019-06-19 21:22:03",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "email": "john@doe.com",
                  "browser_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": [
                  "The annual volume may not be greater than 100 characters."
                ]
              }
            }
          }
        },
        "summary": "Get Merchant Registration Data",
        "operationId": "Get Merchant Registration Data",
        "description": "_(please click this box ^^ for more information)_\n\n(ADVANCED)\n**Note: Authentication Token and Team Admin Status Required**\n\nThis will get a registration record for a merchant. This is data used by our internal underwriting team during onboarding.\n\n**Getting Information about a Merchant's Underwriting status**\n\nThe merchant's registration data includes information about the merchant's status in Underwriting. The `underwriting_status` will either be \"APPROVED\", \"PENDED\", or \"REJECTED\".\nThe `underwriting_substatuses` is an array which will contain an object for each reason if the merchant was either PENDED or REJECTED. This information can be used to better understand the status of a merchant, real time.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": "",
                "avg_trans_size": "",
                "b2b_percent": "",
                "bank_account_type": "",
                "business_address_1": "",
                "business_address_2": "",
                "business_address_city": "",
                "business_address_country": "",
                "business_address_state": "",
                "business_address_zip": "",
                "business_dba": "",
                "business_email": "",
                "business_fax": "",
                "business_legal_name": "",
                "business_open_date": "",
                "business_phone_number": "",
                "business_tax_id": "",
                "business_website": "",
                "card_not_present_percent": "",
                "card_present_percent": "",
                "card_swiped_percent": "",
                "chosen_plan": "",
                "chosen_processing_method": "",
                "company_type": "",
                "email": "",
                "first_name": "",
                "highest_trans_amount": "",
                "international": "",
                "internet": "",
                "job_title": "",
                "last_name": "",
                "location_type": "",
                "mcc": "1750",
                "meta": {
                  "ownership_percentage": 60,
                  "representatives": [
                    {
                      "title": "",
                      "date_of_birth": "",
                      "ssn": "",
                      "first_name": "",
                      "last_name": "",
                      "type": "",
                      "ownership_percentage": 40,
                      "email": "",
                      "phone": "",
                      "address_1": "",
                      "address_2": "",
                      "address_city": "",
                      "address_state": "",
                      "address_zip": ""
                    }
                  ]
                },
                "moto_percent": "",
                "network": "",
                "owner_address_1": "",
                "owner_address_2": "",
                "owner_address_city": "",
                "owner_address_country": "",
                "owner_address_state": "",
                "owner_address_zip": "",
                "phone_number": "",
                "plan": "",
                "pricing_plan": "interchange0-15",
                "principal_owners_name": "",
                "reason_for_applying": "",
                "referred_by": "",
                "refund_policy": "",
                "seasonal_flag": false,
                "seasonal_months": "",
                "service_you_provide": "",
                "title": "",
                "user_dob": "",
                "merchant_id": "791fc3fa-4534-4617-97b6-d41c9e1ce8da",
                "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                "updated_at": "2019-06-19 21:22:03",
                "created_at": "2019-06-19 21:22:03",
                "files": [],
                "electronic_signature": {
                  "html_content": "I agree to...",
                  "ip": "42.1.1.113",
                  "timestamp": "2019-06-19 21:22:03",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "email": "john@doe.com",
                  "browser_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": [
                  "The annual volume may not be greater than 100 characters."
                ]
              }
            }
          }
        },
        "summary": "Update Merchant Registration Data",
        "operationId": "Update Merchant Registration Data",
        "description": "_(please click this box ^^ for more information)_\n\n(ADVANCED)\n**Note: Authentication Token and Team Admin Status Required**\n\nThis will upsert a registration record for a merchant. This is data used by our internal underwriting team during onboarding.\n\nRegistration information passed in at the root of the request body (such as `first_name`) is for the Principal Signer/Control Owner for the business. If there are Additional Representatives/Beneficial Owners needed, the information for each representative will be passed into the `meta.representatives` as an object.\n\n**IMPORTANT**\n*Effective May 11, 2018, the Federal FinCen (Financial Crimes Enforcement Network) requires all financial institutions to collect the Control Owner and Beneficial Owners on entities that are not otherwise exempt. Please provide information on any additional representatives if any representatives (Beneficial Owner) directly or indirectly own 25% or more of the entity.*",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "annual_volume": {
                  "type": "string"
                },
                "avg_trans_size": {
                  "type": "string"
                },
                "bank_account_number": {
                  "type": "string"
                },
                "bank_account_type": {
                  "type": "string"
                },
                "bank_account_owner_name": {
                  "type": "string"
                },
                "bank_routing_number": {
                  "type": "string"
                },
                "business_address_1": {
                  "type": "string"
                },
                "business_address_2": {
                  "type": "string"
                },
                "business_address_city": {
                  "type": "string"
                },
                "business_address_country": {
                  "type": "string"
                },
                "business_address_state": {
                  "type": "string"
                },
                "business_address_zip": {
                  "type": "string"
                },
                "business_dba": {
                  "type": "string"
                },
                "business_email": {
                  "type": "string"
                },
                "business_fax": {
                  "type": "string"
                },
                "business_legal_name": {
                  "type": "string"
                },
                "business_open_date": {
                  "type": "string"
                },
                "business_phone_number": {
                  "type": "string"
                },
                "business_tax_id": {
                  "type": "string"
                },
                "business_website": {
                  "type": "string"
                },
                "card_not_present_percent": {
                  "type": "string"
                },
                "card_present_percent": {
                  "type": "string"
                },
                "card_swiped_percent": {
                  "type": "string"
                },
                "chosen_processing_method": {
                  "type": "string"
                },
                "company_type": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "highest_trans_amount": {
                  "type": "string"
                },
                "international": {
                  "type": "string"
                },
                "internet": {
                  "type": "string"
                },
                "job_title": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "location_type": {
                  "type": "string"
                },
                "mcc": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "ownership_percentage": {
                      "type": "number"
                    },
                    "representatives": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "date_of_birth": {
                            "type": "string"
                          },
                          "ssn": {
                            "type": "string"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "ownership_percentage": {
                            "type": "number"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "address_1": {
                            "type": "string"
                          },
                          "address_2": {
                            "type": "string"
                          },
                          "address_city": {
                            "type": "string"
                          },
                          "address_state": {
                            "type": "string"
                          },
                          "address_zip": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "moto_percent": {
                  "type": "string"
                },
                "network": {
                  "type": "string"
                },
                "owner_address_1": {
                  "type": "string"
                },
                "owner_address_2": {
                  "type": "string"
                },
                "owner_address_city": {
                  "type": "string"
                },
                "owner_address_country": {
                  "type": "string"
                },
                "owner_address_state": {
                  "type": "string"
                },
                "owner_address_zip": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "plan": {
                  "type": "string"
                },
                "pricing_plan": {
                  "type": "string"
                },
                "principal_owners_name": {
                  "type": "string"
                },
                "reason_for_applying": {
                  "type": "string"
                },
                "referred_by": {
                  "type": "string"
                },
                "refund_policy": {
                  "type": "string"
                },
                "seasonal_flag": {
                  "type": "boolean"
                },
                "seasonal_months": {
                  "type": "string"
                },
                "service_you_provide": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "user_dob": {
                  "type": "string"
                },
                "user_ssn": {
                  "type": "string"
                },
                "files": {
                  "type": "array",
                  "items": {}
                },
                "electronic_signature": {
                  "type": "object",
                  "properties": {
                    "html_content": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "browser_agent": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "annual_volume": "",
                "avg_trans_size": "",
                "bank_account_number": "",
                "bank_account_type": "",
                "bank_account_owner_name": "",
                "bank_routing_number": "",
                "business_address_1": "",
                "business_address_2": "",
                "business_address_city": "",
                "business_address_country": "",
                "business_address_state": "",
                "business_address_zip": "",
                "business_dba": "",
                "business_email": "",
                "business_fax": "",
                "business_legal_name": "",
                "business_open_date": "",
                "business_phone_number": "",
                "business_tax_id": "",
                "business_website": "",
                "card_not_present_percent": "",
                "card_present_percent": "",
                "card_swiped_percent": "",
                "chosen_processing_method": "",
                "company_type": "",
                "email": "",
                "first_name": "",
                "highest_trans_amount": "",
                "international": "",
                "internet": "",
                "job_title": "",
                "last_name": "",
                "location_type": "",
                "mcc": "1750",
                "meta": {
                  "ownership_percentage": 60,
                  "representatives": [
                    {
                      "title": "",
                      "date_of_birth": "",
                      "ssn": "",
                      "first_name": "",
                      "last_name": "",
                      "type": "",
                      "ownership_percentage": 40,
                      "email": "",
                      "phone": "",
                      "address_1": "",
                      "address_2": "",
                      "address_city": "",
                      "address_state": "",
                      "address_zip": ""
                    }
                  ]
                },
                "moto_percent": "",
                "network": "",
                "owner_address_1": "",
                "owner_address_2": "",
                "owner_address_city": "",
                "owner_address_country": "",
                "owner_address_state": "",
                "owner_address_zip": "",
                "phone_number": "",
                "plan": "",
                "pricing_plan": "interchange0-15",
                "principal_owners_name": "",
                "reason_for_applying": "",
                "referred_by": "",
                "refund_policy": "",
                "seasonal_flag": false,
                "seasonal_months": "",
                "service_you_provide": "",
                "title": "",
                "user_dob": "",
                "user_ssn": "",
                "files": [],
                "electronic_signature": {
                  "html_content": "I agree to...",
                  "ip": "42.1.1.113",
                  "timestamp": "2019-06-19 21:22:03",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "email": "john@doe.com",
                  "browser_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
                }
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/merchant/{id}/registration/file": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": "",
                "avg_trans_size": "",
                "b2b_percent": "",
                "bank_account_type": "",
                "business_address_1": "",
                "business_address_2": "",
                "business_address_city": "",
                "business_address_country": "",
                "business_address_state": "",
                "business_address_zip": "",
                "business_dba": "",
                "business_email": "",
                "business_fax": "",
                "business_legal_name": "",
                "business_open_date": "",
                "business_phone_number": "",
                "business_tax_id": "",
                "business_website": "",
                "card_not_present_percent": "",
                "card_present_percent": "",
                "card_swiped_percent": "",
                "chosen_plan": "",
                "chosen_processing_method": "",
                "company_type": "",
                "email": "",
                "first_name": "",
                "highest_trans_amount": "",
                "international": "",
                "internet": "",
                "job_title": "",
                "last_name": "",
                "location_type": "",
                "meta": {
                  "ownership_percentage": 60,
                  "representatives": [
                    {
                      "title": "",
                      "date_of_birth": "",
                      "ssn": "",
                      "first_name": "",
                      "last_name": "",
                      "type": "",
                      "ownership_percentage": 40,
                      "email": "",
                      "phone": "",
                      "address_1": "",
                      "address_2": "",
                      "address_city": "",
                      "address_state": "",
                      "address_zip": ""
                    }
                  ]
                },
                "moto_percent": "",
                "network": "",
                "owner_address_1": "",
                "owner_address_2": "",
                "owner_address_city": "",
                "owner_address_country": "",
                "owner_address_state": "",
                "owner_address_zip": "",
                "phone_number": "",
                "plan": "",
                "principal_owners_name": "",
                "reason_for_applying": "",
                "referred_by": "",
                "refund_policy": "",
                "seasonal_flag": false,
                "seasonal_months": "",
                "service_you_provide": "",
                "title": "",
                "user_dob": "",
                "merchant_id": "791fc3fa-4534-4617-97b6-d41c9e1ce8da",
                "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                "updated_at": "2019-06-19 21:22:03",
                "created_at": "2019-06-19 21:22:03",
                "files": [
                  {
                    "id": "69ad5457-c027-4057-ad52-05ef0e39ec39",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": "onboarding/69ad5457-c027-4057-ad52-05ef0e39ec39.png",
                    "public_url": "https://fattonboardingfiles.s3.us-west-2.amazonaws.com/onboarding/69ad5457-c027-4057-ad52-05ef0e39ec39.png",
                    "tag": "onboarding",
                    "meta": {
                      "filesize_bytes": 2631,
                      "filesize": "0.03 kB",
                      "extension": "png",
                      "size": {
                        "width": 225,
                        "height": 225
                      },
                      "mime": "image/png"
                    },
                    "created_at": "2020-01-16 18:35:03",
                    "updated_at": "2020-01-16 18:35:04",
                    "deleted_at": null
                  },
                  {
                    "id": "e87441c2-4c1f-483f-87eb-117cbd909405",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": null,
                    "public_url": null,
                    "tag": "onboarding",
                    "meta": null,
                    "created_at": "2020-01-16 18:34:08",
                    "updated_at": "2020-01-16 18:34:08",
                    "deleted_at": null
                  },
                  {
                    "id": "67e140cc-73fb-439f-9c32-545ad5a8492d",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": "onboarding/67e140cc-73fb-439f-9c32-545ad5a8492d.txt",
                    "public_url": "https://fattonboardingfiles.s3.us-west-2.amazonaws.com/onboarding/67e140cc-73fb-439f-9c32-545ad5a8492d.txt",
                    "tag": "onboarding",
                    "meta": {
                      "filesize_bytes": 35,
                      "filesize": "0 kB",
                      "extension": "txt",
                      "size": null,
                      "mime": "text/plain"
                    },
                    "created_at": "2020-01-16 18:01:54",
                    "updated_at": "2020-01-16 18:01:54",
                    "deleted_at": null
                  },
                  {
                    "id": "72331b5e-340b-4dbf-a807-ad175d8eee53",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": null,
                    "public_url": null,
                    "tag": "onboarding",
                    "meta": null,
                    "created_at": "2020-01-16 17:48:43",
                    "updated_at": "2020-01-16 17:48:43",
                    "deleted_at": null
                  }
                ],
                "electronic_signature": {
                  "html_content": "I agree to...",
                  "ip": "42.1.1.113",
                  "timestamp": "2019-06-19 21:22:03",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "email": "john@doe.com",
                  "browser_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": [
                  "The annual volume may not be greater than 100 characters."
                ]
              }
            }
          }
        },
        "summary": "Add File to Merchant Registration",
        "operationId": "Add File to Merchant Registration",
        "description": "_(please click this box ^^ for more information)_\n\n(ADVANCED)\n**Note: Authentication Token and Team Admin Status Required**\n\nThis will add a file to a merchant's registration",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                }
              },
              "example": {
                "name": "voidcheck",
                "file": "check.png"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/merchant/{id}/registration/file/{file_id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": "",
                "avg_trans_size": "",
                "b2b_percent": "",
                "bank_account_type": "",
                "business_address_1": "",
                "business_address_2": "",
                "business_address_city": "",
                "business_address_country": "",
                "business_address_state": "",
                "business_address_zip": "",
                "business_dba": "",
                "business_email": "",
                "business_fax": "",
                "business_legal_name": "",
                "business_open_date": "",
                "business_phone_number": "",
                "business_tax_id": "",
                "business_website": "",
                "card_not_present_percent": "",
                "card_present_percent": "",
                "card_swiped_percent": "",
                "chosen_plan": "",
                "chosen_processing_method": "",
                "company_type": "",
                "email": "",
                "first_name": "",
                "highest_trans_amount": "",
                "international": "",
                "internet": "",
                "job_title": "",
                "last_name": "",
                "location_type": "",
                "meta": {
                  "ownership_percentage": 60,
                  "representatives": [
                    {
                      "title": "",
                      "date_of_birth": "",
                      "ssn": "",
                      "first_name": "",
                      "last_name": "",
                      "type": "",
                      "ownership_percentage": 40,
                      "email": "",
                      "phone": "",
                      "address_1": "",
                      "address_2": "",
                      "address_city": "",
                      "address_state": "",
                      "address_zip": ""
                    }
                  ]
                },
                "moto_percent": "",
                "network": "",
                "owner_address_1": "",
                "owner_address_2": "",
                "owner_address_city": "",
                "owner_address_country": "",
                "owner_address_state": "",
                "owner_address_zip": "",
                "phone_number": "",
                "plan": "",
                "principal_owners_name": "",
                "reason_for_applying": "",
                "referred_by": "",
                "refund_policy": "",
                "seasonal_flag": false,
                "seasonal_months": "",
                "service_you_provide": "",
                "title": "",
                "user_dob": "",
                "merchant_id": "791fc3fa-4534-4617-97b6-d41c9e1ce8da",
                "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                "updated_at": "2019-06-19 21:22:03",
                "created_at": "2019-06-19 21:22:03",
                "files": [
                  {
                    "id": "69ad5457-c027-4057-ad52-05ef0e39ec39",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": "onboarding/69ad5457-c027-4057-ad52-05ef0e39ec39.png",
                    "public_url": "https://fattonboardingfiles.s3.us-west-2.amazonaws.com/onboarding/69ad5457-c027-4057-ad52-05ef0e39ec39.png",
                    "tag": "onboarding",
                    "meta": {
                      "filesize_bytes": 2631,
                      "filesize": "0.03 kB",
                      "extension": "png",
                      "size": {
                        "width": 225,
                        "height": 225
                      },
                      "mime": "image/png"
                    },
                    "created_at": "2020-01-16 18:35:03",
                    "updated_at": "2020-01-16 18:35:04",
                    "deleted_at": null
                  },
                  {
                    "id": "e87441c2-4c1f-483f-87eb-117cbd909405",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": null,
                    "public_url": null,
                    "tag": "onboarding",
                    "meta": null,
                    "created_at": "2020-01-16 18:34:08",
                    "updated_at": "2020-01-16 18:34:08",
                    "deleted_at": null
                  },
                  {
                    "id": "67e140cc-73fb-439f-9c32-545ad5a8492d",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": "onboarding/67e140cc-73fb-439f-9c32-545ad5a8492d.txt",
                    "public_url": "https://fattonboardingfiles.s3.us-west-2.amazonaws.com/onboarding/67e140cc-73fb-439f-9c32-545ad5a8492d.txt",
                    "tag": "onboarding",
                    "meta": {
                      "filesize_bytes": 35,
                      "filesize": "0 kB",
                      "extension": "txt",
                      "size": null,
                      "mime": "text/plain"
                    },
                    "created_at": "2020-01-16 18:01:54",
                    "updated_at": "2020-01-16 18:01:54",
                    "deleted_at": null
                  },
                  {
                    "id": "72331b5e-340b-4dbf-a807-ad175d8eee53",
                    "merchant_id": "866ccc18-315e-496d-8a49-f16a5da79b75",
                    "user_id": "8f5f7d73-d53c-47c6-8880-6da0de8d9a10",
                    "name": "voidcheck",
                    "path": null,
                    "public_url": null,
                    "tag": "onboarding",
                    "meta": null,
                    "created_at": "2020-01-16 17:48:43",
                    "updated_at": "2020-01-16 17:48:43",
                    "deleted_at": null
                  }
                ],
                "electronic_signature": {
                  "html_content": "I agree to...",
                  "ip": "42.1.1.113",
                  "timestamp": "2019-06-19 21:22:03",
                  "user_id": "a01a5f74-cbdb-4704-9e9b-56fd5a8ee7b8",
                  "email": "john@doe.com",
                  "browser_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "annual_volume": [
                  "The annual volume may not be greater than 100 characters."
                ]
              }
            }
          }
        },
        "summary": "Delete File from Merchant Registration",
        "operationId": "Delete File from Merchant Registration",
        "description": "_(please click this box ^^ for more information)_\n\n(ADVANCED)\n**Note: Authentication Token and Team Admin Status Required**\n\nThis will delete a file from a merchant's registration",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "path",
            "description": "The file_id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "net_sales": null,
                "total": 1,
                "per_page": 50,
                "current_page": 1,
                "last_page": 1,
                "next_page_url": null,
                "prev_page_url": null,
                "from": 1,
                "to": 1,
                "data": [
                  {
                    "id": "795c7b84-76aa-498c-b2b8-cd06ef6baf7a",
                    "invoice_id": "",
                    "reference_id": "",
                    "recurring_transaction_id": "",
                    "type": "charge",
                    "source": null,
                    "merchant_id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                    "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "payment_method_id": "425dfe40-3f4d-443e-8ac8-dc4ec6f4edec",
                    "is_manual": null,
                    "success": true,
                    "message": null,
                    "meta": {
                      "tax": 0,
                      "subtotal": 2,
                      "lineItems": [
                        {
                          "id": "optional-fm-catalog-item-id",
                          "item": "Demo Item",
                          "details": "this is a regular demo item",
                          "quantity": 1,
                          "price": 1
                        }
                      ]
                    },
                    "total": 1,
                    "method": "card",
                    "pre_auth": false,
                    "last_four": "1111",
                    "receipt_email_at": null,
                    "receipt_sms_at": null,
                    "created_at": "2017-05-15 22:13:18",
                    "updated_at": "2017-05-15 22:13:18",
                    "total_refunded": null,
                    "is_refundable": false,
                    "is_voided": false,
                    "is_voidable": true,
                    "schedule_id": null,
                    "customer": {
                      "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@abc.com",
                      "cc_emails": [
                        "demo1@abc.com",
                        "demo2@abc.com"
                      ],
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-05-08 19:22:51",
                      "updated_at": "2017-05-08 19:23:46",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                    },
                    "child_transactions": [],
                    "files": [],
                    "payment_method": {
                      "id": "425dfe40-3f4d-443e-8ac8-dc4ec6f4edec",
                      "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "merchant_id": "aa7766b2-242f-43b9-9476-3c9018f0ce52",
                      "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                      "is_default": 1,
                      "method": "card",
                      "person_name": "Steven Smith Jr.",
                      "card_type": "visa",
                      "card_last_four": "1111",
                      "card_exp": "042019",
                      "bank_name": null,
                      "bank_type": null,
                      "bank_holder_type": null,
                      "address_1": null,
                      "address_2": null,
                      "address_city": null,
                      "address_state": null,
                      "address_zip": "32944",
                      "address_country": "USA",
                      "purged_at": null,
                      "deleted_at": null,
                      "created_at": "2017-05-15 22:13:12",
                      "updated_at": "2017-05-15 22:13:12",
                      "card_exp_datetime": "2019-04-30 23:59:59",
                      "customer": {
                        "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                        "firstname": "John",
                        "lastname": "Smith",
                        "company": "ABC INC",
                        "email": "demo@abc.com",
                        "cc_emails": [
                          "demo1@abc.com",
                          "demo2@abc.com"
                        ],
                        "phone": "1234567898",
                        "address_1": "123 Rite Way",
                        "address_2": "Unit 12",
                        "address_city": "Orlando",
                        "address_state": "FL",
                        "address_zip": "32801",
                        "address_country": "USA",
                        "notes": null,
                        "reference": "BARTLE",
                        "options": "",
                        "created_at": "2017-05-08 19:22:51",
                        "updated_at": "2017-05-08 19:23:46",
                        "deleted_at": null,
                        "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                      }
                    },
                    "user": {
                      "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "system_admin": false,
                      "name": "Demo Mann",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2017-05-15 16:30:23",
                      "email_verified_at": "2017-03-29 15:27:21",
                      "is_api_key": false,
                      "created_at": "2017-01-11 21:44:02",
                      "updated_at": "2017-05-15 16:30:23",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null,
                      "merchant_options": [],
                      "is_portal": false
                    }
                  }
                ]
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "keywords": [
                  "The keywords must be an array."
                ],
                "startDate": [
                  "The start date does not match the format Y-m-d G:i:s."
                ]
              }
            }
          }
        },
        "summary": "List and Filter All Transactions",
        "operationId": "List and Filter All Transactions",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis call retrieves all transactions found under the merchant.\nCan be given query parameters to sort and filter the transaction data with the below actions.\nTransactions are created using the `POST /charge` call.\n\nCheck roles to see which user roles may process a transaction.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "6f49149d-69a1-48e6-bec5-d63eb5816118",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "charge",
                "source": null,
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "payment_method_id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "tax": 0,
                  "subtotal": 2,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 1
                    }
                  ]
                },
                "total": 1,
                "method": "card",
                "pre_auth": false,
                "last_four": "1111",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2017-05-17 19:57:08",
                "updated_at": "2017-05-17 19:57:08",
                "total_refunded": null,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": true,
                "schedule_id": null,
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-17 19:56:59",
                  "updated_at": "2017-05-17 19:56:59",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "user": {
                  "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "system_admin": true,
                  "name": "Benji",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2016-12-01 16:18:46",
                  "email_verified_at": "2016-12-01 16:18:46",
                  "is_api_key": false,
                  "created_at": "2016-12-01 16:18:46",
                  "updated_at": "2017-01-27 20:10:53",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Get a Transaction's Information",
        "operationId": "Get a Transaction's Information",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nSearches for a specific transaction based on the given ID, then lists data on that transaction.\nWill show info such as the `payment_method`, `customer`, and `child_transactions`.\nTypically used in conjunction with `PUT /transaction/{id}`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}/": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "6f49149d-69a1-48e6-bec5-d63eb5816118",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "charge",
                "source": null,
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "payment_method_id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "tax": 0,
                  "subtotal": 2,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 2
                    }
                  ]
                },
                "total": 1,
                "method": "card",
                "pre_auth": false,
                "last_four": "1111",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2017-05-17 19:57:08",
                "updated_at": "2017-05-17 19:57:08",
                "total_refunded": null,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": true,
                "schedule_id": null,
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-17 19:56:59",
                  "updated_at": "2017-05-17 19:56:59",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "user": {
                  "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "system_admin": true,
                  "name": "Benji",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2016-12-01 16:18:46",
                  "email_verified_at": "2016-12-01 16:18:46",
                  "is_api_key": false,
                  "created_at": "2016-12-01 16:18:46",
                  "updated_at": "2017-01-27 20:10:53",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "ccEmails.0": [
                  "The ccEmails.0 must be a valid email address."
                ]
              }
            }
          }
        },
        "summary": "Update a Transaction",
        "operationId": "Update a Transaction",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nThis route will error if called for a transaction created by Omni from paying an invoice or running post charge.\nThis function can be called to change the values on a transaction which you created manually with post transaction.\nUse with `GET /transaction/{id}` to see the transaction details before changing them.\nThis uses the same parameters as `POST /transaction/`.\n\n**Some things such as receipt emails, the invoice page, the payments page, and the Quickbooks Online integration rely on fields in some field in `meta` to correctly display or function.**\n\nYou may encounter unwanted or unusual behavior if you remove from or change these fields in `meta`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                },
                "source": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string"
                },
                "last_four": {
                  "type": "string"
                },
                "reference_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    },
                    "lineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "item": {
                            "type": "string"
                          },
                          "details": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "price": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "pre_auth": {
                  "type": "number"
                },
                "method": {
                  "type": "string"
                }
              },
              "example": {
                "total": 2,
                "source": "postman",
                "success": true,
                "type": "charge",
                "last_four": "",
                "reference_id": "6e97c100-4aeb-4f3f-a8b7-764dd5edc678",
                "meta": {
                  "tax": 0,
                  "subtotal": 2,
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 2
                    }
                  ]
                },
                "message": "",
                "pre_auth": 0,
                "method": "card"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}/void-or-refund": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "ba9bf00c-c54d-48f8-8400-902cb3aacd21",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "charge",
                "source": null,
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "payment_method_id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "total": 1,
                "method": "card",
                "pre_auth": false,
                "last_four": "1111",
                "receipt_email_at": "2017-05-19 14:40:31",
                "receipt_sms_at": null,
                "created_at": "2017-05-19 13:50:44",
                "updated_at": "2017-05-19 14:40:31",
                "total_refunded": null,
                "is_refundable": false,
                "is_voided": true,
                "is_voidable": false,
                "schedule_id": null,
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "child_transactions": [
                  {
                    "id": "04497525-565c-4169-bb6d-5a4df399d255",
                    "invoice_id": "",
                    "reference_id": "ba9bf00c-c54d-48f8-8400-902cb3aacd21",
                    "recurring_transaction_id": "",
                    "type": "void",
                    "source": null,
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                    "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "payment_method_id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                    "is_manual": null,
                    "success": true,
                    "message": null,
                    "meta": {
                      "tax": 2,
                      "subtotal": 10
                    },
                    "total": 1,
                    "method": "card",
                    "pre_auth": false,
                    "last_four": "1111",
                    "receipt_email_at": null,
                    "receipt_sms_at": null,
                    "created_at": "2017-05-19 15:11:32",
                    "updated_at": "2017-05-19 15:11:32",
                    "total_refunded": null,
                    "is_refundable": false,
                    "is_voided": null,
                    "is_voidable": false,
                    "schedule_id": null,
                    "customer": {
                      "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@abc.com",
                      "cc_emails": [
                        "demo1@abc.com",
                        "demo2@abc.com"
                      ],
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-05-08 19:22:51",
                      "updated_at": "2017-05-08 19:23:46",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                    },
                    "child_transactions": [],
                    "files": [],
                    "payment_method": {
                      "id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                      "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                      "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                      "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                      "is_default": 1,
                      "method": "card",
                      "person_name": "Steven Smith Jr.",
                      "card_type": "visa",
                      "card_last_four": "1111",
                      "card_exp": "042019",
                      "bank_name": null,
                      "bank_type": null,
                      "bank_holder_type": null,
                      "address_1": null,
                      "address_2": null,
                      "address_city": null,
                      "address_state": null,
                      "address_zip": "32944",
                      "address_country": "USA",
                      "purged_at": null,
                      "deleted_at": null,
                      "created_at": "2017-05-17 19:56:59",
                      "updated_at": "2017-05-17 19:56:59",
                      "card_exp_datetime": "2019-04-30 23:59:59",
                      "customer": {
                        "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                        "firstname": "John",
                        "lastname": "Smith",
                        "company": "ABC INC",
                        "email": "demo@abc.com",
                        "cc_emails": [
                          "demo1@abc.com",
                          "demo2@abc.com"
                        ],
                        "phone": "1234567898",
                        "address_1": "123 Rite Way",
                        "address_2": "Unit 12",
                        "address_city": "Orlando",
                        "address_state": "FL",
                        "address_zip": "32801",
                        "address_country": "USA",
                        "notes": null,
                        "reference": "BARTLE",
                        "options": "",
                        "created_at": "2017-05-08 19:22:51",
                        "updated_at": "2017-05-08 19:23:46",
                        "deleted_at": null,
                        "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                      }
                    },
                    "user": {
                      "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                      "system_admin": true,
                      "name": "Benji",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2016-12-01 16:18:46",
                      "email_verified_at": "2016-12-01 16:18:46",
                      "is_api_key": false,
                      "created_at": "2016-12-01 16:18:46",
                      "updated_at": "2017-01-27 20:10:53",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null,
                      "merchant_options": [],
                      "is_portal": false
                    }
                  }
                ],
                "files": [],
                "payment_method": {
                  "id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-17 19:56:59",
                  "updated_at": "2017-05-17 19:56:59",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "user": {
                  "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "system_admin": true,
                  "name": "Benji",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2016-12-01 16:18:46",
                  "email_verified_at": "2016-12-01 16:18:46",
                  "is_api_key": false,
                  "created_at": "2016-12-01 16:18:46",
                  "updated_at": "2017-01-27 20:10:53",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "total": [
                  "The transaction has already been voided."
                ],
                "type": [
                  "The transaction to refund must be a successful auth, charge, credit, or capture."
                ]
              }
            }
          }
        },
        "summary": "Void or Refund Transaction",
        "operationId": "Void or Refund Transaction",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nWill void or refund a transaction based on whichever option is available.\nVoid will be used if the transaction is less than 18-24 hours old and refunds can be issued anytime after that.\nPartial refunds are possible, but partial voids are not.\nVoiding a transactions ends the transaction before it's batched.\nRefunding a transaction will return the funds back to the customer.\n\n**NOTE:** this route will not work for VT+Terminal transactions. If your transaction source is `terminalservice.dejavoo` use the [terminal/void-or-refund route instead](https://fattmerchant.docs.apiary.io/#reference/0/terminals/void-or-refund-(omni-picks-for-you)).",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}/refund": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "4daf3bdd-a23a-4363-b5c3-041ce431e301",
                "invoice_id": "2f463135-c62f-4f54-9e18-58f616e7a56d",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "charge",
                "source": null,
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                "payment_method_id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "lineItems": [
                    {
                      "item": "",
                      "details": "",
                      "quantity": 1,
                      "price": "123"
                    }
                  ],
                  "memo": "",
                  "subtotal": 123,
                  "tax": "",
                  "type": "invoice/schedule"
                },
                "total": 123,
                "method": "card",
                "pre_auth": false,
                "last_four": "1111",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2017-05-05 19:51:05",
                "updated_at": "2017-05-05 19:51:05",
                "total_refunded": 5,
                "is_refundable": true,
                "is_voided": false,
                "is_voidable": false,
                "schedule_id": "8b8c4333-29af-4364-8a5e-d8617f31c4ae",
                "customer": {
                  "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                  "firstname": "BOND",
                  "lastname": "BURGER",
                  "company": "ABC INC",
                  "email": "john@abc.com",
                  "cc_emails": null,
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-03-31 17:04:27",
                  "updated_at": "2017-03-31 17:04:27",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                },
                "child_transactions": [
                  {
                    "id": "fd4e7bad-4982-4747-ab95-4eb87df97a8c",
                    "invoice_id": "2f463135-c62f-4f54-9e18-58f616e7a56d",
                    "reference_id": "4daf3bdd-a23a-4363-b5c3-041ce431e301",
                    "recurring_transaction_id": "",
                    "type": "refund",
                    "source": null,
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                    "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                    "payment_method_id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                    "is_manual": null,
                    "success": true,
                    "message": null,
                    "meta": {
                      "lineItems": [
                        {
                          "item": "",
                          "details": "",
                          "quantity": 1,
                          "price": "123"
                        }
                      ],
                      "memo": "",
                      "subtotal": 123,
                      "tax": "",
                      "type": "invoice/schedule"
                    },
                    "total": 5,
                    "method": "card",
                    "pre_auth": false,
                    "last_four": "1111",
                    "receipt_email_at": null,
                    "receipt_sms_at": null,
                    "created_at": "2017-05-19 15:06:29",
                    "updated_at": "2017-05-19 15:06:29",
                    "total_refunded": null,
                    "is_refundable": false,
                    "is_voided": null,
                    "is_voidable": false,
                    "schedule_id": "8b8c4333-29af-4364-8a5e-d8617f31c4ae",
                    "customer": {
                      "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                      "firstname": "BOND",
                      "lastname": "BURGER",
                      "company": "ABC INC",
                      "email": "john@abc.com",
                      "cc_emails": null,
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-03-31 17:04:27",
                      "updated_at": "2017-03-31 17:04:27",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                    },
                    "child_transactions": [],
                    "files": [],
                    "payment_method": {
                      "id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                      "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                      "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                      "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                      "nickname": "VISA: BOND BURGER (ending in: 1111)",
                      "is_default": 0,
                      "method": "card",
                      "person_name": "BOND BURGER",
                      "card_type": "visa",
                      "card_last_four": "1111",
                      "card_exp": "022020",
                      "bank_name": null,
                      "bank_type": null,
                      "bank_holder_type": null,
                      "address_1": null,
                      "address_2": null,
                      "address_city": null,
                      "address_state": null,
                      "address_zip": null,
                      "address_country": "USA",
                      "purged_at": null,
                      "deleted_at": null,
                      "created_at": "2017-04-05 15:30:05",
                      "updated_at": "2017-04-05 15:30:05",
                      "card_exp_datetime": "2020-02-29 23:59:59",
                      "customer": {
                        "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                        "firstname": "BOND",
                        "lastname": "BURGER",
                        "company": "ABC INC",
                        "email": "john@abc.com",
                        "cc_emails": null,
                        "phone": "1234567898",
                        "address_1": "123 Rite Way",
                        "address_2": "Unit 12",
                        "address_city": "Orlando",
                        "address_state": "FL",
                        "address_zip": "32801",
                        "address_country": "USA",
                        "notes": null,
                        "reference": "BARTLE",
                        "options": "",
                        "created_at": "2017-03-31 17:04:27",
                        "updated_at": "2017-03-31 17:04:27",
                        "deleted_at": null,
                        "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                      }
                    },
                    "user": {
                      "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                      "system_admin": true,
                      "name": "Benji",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2016-12-01 16:18:46",
                      "email_verified_at": "2016-12-01 16:18:46",
                      "is_api_key": false,
                      "created_at": "2016-12-01 16:18:46",
                      "updated_at": "2017-01-27 20:10:53",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null,
                      "merchant_options": [],
                      "is_portal": false
                    }
                  }
                ],
                "files": [],
                "payment_method": {
                  "id": "ad03da14-4f2b-4b43-8e12-e8d784018d79",
                  "customer_id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "nickname": "VISA: BOND BURGER (ending in: 1111)",
                  "is_default": 0,
                  "method": "card",
                  "person_name": "BOND BURGER",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "022020",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": null,
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-04-05 15:30:05",
                  "updated_at": "2017-04-05 15:30:05",
                  "card_exp_datetime": "2020-02-29 23:59:59",
                  "customer": {
                    "id": "ffed4fd2-977e-412f-9048-293bb5e46c68",
                    "firstname": "BOND",
                    "lastname": "BURGER",
                    "company": "ABC INC",
                    "email": "john@abc.com",
                    "cc_emails": null,
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-03-31 17:04:27",
                    "updated_at": "2017-03-31 17:04:27",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/144fa42eb34883ecb00cbc3f81a060a1"
                  }
                },
                "user": {
                  "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "system_admin": true,
                  "name": "Demo",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2017-05-15 16:30:23",
                  "email_verified_at": "2017-03-29 15:27:21",
                  "is_api_key": false,
                  "created_at": "2017-01-11 21:44:02",
                  "updated_at": "2017-05-15 16:30:23",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "created_at": [
                  "The transaction cannot be refunded within 24 hours of being created."
                ]
              }
            }
          }
        },
        "summary": "Refund Transaction",
        "operationId": "Refund Transaction",
        "description": "_(please click this box ^^ for more information)_\n\n(Advanced)\n**Note: Authentication Token, Active Team and Enabled Team Required**\n**Use [transaction/id/void-or-refund](https://fattmerchant.docs.apiary.io/#reference/0/transactions/void-or-refund-transaction) route instead**\n\n**To refund, a transaction must be older than 24-hours.**\nThis returns money from the merchant to a customer.\nThe user may request how much is to be refunded.\nNo less than 1 cent and no more than the total amount may be refunded.\nAfter a refund is processed, a child refund transaction is attached to the original transaction.\nThe child refund's `reference_id` will be the `id` of the original transaction.\nThe refund resource cannot exceed the total of the original transaction.\nThe total allowed is calculated based on the cumulative total of its successful child refund transactions.\nSo if one refunds $30 off of a $50 transaction, only up to $20 more may be refunded.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number"
                }
              },
              "example": {
                "total": 5
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}/void": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "ba9bf00c-c54d-48f8-8400-902cb3aacd21",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "type": "charge",
                "source": null,
                "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                "payment_method_id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "total": 1,
                "method": "card",
                "pre_auth": false,
                "last_four": "1111",
                "receipt_email_at": "2017-05-19 14:40:31",
                "receipt_sms_at": null,
                "created_at": "2017-05-19 13:50:44",
                "updated_at": "2017-05-19 14:40:31",
                "total_refunded": null,
                "is_refundable": false,
                "is_voided": true,
                "is_voidable": false,
                "schedule_id": null,
                "customer": {
                  "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "demo@abc.com",
                  "cc_emails": [
                    "demo1@abc.com",
                    "demo2@abc.com"
                  ],
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2017-05-08 19:22:51",
                  "updated_at": "2017-05-08 19:23:46",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                },
                "child_transactions": [
                  {
                    "id": "04497525-565c-4169-bb6d-5a4df399d255",
                    "invoice_id": "",
                    "reference_id": "ba9bf00c-c54d-48f8-8400-902cb3aacd21",
                    "recurring_transaction_id": "",
                    "type": "void",
                    "source": null,
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                    "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "payment_method_id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                    "is_manual": null,
                    "success": true,
                    "message": null,
                    "meta": {
                      "tax": 2,
                      "subtotal": 10
                    },
                    "total": 1,
                    "method": "card",
                    "pre_auth": false,
                    "last_four": "1111",
                    "receipt_email_at": null,
                    "receipt_sms_at": null,
                    "created_at": "2017-05-19 15:11:32",
                    "updated_at": "2017-05-19 15:11:32",
                    "total_refunded": null,
                    "is_refundable": false,
                    "is_voided": null,
                    "is_voidable": false,
                    "schedule_id": null,
                    "customer": {
                      "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "demo@abc.com",
                      "cc_emails": [
                        "demo1@abc.com",
                        "demo2@abc.com"
                      ],
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2017-05-08 19:22:51",
                      "updated_at": "2017-05-08 19:23:46",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                    },
                    "child_transactions": [],
                    "files": [],
                    "payment_method": {
                      "id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                      "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                      "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                      "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                      "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                      "is_default": 1,
                      "method": "card",
                      "person_name": "Steven Smith Jr.",
                      "card_type": "visa",
                      "card_last_four": "1111",
                      "card_exp": "042019",
                      "bank_name": null,
                      "bank_type": null,
                      "bank_holder_type": null,
                      "address_1": null,
                      "address_2": null,
                      "address_city": null,
                      "address_state": null,
                      "address_zip": "32944",
                      "address_country": "USA",
                      "purged_at": null,
                      "deleted_at": null,
                      "created_at": "2017-05-17 19:56:59",
                      "updated_at": "2017-05-17 19:56:59",
                      "card_exp_datetime": "2019-04-30 23:59:59",
                      "customer": {
                        "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                        "firstname": "John",
                        "lastname": "Smith",
                        "company": "ABC INC",
                        "email": "demo@abc.com",
                        "cc_emails": [
                          "demo1@abc.com",
                          "demo2@abc.com"
                        ],
                        "phone": "1234567898",
                        "address_1": "123 Rite Way",
                        "address_2": "Unit 12",
                        "address_city": "Orlando",
                        "address_state": "FL",
                        "address_zip": "32801",
                        "address_country": "USA",
                        "notes": null,
                        "reference": "BARTLE",
                        "options": "",
                        "created_at": "2017-05-08 19:22:51",
                        "updated_at": "2017-05-08 19:23:46",
                        "deleted_at": null,
                        "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                      }
                    },
                    "user": {
                      "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                      "system_admin": true,
                      "name": "Benji",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2016-12-01 16:18:46",
                      "email_verified_at": "2016-12-01 16:18:46",
                      "is_api_key": false,
                      "created_at": "2016-12-01 16:18:46",
                      "updated_at": "2017-01-27 20:10:53",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null,
                      "merchant_options": [],
                      "is_portal": false
                    }
                  }
                ],
                "files": [],
                "payment_method": {
                  "id": "129520d1-3844-45fd-a0b1-afb66bcdc74c",
                  "customer_id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2017-05-17 19:56:59",
                  "updated_at": "2017-05-17 19:56:59",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "d45ee88c-8b27-4be8-8d81-77dda1b81826",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "demo@abc.com",
                    "cc_emails": [
                      "demo1@abc.com",
                      "demo2@abc.com"
                    ],
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2017-05-08 19:22:51",
                    "updated_at": "2017-05-08 19:23:46",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/fe3e929dd80f1653c3a4b82812660061"
                  }
                },
                "user": {
                  "id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                  "system_admin": true,
                  "name": "Benji",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2016-12-01 16:18:46",
                  "email_verified_at": "2016-12-01 16:18:46",
                  "is_api_key": false,
                  "created_at": "2016-12-01 16:18:46",
                  "updated_at": "2017-01-27 20:10:53",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "total": [
                  "The transaction has already been voided."
                ]
              }
            }
          }
        },
        "summary": "Void Transaction",
        "operationId": "Void Transaction",
        "description": "_(please click this box ^^ for more information)_\n\n(Advanced)\n**Note: Authentication Token, Active Team and Enabled Team Required**\n**Use [transaction/id/void-or-refund](https://fattmerchant.docs.apiary.io/#reference/0/transactions/void-or-refund-transaction) route instead**\n\nSets a transaction to void, ending the transaction before it's processed.\nCreates a child transaction with type = `void` belonging to the transaction of the given ID. \nTransactions may only be set to void if they haven't already been processed yet.\nIt usually takes 18-24 hours before a transaction is completely processed.\nIf a void request is sent after the transaction occurs, an error will appear.\n`POST /transaction/{id}/refund` is the only way to reverse a transaction after it has been processed.\nThe result will be the parent transaction with the new void `child_transaction` within another `child_transaction`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{transactionid}/capture": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "d4db6c3b-4a96-48b6-a08b-551326fada40",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "pre_auth",
                "source": null,
                "is_merchant_present": true,
                "merchant_id": "e7bcf7a6-ea72-4981-894d-73b41a690fa8",
                "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                "customer_id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                "payment_method_id": "f096d9b4-c890-45af-9b47-3de0aa10e5d2",
                "is_manual": null,
                "success": true,
                "message": null,
                "meta": {
                  "tax": 2,
                  "subtotal": 10
                },
                "total": 1,
                "method": "card",
                "pre_auth": true,
                "is_captured": 1,
                "last_four": "1111",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-03-20 13:27:19",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2018-03-05 13:27:05",
                "updated_at": "2018-03-05 13:27:19",
                "total_refunded": 0,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": false,
                "schedule_id": null,
                "child_captures": [
                  {
                    "id": "936e3b88-6df1-4048-9d39-00469748008f",
                    "invoice_id": "",
                    "reference_id": "",
                    "recurring_transaction_id": "",
                    "auth_id": "d4db6c3b-4a96-48b6-a08b-551326fada40",
                    "type": "capture",
                    "source": null,
                    "is_merchant_present": true,
                    "merchant_id": "e7bcf7a6-ea72-4981-894d-73b41a690fa8",
                    "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                    "customer_id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                    "payment_method_id": "f096d9b4-c890-45af-9b47-3de0aa10e5d2",
                    "is_manual": null,
                    "success": true,
                    "message": null,
                    "meta": {
                      "tax": 2,
                      "subtotal": 10
                    },
                    "total": 5,
                    "method": "card",
                    "pre_auth": false,
                    "is_captured": 0,
                    "last_four": "1111",
                    "interchange_code": "",
                    "interchange_fee": null,
                    "batch_id": "",
                    "batched_at": "2018-03-20 13:27:18",
                    "emv_response": "",
                    "avs_response": "",
                    "cvv_response": "",
                    "pos_entry": "",
                    "pos_salesperson": "",
                    "receipt_email_at": null,
                    "receipt_sms_at": null,
                    "created_at": "2018-03-05 13:27:18",
                    "updated_at": "2018-03-05 13:27:18",
                    "total_refunded": 0,
                    "is_refundable": false,
                    "is_voided": false,
                    "is_voidable": true,
                    "schedule_id": null,
                    "child_captures": [],
                    "parent_auth": null,
                    "customer": {
                      "id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                      "firstname": "John",
                      "lastname": "Smith",
                      "company": "ABC INC",
                      "email": "eandrews@fattmerchant.com",
                      "cc_emails": [
                        "demo@abc.com"
                      ],
                      "cc_sms": null,
                      "phone": "1234567898",
                      "address_1": "123 Rite Way",
                      "address_2": "Unit 12",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "32801",
                      "address_country": "USA",
                      "notes": null,
                      "reference": "BARTLE",
                      "options": "",
                      "created_at": "2018-03-02 16:20:06",
                      "updated_at": "2018-03-02 16:20:06",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                    },
                    "child_transactions": [],
                    "files": [],
                    "payment_method": {
                      "id": "f096d9b4-c890-45af-9b47-3de0aa10e5d2",
                      "customer_id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                      "merchant_id": "e7bcf7a6-ea72-4981-894d-73b41a690fa8",
                      "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                      "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                      "has_cvv": 1,
                      "is_default": 1,
                      "method": "card",
                      "person_name": "Steven Smith Jr.",
                      "card_type": "visa",
                      "card_last_four": "1111",
                      "card_exp": "042019",
                      "bank_name": null,
                      "bank_type": null,
                      "bank_holder_type": null,
                      "address_1": null,
                      "address_2": null,
                      "address_city": null,
                      "address_state": null,
                      "address_zip": "32944",
                      "address_country": "USA",
                      "purged_at": null,
                      "deleted_at": null,
                      "created_at": "2018-03-03 16:21:09",
                      "updated_at": "2018-03-03 16:21:09",
                      "card_exp_datetime": "2019-04-30 23:59:59",
                      "customer": {
                        "id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                        "firstname": "John",
                        "lastname": "Smith",
                        "company": "ABC INC",
                        "email": "eandrews@fattmerchant.com",
                        "cc_emails": [
                          "demo@abc.com"
                        ],
                        "cc_sms": null,
                        "phone": "1234567898",
                        "address_1": "123 Rite Way",
                        "address_2": "Unit 12",
                        "address_city": "Orlando",
                        "address_state": "FL",
                        "address_zip": "32801",
                        "address_country": "USA",
                        "notes": null,
                        "reference": "BARTLE",
                        "options": "",
                        "created_at": "2018-03-03 16:20:06",
                        "updated_at": "2018-03-03 16:20:06",
                        "deleted_at": null,
                        "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                      }
                    },
                    "user": {
                      "id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                      "system_admin": true,
                      "name": "Morty Junior",
                      "email": "demo@fattmerchant.com",
                      "email_verification_sent_at": "2016-05-11 17:13:33",
                      "email_verified_at": "2016-05-11 17:13:33",
                      "is_api_key": false,
                      "acknowledgments": {
                        "tutorial": true,
                        "signedApplication": true,
                        "godviewWelcome": true
                      },
                      "created_at": "2016-05-18 14:11:46",
                      "updated_at": "2018-03-05 20:26:20",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                      "team_admin": null,
                      "team_enabled": null,
                      "team_role": null,
                      "merchant_options": [],
                      "is_portal": false
                    }
                  }
                ],
                "parent_auth": null,
                "customer": {
                  "id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                  "firstname": "John",
                  "lastname": "Smith",
                  "company": "ABC INC",
                  "email": "eandrews@fattmerchant.com",
                  "cc_emails": [
                    "demo@abc.com"
                  ],
                  "cc_sms": null,
                  "phone": "1234567898",
                  "address_1": "123 Rite Way",
                  "address_2": "Unit 12",
                  "address_city": "Orlando",
                  "address_state": "FL",
                  "address_zip": "32801",
                  "address_country": "USA",
                  "notes": null,
                  "reference": "BARTLE",
                  "options": "",
                  "created_at": "2018-03-03 16:20:06",
                  "updated_at": "2018-03-03 16:20:06",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "f096d9b4-c890-45af-9b47-3de0aa10e5d2",
                  "customer_id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                  "merchant_id": "e7bcf7a6-ea72-4981-894d-73b41a690fa8",
                  "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                  "nickname": "VISA: Steven Smith Jr. (ending in: 1111)",
                  "has_cvv": 1,
                  "is_default": 1,
                  "method": "card",
                  "person_name": "Steven Smith Jr.",
                  "card_type": "visa",
                  "card_last_four": "1111",
                  "card_exp": "042019",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "32944",
                  "address_country": "USA",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-03-03 16:21:09",
                  "updated_at": "2018-03-03 16:21:09",
                  "card_exp_datetime": "2019-04-30 23:59:59",
                  "customer": {
                    "id": "3a50862a-c2d5-47ae-8f49-d42afff8ee77",
                    "firstname": "John",
                    "lastname": "Smith",
                    "company": "ABC INC",
                    "email": "eandrews@fattmerchant.com",
                    "cc_emails": [
                      "demo@abc.com"
                    ],
                    "cc_sms": null,
                    "phone": "1234567898",
                    "address_1": "123 Rite Way",
                    "address_2": "Unit 12",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "32801",
                    "address_country": "USA",
                    "notes": null,
                    "reference": "BARTLE",
                    "options": "",
                    "created_at": "2018-03-03 16:20:06",
                    "updated_at": "2018-03-03 16:20:06",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                  }
                },
                "user": {
                  "id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                  "system_admin": true,
                  "name": "Morty Junior",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2016-05-11 17:13:33",
                  "email_verified_at": "2016-05-11 17:13:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "signedApplication": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-18 14:11:46",
                  "updated_at": "2018-03-05 20:26:20",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Capture a Transaction",
        "operationId": "Capture a Transaction",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\n*Requires a pre-authenticated (pre-auth) transaction ID*.\n\nUsing a preauthorized (pre_auth) transaction id, this call will reuse the payment information of that transaction to create a new one.\nThe body is the same as creating a new transaction.\nThe new transaction will have preauth = false; therefore a capture of an already captured transaction will not work.\nTypically used in conjunction with a `POST /charge` with pre_auth = true.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "transactionid",
            "in": "path",
            "description": "The transactionid value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}/related": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "id": "3872e334-bba1-4bbd-91fc-bb3f48c74b1a",
                  "invoice_id": "",
                  "reference_id": "890eda03-0cb5-4c51-813d-8f1959d1a591",
                  "recurring_transaction_id": "",
                  "type": "refund",
                  "source": null,
                  "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                  "user_id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                  "customer_id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                  "payment_method_id": "23c06bc1-7473-46fb-8d65-b8e9bde1fe75",
                  "is_manual": null,
                  "success": true,
                  "message": null,
                  "meta": {
                    "tax": 0,
                    "subtotal": 2,
                    "lineItems": [
                      {
                        "id": "optional-fm-catalog-item-id",
                        "item": "Demo Item",
                        "details": "this is a regular demo item",
                        "quantity": 1,
                        "price": 22
                      }
                    ]
                  },
                  "total": 22,
                  "method": "card",
                  "pre_auth": false,
                  "last_four": "1111",
                  "receipt_email_at": null,
                  "receipt_sms_at": null,
                  "created_at": "2017-03-29 16:15:43",
                  "updated_at": "2017-03-29 16:15:43",
                  "total_refunded": null,
                  "is_refundable": false,
                  "is_voided": null,
                  "is_voidable": false,
                  "schedule_id": null,
                  "customer": {
                    "id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                    "firstname": "Mario",
                    "lastname": "Henderson",
                    "company": "",
                    "email": "fatttest737@gmail.com",
                    "cc_emails": null,
                    "phone": "5555555555",
                    "address_1": "123 S ST.",
                    "address_2": "",
                    "address_city": "Orlando",
                    "address_state": "FL",
                    "address_zip": "3222",
                    "address_country": "USA",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2017-01-30 20:41:23",
                    "updated_at": "2017-01-30 20:41:23",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a"
                  },
                  "child_transactions": [],
                  "files": [],
                  "payment_method": {
                    "id": "23c06bc1-7473-46fb-8d65-b8e9bde1fe75",
                    "customer_id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                    "merchant_id": "dd36b936-1eb7-4ece-bebc-b514c6a36ebd",
                    "user_id": "41e60252-4f23-48de-a64f-e5a1e8a9359c",
                    "nickname": "VISA: Mario Mario (ending in: 1111)",
                    "is_default": 0,
                    "method": "card",
                    "person_name": "Mario Henderson",
                    "card_type": "visa",
                    "card_last_four": "1111",
                    "card_exp": "022020",
                    "bank_name": null,
                    "bank_type": null,
                    "bank_holder_type": null,
                    "address_1": null,
                    "address_2": null,
                    "address_city": null,
                    "address_state": null,
                    "address_zip": null,
                    "address_country": "USA",
                    "purged_at": null,
                    "deleted_at": null,
                    "created_at": "2017-01-30 20:48:13",
                    "updated_at": "2017-01-30 20:48:13",
                    "card_exp_datetime": "2020-02-29 23:59:59",
                    "customer": {
                      "id": "50d14fcb-b468-4ac4-afd8-d7c47172dc1c",
                      "firstname": "Mario",
                      "lastname": "Henderson",
                      "company": "",
                      "email": "fatttest737@gmail.com",
                      "cc_emails": null,
                      "phone": "5555555555",
                      "address_1": "123 S ST.",
                      "address_2": "",
                      "address_city": "Orlando",
                      "address_state": "FL",
                      "address_zip": "3222",
                      "address_country": "USA",
                      "notes": "",
                      "reference": "",
                      "options": "",
                      "created_at": "2017-01-30 20:41:23",
                      "updated_at": "2017-01-30 20:41:23",
                      "deleted_at": null,
                      "gravatar": "//www.gravatar.com/avatar/52b3ef2ae70945ce0fca14086443dc1a"
                    }
                  },
                  "user": {
                    "id": "b58d7eee-e68d-4d12-a1f8-62f5e71382ae",
                    "system_admin": true,
                    "name": "Demo Mann",
                    "email": "demo@fattmerchant.com",
                    "email_verification_sent_at": "2017-05-15 16:30:23",
                    "email_verified_at": "2017-03-29 15:27:21",
                    "is_api_key": false,
                    "created_at": "2017-01-11 21:44:02",
                    "updated_at": "2017-05-15 16:30:23",
                    "deleted_at": null,
                    "gravatar": "//www.gravatar.com/avatar/157965dea7cd2f44e349382d1d791650",
                    "team_admin": null,
                    "team_enabled": null,
                    "team_role": null,
                    "merchant_options": [],
                    "is_portal": false
                  }
                }
              ]
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "id": [
                  "The selected id is invalid."
                ]
              }
            }
          }
        },
        "summary": "Get a Related Transaction",
        "operationId": "Get a Related Transaction",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nWhen a transaction is voided or refunded, it creates a child transaction as a way of keeping track of changes to transactions.\nTransaction can have multiple child transactions.\n`Child_transactions` contain a `related_ID` which is just the ID of the original transaction.\nThis ID is used to identify the Child transactions' original transaction.\nThe child transaction will show changes to the original transaction.\nMust be a charge transaction id; void and refund transaction ids will not work.\n\n+ Request\n\n        + Headers\n        \n            Authorization: Bearer insert_api_key_here\n            Accept: application/json",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/transaction/{id}/receipt/email": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "184ef996-de5e-41a8-b139-4ba595426053",
                "invoice_id": "2230adc8-a755-4a26-95b5-a54a4b8aa0ad",
                "reference_id": "",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "charge",
                "source": null,
                "is_merchant_present": true,
                "merchant_id": "a61d78cc-cde9-44ac-8a18-30c39be05879",
                "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                "customer_id": "0f553deb-5dbd-4dca-9bef-743c4bc2809f",
                "payment_method_id": "giftcard",
                "is_manual": true,
                "success": true,
                "message": null,
                "meta": {
                  "update_inventory": true,
                  "taxOverride": false,
                  "isBulkInvoice": false,
                  "taxRate": 0,
                  "tax": 0,
                  "subtotal": 55,
                  "memo": "",
                  "lineItems": [
                    {
                      "id": "generated-id-0630-32fe-649d-cf6c-e38b",
                      "item": "",
                      "details": "",
                      "quantity": 1,
                      "price": "55"
                    }
                  ],
                  "reference": 1872,
                  "check_number": null,
                  "driver_license": null,
                  "driver_license_state": null,
                  "payment_phone": null,
                  "payment_note": null
                },
                "total": 55,
                "method": "giftcard",
                "pre_auth": false,
                "is_captured": 1,
                "last_four": null,
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-10-02 12:30:44",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": "2018-10-02 16:30:44",
                "receipt_sms_at": "2018-10-02 14:53:09",
                "created_at": "2018-07-23 18:21:42",
                "updated_at": "2018-10-02 16:30:44",
                "total_refunded": 0,
                "is_refundable": true,
                "is_voided": false,
                "is_voidable": true,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "customer": {
                  "id": "0f553deb-5dbd-4dca-9bef-743c4bc2809f",
                  "firstname": "Elizabeth",
                  "lastname": "Jones",
                  "company": "Liz's Lemonade",
                  "email": "eandrews@fattmerchant.com",
                  "cc_emails": null,
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "",
                  "notes": "",
                  "reference": "",
                  "options": null,
                  "created_at": "2016-10-09 11:04:35",
                  "updated_at": "2018-08-14 13:09:21",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "giftcard",
                  "customer_id": "",
                  "merchant_id": "",
                  "user_id": "",
                  "nickname": "GIFT CARD",
                  "has_cvv": 0,
                  "is_default": 0,
                  "method": "giftcard",
                  "person_name": null,
                  "card_type": null,
                  "card_last_four": null,
                  "card_exp": null,
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": null,
                  "address_country": null,
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-06-05 16:45:43",
                  "updated_at": "2018-06-05 16:45:43",
                  "card_exp_datetime": [],
                  "is_usable_in_vt": false,
                  "customer": {
                    "id": "",
                    "firstname": "",
                    "lastname": "",
                    "company": "",
                    "email": "",
                    "cc_emails": null,
                    "cc_sms": null,
                    "phone": "",
                    "address_1": "",
                    "address_2": "",
                    "address_city": "",
                    "address_state": "",
                    "address_zip": "",
                    "address_country": "",
                    "notes": null,
                    "reference": "",
                    "options": null,
                    "created_at": null,
                    "updated_at": null,
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": false
                  }
                },
                "user": {
                  "id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                  "system_admin": true,
                  "name": "Morty Junior",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2018-09-26 18:24:21",
                  "email_verified_at": "2016-05-11 17:13:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "signedApplication": true,
                    "editedOnboardingInformation": false,
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-18 14:11:46",
                  "updated_at": "2018-09-26 18:24:21",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_default": false
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "ccEmails.0": [
                  "The ccEmails.0 must be a valid email address."
                ]
              }
            }
          }
        },
        "summary": "E-Mail Transaction Receipt",
        "operationId": "E-Mail Transaction Receipt",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nUsing the ID of a transaction, this function will send out an `email` receipt of that transaction.\nThe `email` that will receive the receipt must be passed in to the function.\nIf invalid or incomplete `email` are given, this function will fail.\nCan be sent to multiple `email` by attaching more in the `ccEmail` field in the body.\n`email` must be sent manually and will not automatically send from any other call.\nThis uses the same info as `GET /transaction/{id}`.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/transaction/{id}/receipt/sms": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "184ef996-de5e-41a8-b139-4ba595426053",
                "invoice_id": "2230adc8-a755-4a26-95b5-a54a4b8aa0ad",
                "reference_id": "",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "charge",
                "source": null,
                "is_merchant_present": true,
                "merchant_id": "a61d78cc-cde9-44ac-8a18-30c39be05879",
                "user_id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                "customer_id": "0f553deb-5dbd-4dca-9bef-743c4bc2809f",
                "payment_method_id": "giftcard",
                "is_manual": true,
                "success": true,
                "message": null,
                "meta": {
                  "update_inventory": true,
                  "taxOverride": false,
                  "isBulkInvoice": false,
                  "taxRate": 0,
                  "tax": 0,
                  "subtotal": 55,
                  "memo": "",
                  "lineItems": [
                    {
                      "id": "generated-id-0630-32fe-649d-cf6c-e38b",
                      "item": "",
                      "details": "",
                      "quantity": 1,
                      "price": "55"
                    }
                  ],
                  "reference": 1872,
                  "check_number": null,
                  "driver_license": null,
                  "driver_license_state": null,
                  "payment_phone": null,
                  "payment_note": null
                },
                "total": 55,
                "method": "giftcard",
                "pre_auth": false,
                "is_captured": 1,
                "last_four": null,
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-10-02 10:53:09",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": "2018-10-02 14:47:08",
                "receipt_sms_at": "2018-10-02 14:53:09",
                "created_at": "2018-07-23 18:21:42",
                "updated_at": "2018-10-02 14:53:09",
                "total_refunded": 0,
                "is_refundable": true,
                "is_voided": false,
                "is_voidable": true,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "customer": {
                  "id": "0f553deb-5dbd-4dca-9bef-743c4bc2809f",
                  "firstname": "Elizabeth",
                  "lastname": "Jones",
                  "company": "Liz's Lemonade",
                  "email": "eandrews@fattmerchant.com",
                  "cc_emails": null,
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "",
                  "notes": "",
                  "reference": "",
                  "options": null,
                  "created_at": "2016-10-09 11:04:35",
                  "updated_at": "2018-08-14 13:09:21",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": "//www.gravatar.com/avatar/45357c125af15b6df8864a71a653bea2"
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "giftcard",
                  "customer_id": "",
                  "merchant_id": "",
                  "user_id": "",
                  "nickname": "GIFT CARD",
                  "has_cvv": 0,
                  "is_default": 0,
                  "method": "giftcard",
                  "person_name": null,
                  "card_type": null,
                  "card_last_four": null,
                  "card_exp": null,
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": null,
                  "address_country": null,
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-06-05 16:45:43",
                  "updated_at": "2018-06-05 16:45:43",
                  "card_exp_datetime": [],
                  "is_usable_in_vt": false,
                  "customer": {
                    "id": "",
                    "firstname": "",
                    "lastname": "",
                    "company": "",
                    "email": "",
                    "cc_emails": null,
                    "cc_sms": null,
                    "phone": "",
                    "address_1": "",
                    "address_2": "",
                    "address_city": "",
                    "address_state": "",
                    "address_zip": "",
                    "address_country": "",
                    "notes": null,
                    "reference": "",
                    "options": null,
                    "created_at": null,
                    "updated_at": null,
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": false
                  }
                },
                "user": {
                  "id": "2d089742-6aca-462d-8db3-c2966e1f9e68",
                  "system_admin": true,
                  "name": "Morty Junior",
                  "email": "demo@fattmerchant.com",
                  "email_verification_sent_at": "2018-09-26 18:24:21",
                  "email_verified_at": "2016-05-11 17:13:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "signedApplication": true,
                    "editedOnboardingInformation": false,
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-18 14:11:46",
                  "updated_at": "2018-09-26 18:24:21",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/772cbf95746d7da86789cc3634c46ba8",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_default": false
                }
              }
            }
          }
        },
        "summary": "Send Transaction Receipt by SMS",
        "operationId": "Send Transaction Receipt by SMS",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Authentication Token, Active Team and Enabled Team Required**\n\nSimilar to the transaction ID function; it gathers information on a transaction and sends an SMS (text message) receipt to the customer.\nMust be enabled by customers with a list of CC numbers.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/register": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": [
                {
                  "id": "4f1b-f10a",
                  "nickname": "Tech Area Z8 (3594291)",
                  "status_port": "3594291",
                  "serial": "124124",
                  "type": "dejavoo",
                  "model": "",
                  "isDefault": false,
                  "register_num": "3594291"
                },
                {
                  "id": "18a3-83e7",
                  "nickname": "DANIEL HOME OFFICE (3598304)",
                  "status_port": "3598304",
                  "serial": "123123",
                  "type": "dejavoo",
                  "model": "",
                  "isDefault": true,
                  "register_num": "3598304"
                },
                {
                  "id": "94d1-318d",
                  "nickname": "Tech Area Z1 (6880)",
                  "status_port": "6880",
                  "serial": "2434",
                  "type": "dejavoo",
                  "model": "",
                  "isDefault": false,
                  "register_num": "6880"
                }
              ]
            }
          }
        },
        "summary": "Get all registers (terminals)",
        "operationId": "Get all registers (terminals)",
        "description": "_(please click this box ^^ for more information)_\n\nReturns a list of your registers (devices). This route should be used when your user needs to pick a register to send a charge to. \nThis route returns an array of objects containing details and a register id to be used in POST terminal/charge",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/charge/queue": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "71d7f9ec-59d9-4fab-891e-fa612cd2e275",
                "invoice_id": "02936d77-93cc-48a6-b712-7f7234c19b7c",
                "reference_id": "",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "charge",
                "source": "terminalservice.dejavoo",
                "source_ip": "127.0.0.1",
                "is_merchant_present": true,
                "merchant_id": "07420820-9b00-4816-9199-2071af7019f4",
                "user_id": "61822412-09b3-4f5a-a90f-fd9f1db703b4",
                "customer_id": "df25411e-4b01-4efe-8368-496b959b253f",
                "payment_method_id": null,
                "is_manual": true,
                "success": false,
                "message": "terminalservice.waiting",
                "meta": {
                  "lineItems": [],
                  "tax": 0,
                  "subtotal": 0.01,
                  "printReceipt": "Merchant",
                  "paymentType": "Credit",
                  "invoiceId": "02936d77-93cc-48a6-b712-7f7234c19b7c",
                  "message": "terminalservice.waiting",
                  "type": "charge",
                  "registerId": "ba5c-5b03",
                  "registerStatusPort": "3594291",
                  "registerNickname": "Dejavoo Z8",
                  "registerSerial": "",
                  "registerType": "dejavoo"
                },
                "total": 0.01,
                "method": "card",
                "pre_auth": false,
                "is_captured": 0,
                "last_four": "",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-12-19 14:23:43",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "settled_at": null,
                "created_at": "2018-12-19 19:23:43",
                "updated_at": "2018-12-19 19:23:43",
                "gateway_id": null,
                "total_refunded": 0,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": false,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "gateway_name": "",
                "customer": {
                  "id": "df25411e-4b01-4efe-8368-496b959b253f",
                  "firstname": "Swipe",
                  "lastname": "Customer",
                  "company": "",
                  "email": "",
                  "cc_emails": null,
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "",
                  "notes": "",
                  "reference": "Physical Terminal customer",
                  "options": null,
                  "created_at": "2018-12-19 19:23:43",
                  "updated_at": "2018-12-19 19:23:43",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": false
                },
                "child_transactions": [],
                "files": [],
                "payment_method": null,
                "user": {
                  "id": "61822412-09b3-4f5a-a90f-fd9f1db703b4",
                  "name": "David Johnson",
                  "email": "demo1@abc.com",
                  "email_verification_sent_at": "2018-09-27 15:24:38",
                  "email_verified_at": "2017-12-05 19:05:53",
                  "is_api_key": false,
                  "acknowledgments": {
                    "setPassword": true,
                    "godviewOmniSearchTooltip": true,
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-12-05 19:05:53",
                  "updated_at": "2018-11-20 14:51:28",
                  "deleted_at": null,
                  "brand": "Fattmerchant",
                  "gravatar": "//www.gravatar.com/avatar/1cd5aef1d36d07e495abb73061f857d4",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_default": false
                }
              }
            }
          }
        },
        "summary": "Charge (Queue)",
        "operationId": "Charge (Queue)",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\nWakes terminal with request for user to insert card. This call is asynchronous, it responds immidiately with a new transaction ID even before the terminal receives the request to start the transaction.\nThis is helpful, because where POST terminal/charge would timeout if a customer takes too long to swipe/dip, this call will still give you the transaction id.\nOnce you have the id, begin polling the [`GET transaction/{id}` resource](https://fattmerchant.docs.apiary.io/#reference/0/transactions/get-a-transaction's-information).\n\nThe [`GET /transaction/{id}`](https://fattmerchant.docs.apiary.io/#reference/0/transactions/get-a-transaction's-information) will return be the actual transaction record and show whether the transaction has been completed on the device.\n\nWe recommend checking the [`GET /transaction/{id}`](https://fattmerchant.docs.apiary.io/#reference/0/transactions/get-a-transaction's-information) \nevery 5 seconds and no more.\n\n**NOTE on throttling:** all api routes are throttled to 150 requests per minute per IP.\n\nThe `message` of the resulting transaction will be \"terminalservice.waiting\" until the transaction is finished, after that, the success flag will be either 0 or 1, and the `message` will either contain an error string, or be `''` (empty string).\n\n**NOTE on customer experience:** we have found that once a customer sees the price show up on the terminal, \nmany times they will begin a discussion about the price. \nPerhaps their goal is to alter the price. This takes time and often caused the old route (POST charge) \nto timeout. It can also cause extra strain on your servers and ours during polling with the charge/queue route. \nSo we recommend showing the customer the price _before_ initiating the POST charge/queue. \nAn easy way to do this is to use our [prompt route](https://fattmerchant.docs.apiary.io/#reference/0/terminals/prompt-(choice)) \nto display the price and have the user approve it. \nThis way, the discussion can take place _before_ you initiate the charge.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/charge": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "charge",
                "source": "terminalservice.dejavoo",
                "is_merchant_present": true,
                "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                "payment_method_id": "e422a5a1-0088-4038-ae22-7a6d17aaf599",
                "is_manual": true,
                "success": true,
                "message": "",
                "meta": {
                  "lineItems": [
                    {
                      "id": "optional-fm-catalog-item-id",
                      "item": "Demo Item",
                      "details": "this is a regular demo item",
                      "quantity": 1,
                      "price": 0.01
                    }
                  ],
                  "subtotal": 0.01,
                  "tax": 0,
                  "taxRate": 10,
                  "isBulkInvoice": false,
                  "taxOverride": false,
                  "update_inventory": true,
                  "reference": 2477,
                  "RegisterId": 3594291,
                  "ResultCode": 0,
                  "RespMSG": "APPROVAL 145599",
                  "Message": "Approved",
                  "AuthCode": 145599,
                  "PNRef": 810618212223,
                  "PaymentType": "Credit",
                  "TransType": "Sale",
                  "SN": 118816524647,
                  "ExtData": {
                    "Amount": "0.01",
                    "InvNum": "6",
                    "CardType": "VISA",
                    "BatchNum": "56",
                    "Tip": "0.00",
                    "CashBack": "0.00",
                    "Fee": "0.00",
                    "AcntLast4": "0281",
                    "Name": "YOU/A GIFT FOR",
                    "SVC": "0.00",
                    "TotalAmt": "0.01",
                    "DISC": "0.00",
                    "Donation": "0.00",
                    "SHFee": "0.00",
                    "RwdPoints": "0",
                    "RwdBalance": "0",
                    "RwdIssued": "",
                    "EBTFSLedgerBalance": "",
                    "EBTFSAvailBalance": "",
                    "EBTFSBeginBalance": "",
                    "EBTCashLedgerBalance": "",
                    "EBTCashAvailBalance": "",
                    "EBTCashBeginBalance": "",
                    "RewardCode": "",
                    "AcqRefData": "",
                    "ProcessData": "",
                    "RefNo": "",
                    "RewardQR": "",
                    "Language": "English",
                    "EntryType": "Swipe",
                    "table_num": "0",
                    "clerk_id": "",
                    "ticket_num": "",
                    "ControlNum": "",
                    "TaxCity": "0.00",
                    "TaxState": "0.00",
                    "Cust1": "",
                    "Cust1Value": "",
                    "Cust2": "",
                    "Cust2Value": "",
                    "Cust3": "",
                    "Cust3Value": "",
                    "AcntFirst4": "4941"
                  },
                  "CVMResult": 2,
                  "cancelled": false,
                  "gatewayStatus": 200,
                  "gatewayStatusText": "OK",
                  "printReceipt": "Both",
                  "paymentType": "Credit",
                  "type": "charge",
                  "registerId": "4f1b-f10a",
                  "registerStatusPort": "3594291",
                  "registerNickname": "Tech Area Z8 (3594291)",
                  "registerSerial": "124124",
                  "registerType": "dejavoo"
                },
                "total": 0.01,
                "method": "card",
                "pre_auth": false,
                "is_captured": 0,
                "last_four": "",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-04-16 18:55:32",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2018-04-16 18:55:32",
                "updated_at": "2018-04-16 18:55:32",
                "total_refunded": 0,
                "is_refundable": true,
                "is_voided": false,
                "is_voidable": true,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "customer": {
                  "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "firstname": "A",
                  "lastname": "Customer",
                  "company": "",
                  "email": "",
                  "cc_emails": [],
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "USA",
                  "notes": "",
                  "reference": "",
                  "options": "",
                  "created_at": "2018-02-23 22:32:19",
                  "updated_at": "2018-02-23 22:32:19",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": false
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "e422a5a1-0088-4038-ae22-7a6d17aaf599",
                  "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                  "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "nickname": "VISA: YOU/A GIFT FOR (ending in: 0281)",
                  "has_cvv": 0,
                  "is_default": 1,
                  "method": "card",
                  "person_name": "YOU/A GIFT FOR",
                  "card_type": "visa",
                  "card_last_four": "0281",
                  "card_exp": "992099",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "",
                  "address_country": "",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-04-16 18:55:31",
                  "updated_at": "2018-04-16 18:55:31",
                  "card_exp_datetime": "2107-03-31 23:59:59",
                  "customer": {
                    "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                    "firstname": "A",
                    "lastname": "Customer",
                    "company": "",
                    "email": "",
                    "cc_emails": [],
                    "cc_sms": null,
                    "phone": "",
                    "address_1": "",
                    "address_2": "",
                    "address_city": "",
                    "address_state": "",
                    "address_zip": "",
                    "address_country": "USA",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2018-02-23 22:32:19",
                    "updated_at": "2018-02-23 22:32:19",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": false
                  }
                },
                "user": {
                  "id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "system_admin": true,
                  "name": "David Johnson",
                  "email": "demo1@abc.com",
                  "email_verification_sent_at": "2017-05-16 17:35:16",
                  "email_verified_at": "2017-05-16 17:35:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-12 15:57:19",
                  "updated_at": "2018-04-16 18:08:55",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/1cd5aef1d36d07e495abb73061f857d4",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "success": false,
                "message": "User Cancelled",
                "gatewayStatus": 200,
                "gatewayStatusText": "OK",
                "cancelled": true,
                "status": 400
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "validation": "register not found",
                "status": 422,
                "message": "Validation Error"
              }
            }
          }
        },
        "summary": "Charge",
        "operationId": "Charge",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\nWakes terminal with request for user to insert card. This call is SYNCHRONOUS, meaning, the network call will stay open until the transaction is finished.\nThe call will timeout after only 60 seconds if the transaction is not completed, and you will not recieve the response, unless you poll the GET transactions resource. For this reason, we reccommend using the `charge/queue` resource above.\n\n**WARNING:** Only use this call for customers who will not exceed the 60 second timeout - the charge/queue route is a more robust (and newer solution). **IF YOU USE THIS ROUTE, AND A CUSTOMER TAKES LONGER THAN 60 SECONDS, YOUR TRANSACTION WILL NOT BE RECORDED IN FATTMERCHANT**",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/credit": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "07b7f3ac-20f0-472a-bf51-a4d534d1579d",
                "invoice_id": "",
                "reference_id": "",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "credit",
                "source": "terminalservice.dejavoo",
                "is_merchant_present": true,
                "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                "payment_method_id": "bb61a1f5-c3ab-460f-ba8f-0aef9b4c550b",
                "is_manual": true,
                "success": true,
                "message": "",
                "meta": {
                  "reference": 2479,
                  "update_inventory": true,
                  "taxOverride": false,
                  "isBulkInvoice": false,
                  "taxRate": 10,
                  "tax": 0,
                  "subtotal": -0.02,
                  "lineItems": [
                    {
                      "price": "-0.02",
                      "quantity": 1,
                      "details": "",
                      "item": "Item Name"
                    }
                  ],
                  "RegisterId": 3594291,
                  "ResultCode": 0,
                  "RespMSG": "Approved Offline",
                  "Message": "Approved",
                  "PaymentType": "Credit",
                  "TransType": "Return",
                  "SN": 118816524647,
                  "ExtData": {
                    "Amount": "0.02",
                    "InvNum": "7",
                    "CardType": "VISA",
                    "BatchNum": "56",
                    "Tip": "0.00",
                    "CashBack": "0.00",
                    "Fee": "0.00",
                    "AcntLast4": "1396",
                    "Name": "JOHNSON/DAVID",
                    "SVC": "0.00",
                    "TotalAmt": "0.02",
                    "DISC": "0.00",
                    "Donation": "0.00",
                    "SHFee": "0.00",
                    "RwdPoints": "0",
                    "RwdBalance": "0",
                    "RwdIssued": "",
                    "EBTFSLedgerBalance": "",
                    "EBTFSAvailBalance": "",
                    "EBTFSBeginBalance": "",
                    "EBTCashLedgerBalance": "",
                    "EBTCashAvailBalance": "",
                    "EBTCashBeginBalance": "",
                    "RewardCode": "",
                    "AcqRefData": "",
                    "ProcessData": "",
                    "RefNo": "",
                    "RewardQR": "",
                    "Language": "English",
                    "EntryType": "CHIP",
                    "table_num": "0",
                    "clerk_id": "",
                    "ticket_num": "",
                    "ControlNum": "",
                    "TaxCity": "0.00",
                    "TaxState": "0.00",
                    "Cust1": "",
                    "Cust1Value": "",
                    "Cust2": "",
                    "Cust2Value": "",
                    "Cust3": "",
                    "Cust3Value": "",
                    "AcntFirst4": "4147"
                  },
                  "EMVData": {
                    "AID": "A0000000031010",
                    "AppName": "CHASE VISA",
                    "TVR": "0080008000",
                    "TSI": "E800",
                    "IAD": "",
                    "ARC": "00"
                  },
                  "CVMResult": 2,
                  "cancelled": false,
                  "gatewayStatus": 200,
                  "gatewayStatusText": "OK",
                  "printReceipt": "Both",
                  "paymentType": "Credit",
                  "type": "credit",
                  "registerId": "4f1b-f10a",
                  "registerStatusPort": "3594291",
                  "registerNickname": "Tech Area Z8 (3594291)",
                  "registerSerial": "124124",
                  "registerType": "dejavoo"
                },
                "total": 0.02,
                "method": "card",
                "pre_auth": false,
                "is_captured": 0,
                "last_four": "",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-04-16 19:02:24",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2018-04-16 19:02:24",
                "updated_at": "2018-04-16 19:02:24",
                "total_refunded": 0,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": true,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "customer": {
                  "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "firstname": "A",
                  "lastname": "Customer",
                  "company": "",
                  "email": "",
                  "cc_emails": [],
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "USA",
                  "notes": "",
                  "reference": "",
                  "options": "",
                  "created_at": "2018-02-23 22:32:19",
                  "updated_at": "2018-02-23 22:32:19",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": false
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "bb61a1f5-c3ab-460f-ba8f-0aef9b4c550b",
                  "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                  "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "nickname": "VISA: JOHNSON/DAVID (ending in: 1396)",
                  "has_cvv": 0,
                  "is_default": 1,
                  "method": "card",
                  "person_name": "JOHNSON/DAVID",
                  "card_type": "visa",
                  "card_last_four": "1396",
                  "card_exp": "992099",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "",
                  "address_country": "",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-04-16 19:02:24",
                  "updated_at": "2018-04-16 19:02:24",
                  "card_exp_datetime": "2107-03-31 23:59:59",
                  "customer": {
                    "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                    "firstname": "A",
                    "lastname": "Customer",
                    "company": "",
                    "email": "",
                    "cc_emails": [],
                    "cc_sms": null,
                    "phone": "",
                    "address_1": "",
                    "address_2": "",
                    "address_city": "",
                    "address_state": "",
                    "address_zip": "",
                    "address_country": "USA",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2018-02-23 22:32:19",
                    "updated_at": "2018-02-23 22:32:19",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": false
                  }
                },
                "user": {
                  "id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "system_admin": true,
                  "name": "David Johnson",
                  "email": "demo1@abc.com",
                  "email_verification_sent_at": "2017-05-16 17:35:16",
                  "email_verified_at": "2017-05-16 17:35:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-12 15:57:19",
                  "updated_at": "2018-04-16 18:08:55",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/1cd5aef1d36d07e495abb73061f857d4",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "success": false,
                "message": "User Cancelled",
                "gatewayStatus": 200,
                "gatewayStatusText": "OK",
                "cancelled": true,
                "status": 400
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "validation": "register not found",
                "status": 422,
                "message": "Validation Error"
              }
            }
          }
        },
        "summary": "Credit",
        "operationId": "Credit",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\nWakes terminal with request for user to insert card for a credit.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "reference": {
                      "type": "number"
                    },
                    "taxRate": {
                      "type": "number"
                    },
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    },
                    "lineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "details": {
                            "type": "string"
                          },
                          "item": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "customerId": {
                  "type": "string"
                },
                "invoiceId": {
                  "type": "string"
                },
                "register": {
                  "type": "string"
                },
                "total": {
                  "type": "number"
                }
              },
              "example": {
                "meta": {
                  "reference": 2479,
                  "taxRate": 10,
                  "tax": 0,
                  "subtotal": -0.02,
                  "lineItems": [
                    {
                      "price": "-0.02",
                      "quantity": 1,
                      "details": "",
                      "item": "Item Name"
                    }
                  ]
                },
                "customerId": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                "invoiceId": "",
                "register": "4f1b-f10a",
                "total": 0.02
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/void-or-refund": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "4be11b7e-21cb-4c9e-ba8f-5e173d13d7b7",
                "invoice_id": "",
                "reference_id": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "refund",
                "source": "terminalservice.dejavoo",
                "is_merchant_present": true,
                "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                "payment_method_id": "bf1aee65-dad9-4b74-8800-a75e435e3e7b",
                "is_manual": true,
                "success": true,
                "message": "",
                "meta": {
                  "lineItems": [
                    {
                      "item": "",
                      "details": "",
                      "quantity": 1,
                      "price": "0.01"
                    }
                  ],
                  "subtotal": 0.01,
                  "tax": 0,
                  "taxRate": 10,
                  "isBulkInvoice": false,
                  "taxOverride": false,
                  "update_inventory": true,
                  "reference": 2477,
                  "RegisterId": 3594291,
                  "ResultCode": 0,
                  "RespMSG": "Approved Offline",
                  "Message": "Approved",
                  "AuthCode": 145599,
                  "PNRef": 810618212223,
                  "PaymentType": "Credit",
                  "TransType": "Return",
                  "SN": 118816524647,
                  "ExtData": {
                    "Amount": "0.01",
                    "InvNum": "10",
                    "CardType": "VISA",
                    "BatchNum": "56",
                    "Tip": "0.00",
                    "CashBack": "0.00",
                    "Fee": "0.00",
                    "AcntLast4": "0281",
                    "Name": "YOU/A GIFT FOR",
                    "SVC": "0.00",
                    "TotalAmt": "0.01",
                    "DISC": "0.00",
                    "Donation": "0.00",
                    "SHFee": "0.00",
                    "RwdPoints": "0",
                    "RwdBalance": "0",
                    "RwdIssued": "",
                    "EBTFSLedgerBalance": "",
                    "EBTFSAvailBalance": "",
                    "EBTFSBeginBalance": "",
                    "EBTCashLedgerBalance": "",
                    "EBTCashAvailBalance": "",
                    "EBTCashBeginBalance": "",
                    "RewardCode": "",
                    "AcqRefData": "",
                    "ProcessData": "",
                    "RefNo": "",
                    "RewardQR": "",
                    "Language": "English",
                    "EntryType": "Swipe",
                    "table_num": "0",
                    "clerk_id": "",
                    "ticket_num": "",
                    "ControlNum": "",
                    "TaxCity": "0.00",
                    "TaxState": "0.00",
                    "Cust1": "",
                    "Cust1Value": "",
                    "Cust2": "",
                    "Cust2Value": "",
                    "Cust3": "",
                    "Cust3Value": "",
                    "AcntFirst4": "4941"
                  },
                  "CVMResult": 2,
                  "cancelled": false,
                  "gatewayStatus": 200,
                  "gatewayStatusText": "OK",
                  "printReceipt": "Both",
                  "paymentType": "Credit",
                  "type": "refund",
                  "registerId": "4f1b-f10a",
                  "registerStatusPort": "3594291",
                  "registerNickname": "Tech Area Z8 (3594291)",
                  "registerSerial": "124124",
                  "registerType": "dejavoo"
                },
                "total": 0.01,
                "method": "card",
                "pre_auth": false,
                "is_captured": 0,
                "last_four": "5114",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-04-16 19:09:37",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2018-04-16 19:09:37",
                "updated_at": "2018-04-16 19:09:37",
                "total_refunded": 0,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": false,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "customer": {
                  "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "firstname": "A",
                  "lastname": "Customer",
                  "company": "",
                  "email": "",
                  "cc_emails": [],
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "USA",
                  "notes": "",
                  "reference": "",
                  "options": "",
                  "created_at": "2018-02-23 22:32:19",
                  "updated_at": "2018-02-23 22:32:19",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": false
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "bf1aee65-dad9-4b74-8800-a75e435e3e7b",
                  "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                  "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "nickname": "VISA: YOU/A GIFT FOR (ending in: 0281)",
                  "has_cvv": 0,
                  "is_default": 1,
                  "method": "card",
                  "person_name": "YOU/A GIFT FOR",
                  "card_type": "visa",
                  "card_last_four": "0281",
                  "card_exp": "992099",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "",
                  "address_country": "",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-04-16 19:09:36",
                  "updated_at": "2018-04-16 19:09:36",
                  "card_exp_datetime": "2107-03-31 23:59:59",
                  "customer": {
                    "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                    "firstname": "A",
                    "lastname": "Customer",
                    "company": "",
                    "email": "",
                    "cc_emails": [],
                    "cc_sms": null,
                    "phone": "",
                    "address_1": "",
                    "address_2": "",
                    "address_city": "",
                    "address_state": "",
                    "address_zip": "",
                    "address_country": "USA",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2018-02-23 22:32:19",
                    "updated_at": "2018-02-23 22:32:19",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": false
                  }
                },
                "user": {
                  "id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "system_admin": true,
                  "name": "David Johnson",
                  "email": "demo1@abc.com",
                  "email_verification_sent_at": "2017-05-16 17:35:16",
                  "email_verified_at": "2017-05-16 17:35:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-12 15:57:19",
                  "updated_at": "2018-04-16 18:08:55",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/1cd5aef1d36d07e495abb73061f857d4",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "success": false,
                "message": "User Cancelled",
                "gatewayStatus": 200,
                "gatewayStatusText": "OK",
                "cancelled": true,
                "status": 400
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "validation": "register not found",
                "status": 422,
                "message": "Validation Error"
              }
            }
          }
        },
        "summary": "Void or Refund (omni picks for you)",
        "operationId": "Void or Refund (omni picks for you)",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\nThis is the preferred method for cancelling an existing transaction.\n\nWakes terminal for either a refund OR a void. Given a transactionId in the POST body, the Omni terminal resource will decide \nwhether to process a refund OR a void depending on the `created_at` date of the original transaction.\nIf the date is before the current batch time (usually 8pm EST) the transaction will be voided (removed from the current batch)\nIf the transaction was already batched, the terminal will begin a refund request and the customer will be prompted\nto insert a card.\n\nIf the terminal runs a void (because the transaction hasn't batched yet, the customer doesn't need to do anything.\nThe terminal will simply print a void reciept (depending on the value of `printReceipt`)\n\nIf given a register id, the void or refund will be sent to the register (terminal) specified. However, if the transaction needs to be voided, the register id MUST be the same id as the original transaction.\nOne register cannot be used to void a transaction on a separate register. It is therefore recommended that you DO NOT supply a register id.\n\nThe sample body shows the result if refund is chosen. For a void sample, (please see the void result)[https://fattmerchant.docs.apiary.io/#reference/0/terminals/void].",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "reference": {
                      "type": "number"
                    },
                    "taxRate": {
                      "type": "number"
                    },
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    },
                    "lineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "details": {
                            "type": "string"
                          },
                          "item": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "transactionId": {
                  "type": "string"
                },
                "printReceipt": {
                  "type": "string"
                },
                "paymentType": {
                  "type": "string"
                },
                "register": {
                  "type": "string"
                },
                "total": {
                  "type": "number"
                }
              },
              "example": {
                "meta": {
                  "reference": 2479,
                  "taxRate": 10,
                  "tax": 0,
                  "subtotal": -0.02,
                  "lineItems": [
                    {
                      "price": "-0.02",
                      "quantity": 1,
                      "details": "",
                      "item": "Item Name"
                    }
                  ]
                },
                "transactionId": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1",
                "printReceipt": "Merchant",
                "paymentType": "Credit",
                "register": "4f1b-f10a",
                "total": 0.02
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/refund": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "4be11b7e-21cb-4c9e-ba8f-5e173d13d7b7",
                "invoice_id": "",
                "reference_id": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "refund",
                "source": "terminalservice.dejavoo",
                "is_merchant_present": true,
                "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                "payment_method_id": "bf1aee65-dad9-4b74-8800-a75e435e3e7b",
                "is_manual": true,
                "success": true,
                "message": "",
                "meta": {
                  "lineItems": [
                    {
                      "item": "",
                      "details": "",
                      "quantity": 1,
                      "price": "0.01"
                    }
                  ],
                  "subtotal": 0.01,
                  "tax": 0,
                  "taxRate": 10,
                  "isBulkInvoice": false,
                  "taxOverride": false,
                  "update_inventory": true,
                  "reference": 2477,
                  "RegisterId": 3594291,
                  "ResultCode": 0,
                  "RespMSG": "Approved Offline",
                  "Message": "Approved",
                  "AuthCode": 145599,
                  "PNRef": 810618212223,
                  "PaymentType": "Credit",
                  "TransType": "Return",
                  "SN": 118816524647,
                  "ExtData": {
                    "Amount": "0.01",
                    "InvNum": "10",
                    "CardType": "VISA",
                    "BatchNum": "56",
                    "Tip": "0.00",
                    "CashBack": "0.00",
                    "Fee": "0.00",
                    "AcntLast4": "0281",
                    "Name": "YOU/A GIFT FOR",
                    "SVC": "0.00",
                    "TotalAmt": "0.01",
                    "DISC": "0.00",
                    "Donation": "0.00",
                    "SHFee": "0.00",
                    "RwdPoints": "0",
                    "RwdBalance": "0",
                    "RwdIssued": "",
                    "EBTFSLedgerBalance": "",
                    "EBTFSAvailBalance": "",
                    "EBTFSBeginBalance": "",
                    "EBTCashLedgerBalance": "",
                    "EBTCashAvailBalance": "",
                    "EBTCashBeginBalance": "",
                    "RewardCode": "",
                    "AcqRefData": "",
                    "ProcessData": "",
                    "RefNo": "",
                    "RewardQR": "",
                    "Language": "English",
                    "EntryType": "Swipe",
                    "table_num": "0",
                    "clerk_id": "",
                    "ticket_num": "",
                    "ControlNum": "",
                    "TaxCity": "0.00",
                    "TaxState": "0.00",
                    "Cust1": "",
                    "Cust1Value": "",
                    "Cust2": "",
                    "Cust2Value": "",
                    "Cust3": "",
                    "Cust3Value": "",
                    "AcntFirst4": "4941"
                  },
                  "CVMResult": 2,
                  "cancelled": false,
                  "gatewayStatus": 200,
                  "gatewayStatusText": "OK",
                  "printReceipt": "Both",
                  "paymentType": "Credit",
                  "type": "refund",
                  "registerId": "4f1b-f10a",
                  "registerStatusPort": "3594291",
                  "registerNickname": "Tech Area Z8 (3594291)",
                  "registerSerial": "124124",
                  "registerType": "dejavoo"
                },
                "total": 0.01,
                "method": "card",
                "pre_auth": false,
                "is_captured": 0,
                "last_four": "5114",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-04-16 19:09:37",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2018-04-16 19:09:37",
                "updated_at": "2018-04-16 19:09:37",
                "total_refunded": 0,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": false,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "customer": {
                  "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "firstname": "A",
                  "lastname": "Customer",
                  "company": "",
                  "email": "",
                  "cc_emails": [],
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "USA",
                  "notes": "",
                  "reference": "",
                  "options": "",
                  "created_at": "2018-02-23 22:32:19",
                  "updated_at": "2018-02-23 22:32:19",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": false
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "bf1aee65-dad9-4b74-8800-a75e435e3e7b",
                  "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                  "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "nickname": "VISA: YOU/A GIFT FOR (ending in: 0281)",
                  "has_cvv": 0,
                  "is_default": 1,
                  "method": "card",
                  "person_name": "YOU/A GIFT FOR",
                  "card_type": "visa",
                  "card_last_four": "0281",
                  "card_exp": "992099",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "",
                  "address_country": "",
                  "purged_at": null,
                  "deleted_at": null,
                  "created_at": "2018-04-16 19:09:36",
                  "updated_at": "2018-04-16 19:09:36",
                  "card_exp_datetime": "2107-03-31 23:59:59",
                  "customer": {
                    "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                    "firstname": "A",
                    "lastname": "Customer",
                    "company": "",
                    "email": "",
                    "cc_emails": [],
                    "cc_sms": null,
                    "phone": "",
                    "address_1": "",
                    "address_2": "",
                    "address_city": "",
                    "address_state": "",
                    "address_zip": "",
                    "address_country": "USA",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2018-02-23 22:32:19",
                    "updated_at": "2018-02-23 22:32:19",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": false
                  }
                },
                "user": {
                  "id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "system_admin": true,
                  "name": "David Johnson",
                  "email": "demo1@abc.com",
                  "email_verification_sent_at": "2017-05-16 17:35:16",
                  "email_verified_at": "2017-05-16 17:35:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-12 15:57:19",
                  "updated_at": "2018-04-16 18:08:55",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/1cd5aef1d36d07e495abb73061f857d4",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "success": false,
                "message": "User Cancelled",
                "gatewayStatus": 200,
                "gatewayStatusText": "OK",
                "cancelled": true,
                "status": 400
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "validation": "register not found",
                "status": 422,
                "message": "Validation Error"
              }
            }
          }
        },
        "summary": "Refund",
        "operationId": "Refund",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\n(Advanced)\nFor processing refunds, we highly recommend using [void-or-refund](https://fattmerchant.docs.apiary.io/#reference/0/terminals/void-or-refund-(omni-picks-for-you)).\nOnly use this route if you are CERTAIN the transaction has already batched.\n\nWakes terminal with request for user to insert card for a refund.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "reference": {
                      "type": "number"
                    },
                    "taxRate": {
                      "type": "number"
                    },
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    },
                    "lineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "details": {
                            "type": "string"
                          },
                          "item": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "transactionId": {
                  "type": "string"
                },
                "printReceipt": {
                  "type": "string"
                },
                "paymentType": {
                  "type": "string"
                },
                "register": {
                  "type": "string"
                },
                "total": {
                  "type": "number"
                }
              },
              "example": {
                "meta": {
                  "reference": 2479,
                  "taxRate": 10,
                  "tax": 0,
                  "subtotal": -0.02,
                  "lineItems": [
                    {
                      "price": "-0.02",
                      "quantity": 1,
                      "details": "",
                      "item": "Item Name"
                    }
                  ]
                },
                "transactionId": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1",
                "printReceipt": "Merchant",
                "paymentType": "Credit",
                "register": "4f1b-f10a",
                "total": 0.02
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/void": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "796998bc-8d7d-42ab-bdbd-1c9c6c94f801",
                "invoice_id": "",
                "reference_id": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1",
                "recurring_transaction_id": "",
                "auth_id": null,
                "type": "void",
                "source": "terminalservice.dejavoo",
                "is_merchant_present": true,
                "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                "payment_method_id": "e422a5a1-0088-4038-ae22-7a6d17aaf599",
                "is_manual": true,
                "success": true,
                "message": "",
                "meta": {
                  "lineItems": [
                    {
                      "item": "",
                      "details": "",
                      "quantity": 1,
                      "price": "0.01"
                    }
                  ],
                  "subtotal": 0.01,
                  "tax": 0,
                  "taxRate": 10,
                  "isBulkInvoice": false,
                  "taxOverride": false,
                  "update_inventory": true,
                  "reference": 2477,
                  "RegisterId": 3594291,
                  "ResultCode": 0,
                  "RespMSG": "Approved Offline",
                  "Message": "Approved",
                  "AuthCode": 145599,
                  "PNRef": 810618212223,
                  "PaymentType": "Credit",
                  "TransType": "Void Sale",
                  "SN": 118816524647,
                  "ExtData": {
                    "Amount": "0.01",
                    "InvNum": "11",
                    "CardType": "VISA",
                    "BatchNum": "56",
                    "Tip": "0.00",
                    "CashBack": "0.00",
                    "Fee": "0.00",
                    "AcntLast4": "0281",
                    "Name": "",
                    "SVC": "0.00",
                    "TotalAmt": "0.01",
                    "DISC": "0.00",
                    "Donation": "0.00",
                    "SHFee": "0.00",
                    "RwdPoints": "0",
                    "RwdBalance": "0",
                    "RwdIssued": "",
                    "EBTFSLedgerBalance": "",
                    "EBTFSAvailBalance": "",
                    "EBTFSBeginBalance": "",
                    "EBTCashLedgerBalance": "",
                    "EBTCashAvailBalance": "",
                    "EBTCashBeginBalance": "",
                    "RewardCode": "",
                    "AcqRefData": "",
                    "ProcessData": "",
                    "RefNo": "",
                    "RewardQR": "",
                    "Language": "English",
                    "EntryType": "Manual",
                    "table_num": "0",
                    "clerk_id": "",
                    "ticket_num": "",
                    "ControlNum": "",
                    "TaxCity": "0.00",
                    "TaxState": "0.00",
                    "Cust1": "",
                    "Cust1Value": "",
                    "Cust2": "",
                    "Cust2Value": "",
                    "Cust3": "",
                    "Cust3Value": "",
                    "AcntFirst4": "4941"
                  },
                  "CVMResult": 2,
                  "cancelled": false,
                  "gatewayStatus": 200,
                  "gatewayStatusText": "OK",
                  "printReceipt": "Both",
                  "paymentType": "Credit",
                  "type": "void",
                  "registerId": "4f1b-f10a",
                  "registerStatusPort": "3594291",
                  "registerNickname": "Tech Area Z8 (3594291)",
                  "registerSerial": "124124",
                  "registerType": "dejavoo",
                  "refId": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1"
                },
                "total": 0.01,
                "method": "card",
                "pre_auth": false,
                "is_captured": 0,
                "last_four": "5114",
                "interchange_code": "",
                "interchange_fee": null,
                "batch_id": "",
                "batched_at": "2018-04-16 19:22:51",
                "emv_response": "",
                "avs_response": "",
                "cvv_response": "",
                "pos_entry": "",
                "pos_salesperson": "",
                "receipt_email_at": null,
                "receipt_sms_at": null,
                "created_at": "2018-04-16 19:22:51",
                "updated_at": "2018-04-16 19:22:51",
                "total_refunded": 0,
                "is_refundable": false,
                "is_voided": false,
                "is_voidable": false,
                "schedule_id": null,
                "child_captures": [],
                "parent_auth": null,
                "customer": {
                  "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "firstname": "A",
                  "lastname": "Customer",
                  "company": "",
                  "email": "",
                  "cc_emails": [],
                  "cc_sms": null,
                  "phone": "",
                  "address_1": "",
                  "address_2": "",
                  "address_city": "",
                  "address_state": "",
                  "address_zip": "",
                  "address_country": "USA",
                  "notes": "",
                  "reference": "",
                  "options": "",
                  "created_at": "2018-02-23 22:32:19",
                  "updated_at": "2018-02-23 22:32:19",
                  "deleted_at": null,
                  "allow_invoice_credit_card_payments": true,
                  "gravatar": false
                },
                "child_transactions": [],
                "files": [],
                "payment_method": {
                  "id": "e422a5a1-0088-4038-ae22-7a6d17aaf599",
                  "customer_id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                  "merchant_id": "27fad5e4-0210-4c91-9596-417b0ea0dbb1",
                  "user_id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "nickname": "VISA: YOU/A GIFT FOR (ending in: 0281)",
                  "has_cvv": 0,
                  "is_default": 1,
                  "method": "card",
                  "person_name": "YOU/A GIFT FOR",
                  "card_type": "visa",
                  "card_last_four": "0281",
                  "card_exp": "992099",
                  "bank_name": null,
                  "bank_type": null,
                  "bank_holder_type": null,
                  "address_1": null,
                  "address_2": null,
                  "address_city": null,
                  "address_state": null,
                  "address_zip": "",
                  "address_country": "",
                  "purged_at": null,
                  "deleted_at": "2018-04-16 18:55:32",
                  "created_at": "2018-04-16 18:55:31",
                  "updated_at": "2018-04-16 18:55:32",
                  "card_exp_datetime": "2107-03-31 23:59:59",
                  "customer": {
                    "id": "2a503ed1-99ea-4b35-a30a-605253f7c05a",
                    "firstname": "A",
                    "lastname": "Customer",
                    "company": "",
                    "email": "",
                    "cc_emails": [],
                    "cc_sms": null,
                    "phone": "",
                    "address_1": "",
                    "address_2": "",
                    "address_city": "",
                    "address_state": "",
                    "address_zip": "",
                    "address_country": "USA",
                    "notes": "",
                    "reference": "",
                    "options": "",
                    "created_at": "2018-02-23 22:32:19",
                    "updated_at": "2018-02-23 22:32:19",
                    "deleted_at": null,
                    "allow_invoice_credit_card_payments": true,
                    "gravatar": false
                  }
                },
                "user": {
                  "id": "dbc85118-3309-4129-b966-0108c0fb18a0",
                  "system_admin": true,
                  "name": "David Johnson",
                  "email": "demo1@abc.com",
                  "email_verification_sent_at": "2017-05-16 17:35:16",
                  "email_verified_at": "2017-05-16 17:35:33",
                  "is_api_key": false,
                  "acknowledgments": {
                    "tutorial": true,
                    "godviewWelcome": true
                  },
                  "created_at": "2016-05-12 15:57:19",
                  "updated_at": "2018-04-16 18:08:55",
                  "deleted_at": null,
                  "gravatar": "//www.gravatar.com/avatar/1cd5aef1d36d07e495abb73061f857d4",
                  "team_admin": null,
                  "team_enabled": null,
                  "team_role": null,
                  "merchant_options": [],
                  "is_portal": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "examples": {
              "application/json": {
                "success": false,
                "message": "User Cancelled",
                "gatewayStatus": 200,
                "gatewayStatusText": "OK",
                "cancelled": true,
                "status": 400
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "validation": "register not found",
                "status": 422,
                "message": "Validation Error"
              }
            }
          }
        },
        "summary": "Void",
        "operationId": "Void",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\n(Advanced)\nFor processing voids, we highly recommend using [void-or-refund](https://fattmerchant.docs.apiary.io/#reference/0/terminals/void-or-refund-(omni-picks-for-you)).\nOnly use this route if you are CERTAIN the transaction has NOT BEEN batched.\n\nWakes terminal with request for user to insert card for a void.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "reference": {
                      "type": "number"
                    },
                    "taxRate": {
                      "type": "number"
                    },
                    "tax": {
                      "type": "number"
                    },
                    "subtotal": {
                      "type": "number"
                    },
                    "lineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "details": {
                            "type": "string"
                          },
                          "item": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "transactionId": {
                  "type": "string"
                },
                "printReceipt": {
                  "type": "string"
                },
                "paymentType": {
                  "type": "string"
                },
                "register": {
                  "type": "string"
                },
                "total": {
                  "type": "number"
                }
              },
              "example": {
                "meta": {
                  "reference": 2479,
                  "taxRate": 10,
                  "tax": 0,
                  "subtotal": -0.02,
                  "lineItems": [
                    {
                      "price": "-0.02",
                      "quantity": 1,
                      "details": "",
                      "item": "Item Name"
                    }
                  ]
                },
                "transactionId": "5114aea7-5c7f-40ab-8a62-84f239e4b2b1",
                "printReceipt": "Merchant",
                "paymentType": "Credit",
                "register": "4f1b-f10a",
                "total": 0.02
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/print": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "RegisterId": 3594291,
                "Message": "Success",
                "cancelled": false,
                "gatewayStatus": 200,
                "gatewayStatusText": "OK",
                "success": true,
                "RespMSG": "undefined"
              }
            }
          }
        },
        "summary": "Print",
        "operationId": "Print",
        "description": "_(please click this box ^^ for more information)_\n\nPrint a message on your terminal using the actual paper printer. The string within the `message` field will be printed.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "register": {
                  "type": "string"
                }
              },
              "example": {
                "message": "Hello, World",
                "register": "4f1b-f10a"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/promptInput": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "input": "G164"
              }
            }
          }
        },
        "summary": "Prompt (Input)",
        "operationId": "Prompt (Input)",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\nWakes terminal with request for user to input text. Returns a number or string of the user's input.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/promptChoice": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "index": 0,
                "choice": "Credit"
              }
            }
          }
        },
        "summary": "Prompt (Choice)",
        "operationId": "Prompt (Choice)",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\nWakes terminal with request for user to select a choice. Returns the `choice` and the `index` of the choice within the provided `choices` array.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "title": "Credit or Debit",
                "choices": [
                  "Credit",
                  "Debit"
                ]
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/terminal/{registerId}/status/{transactionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "RefId": "9084e510-471f-4091-875f-6b732e825c77",
                "Message": "Not found",
                "cancelled": false,
                "gatewayStatus": 200,
                "gatewayStatusText": "OK",
                "success": true,
                "RespMSG": "undefined"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "validation": "Transaction not found",
                "status": 422,
                "message": "Validation Error"
              }
            }
          }
        },
        "summary": "Get Transaction Status",
        "operationId": "Get Transaction Status",
        "description": "_(please click this box ^^ for more information)_\n\n**Note: Valid Register Required**\n\n(Advanced)\n\nWakes terminal with request for data about the supplied transaction. This call requires a register id, and for the given transaction to be in the current batch.\n\nThe response isn't the same response as the `POST terminal/charge`, or `POST terminal/charge/queue` or the `GET transaction/{id}` route either.\nThe response is the data from the terminal which normally we don't expose.\n\n**Please be aware that this call queries the terminal directly, will cause the terminal to be busy for several seconds, and will not work correctly if the terminal is already busy.**\n\n**If you are polling for transaction data** it's recommended to use the [`GET transaction/{id}` route](https://fattmerchant.docs.apiary.io/#reference/0/transactions/get-a-transaction's-information) instead.\n\nThis route simply gives you a way to get data straight from the terminal just in case you need to.\n\n- If an invalid transaction id is given, the response will be a 422.\n\n- If the transaction exists within our API, but not on the device's batch, the response (shown below) is a 200\n\n- If the device is busy, the response is a 200, (also shown below)\n\n- If the device isn't busy, and the transaction is found in the batch, you will get a 200 and the response is the first 200 shown below.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "The registerId value.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The transactionId value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/webhook": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "a1069804-48f3-48fe-aa3f-654fbbc395aa",
                "user_id": "user1",
                "merchant_id": null,
                "reference_id": null,
                "url": "https://requestb.in/13q0j",
                "event": "update_transaction",
                "created_at": "2020-03-20 02:29:30",
                "updated_at": "2020-03-20 02:29:30",
                "deleted_at": null
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {
              "application/json": {
                "target_url": [
                  "The target url field is required."
                ],
                "event": [
                  "The event field is required."
                ]
              }
            }
          }
        },
        "summary": "Create new Webhook for all of my Merchants",
        "operationId": "Create new Webhook for all of my Merchants",
        "description": "_(please click this box ^^ for more information)_\n\n(ADVANCED)\n**Note: Authentication Token and Team Admin Status Required**\n\nThis route is used for users whose api key is tied to multiple merchants. It offers the ability to create a webhook that fires for all of your merchants.\n\nA webhook endpoint must have a target url and an event. The fire_for_all_merchants parameter is an optional parameter which will create the webhook for all of your merchants.\nIf this parameter is set to true, `merchant_id` will be `null` in the response body.",
        "tags": [],
        "parameters": [
          {
            "name": "target_url",
            "in": "query",
            "description": "The URL which will accept the data when the webhook fires.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fire_for_all_merchants",
            "in": "query",
            "description": "Defaults to false. If true, the webhook will be created for all merchants that are associated with your api key.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "event",
            "in": "query",
            "description": "The event which will trigger the webhook.",
            "required": true,
            "type": "string",
            "enum": [
              "create_customer",
              "create_invoice",
              "create_item",
              "create_scheduled_invoice",
              "create_transaction",
              "create_user",
              "create_webhook",
              "delete_item",
              "delete_scheduled_invoice",
              "delete_webhook",
              "update_item",
              "send_invoice",
              "set_branding",
              "set_gateway",
              "set_plan",
              "update_customer",
              "update_invoice",
              "update_scheduled_invoice",
              "update_transaction",
              "update_user"
            ]
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "target_url": {
                  "type": "string"
                },
                "fire_for_all_merchants": {
                  "type": "boolean"
                },
                "event": {
                  "type": "string"
                }
              },
              "example": {
                "target_url": "https://requestb.in/13q0j",
                "fire_for_all_merchants": true,
                "event": "update_transaction"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "current_page": 2,
                "data": [
                  {
                    "id": "25fb488a-c907-4e6c-87db-086150c5fa79",
                    "user_id": "user1",
                    "merchant_id": "merchant2",
                    "reference_id": null,
                    "url": "https://requestb.in/13q0jl11",
                    "event": "create_item",
                    "created_at": "2020-03-03 15:34:23",
                    "updated_at": "2020-03-03 15:34:23",
                    "deleted_at": null
                  },
                  {
                    "id": "280e68e6-fe5e-44dc-8b2c-df5bea7e9ac4",
                    "user_id": "user1",
                    "merchant_id": "merchant2",
                    "reference_id": null,
                    "url": "https://requestb.in/13q0jl11",
                    "event": "create_item",
                    "created_at": "2020-03-04 21:26:19",
                    "updated_at": "2020-03-04 21:26:19",
                    "deleted_at": null
                  },
                  {
                    "id": "2a43bdef-8577-401b-8ba8-7e195243287e",
                    "user_id": "user1",
                    "merchant_id": "merchant2",
                    "reference_id": null,
                    "url": "https://eni6l96xhnaqg.x.pipedream.net/",
                    "event": "create_transaction",
                    "created_at": "2020-03-05 19:23:51",
                    "updated_at": "2020-03-05 19:23:51",
                    "deleted_at": null
                  },
                  {
                    "id": "3158600c-d431-4b9a-9cca-5ad334239997",
                    "user_id": "user1",
                    "merchant_id": null,
                    "reference_id": null,
                    "url": "https://requestb.in/13q0jl11",
                    "event": "create_item",
                    "created_at": "2020-03-02 23:18:58",
                    "updated_at": "2020-03-02 23:18:58",
                    "deleted_at": null
                  },
                  {
                    "id": "34bf75ab-7906-468c-a636-4381fbe318c0",
                    "user_id": "user1",
                    "merchant_id": "merchant1",
                    "reference_id": "8994e803-2e16-4bb0-b5ba-47fd9b447a0a",
                    "url": "http://localhost:3006/fm/webhook/update_invoice/8994e803-2e16-4bb0-b5ba-47fd9b447a0a",
                    "event": "update_invoice",
                    "created_at": "2019-09-11 14:52:30",
                    "updated_at": "2019-09-11 14:52:30",
                    "deleted_at": null
                  }
                ],
                "first_page_url": "https://apiprod.fattlabs.com/webhook?page=1",
                "from": 6,
                "last_page": 8,
                "last_page_url": "https://apiprod.fattlabs.com/webhook?page=8",
                "next_page_url": "https://apiprod.fattlabs.com/webhook?page=3",
                "path": "https://apiprod.fattlabs.com",
                "per_page": "5",
                "prev_page_url": "https://apiprod.fattlabs.com/webhook?page=1",
                "to": 10,
                "total": 39
              }
            }
          }
        },
        "summary": "Get All Webhooks",
        "operationId": "Get All Webhooks",
        "description": "_(please click this box ^^ for more information)_\n\nThis will return all Webhooks that you created for your merchant(s). This response comes with pagination. You can use the `per_page` and `page` parameters to determine how the data will come back.",
        "tags": [],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "description": "How many webhook objects should return per page. Defaults to 20.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Which page should return. Defaults to return 1st page",
            "required": false,
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/webhook/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "cf1c6275-ff7c-4c23-ae70-4740b2ca2d32",
                "user_id": "user1",
                "merchant_id": "merchant1",
                "reference_id": "8994e803-2e16-4bb0-b5ba-47fd9b447a0a",
                "url": "http://localhost:3006/fm/webhook/update_item/8994e803-2e16-4bb0-b5ba-47fd9b447a0a",
                "event": "update_item",
                "created_at": "2019-09-11 14:52:30",
                "updated_at": "2020-05-01 14:32:55",
                "deleted_at": "2020-05-01 14:32:55"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "Get Webhook by ID",
        "operationId": "Get Webhook by ID",
        "description": "_(please click this box ^^ for more information)_\n\nRetrieves the webhook matching the given `id` and then returns details about the webhook found in the 200 response.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "examples": {
              "application/json": {
                "id": "cf1c6275-ff7c-4c23-ae70-4740b2ca2d32",
                "user_id": "user1",
                "merchant_id": "merchant1",
                "reference_id": "8994e803-2e16-4bb0-b5ba-47fd9b447a0a",
                "url": "http://localhost:3006/fm/webhook/update_item/8994e803-2e16-4bb0-b5ba-47fd9b447a0a",
                "event": "update_item",
                "created_at": "2019-09-11 14:52:30",
                "updated_at": "2020-05-01 14:32:55",
                "deleted_at": "2020-05-01 14:32:55"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "headers": {},
            "examples": {}
          }
        },
        "summary": "Delete a Webhook",
        "operationId": "Delete a Webhook",
        "description": "_(please click this box ^^ for more information)_\n\nThis resource will soft delete a webhook in the database making it inaccessable via the `GET webhook` resource.",
        "tags": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "e.g. application/json",
            "required": false,
            "x-example": "application/json",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id value.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Authentication Tokens": {},
    "Bills": {},
    "Catalog": {},
    "Charge": {},
    "Credit": {},
    "Customers": {},
    "Dispute Management": {},
    "Invoices": {},
    "Scheduled Invoices": {},
    "Payment Methods": {},
    "Password Resets": {},
    "Reports": {},
    "Self": {},
    "Teams": {},
    "Transactions": {},
    "Terminals": {},
    "Webhooks": {}
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "",
      "tokenUrl": "",
      "scopes": {}
    }
  },
  "tags": []
}